<TeXmacs|2.1.3>

<project|sicp.tm>

<style|<tuple|book|british>>

<\body>
  <\hide-preamble>
    <assign|chapter-nr|1>
  </hide-preamble>

  <chapter|Building Abstractions with Data>

  <section|Introduction to Data Abstraction>

  In <hlink|1.1.8|#1.1.8>, we noted that a procedure used as an element in
  creating a more complex procedure could be regarded not only as a
  collection of particular operations but also as a procedural abstraction.
  That is, the details of how the procedure was implemented could be
  suppressed, and the particular procedure itself could be replaced by any
  other procedure with the same overall behavior. In other words, we could
  make an abstraction that would separate the way the procedure would be used
  from the details of how the procedure would be implemented in terms of more
  primitive procedures. The analogous notion for compound data is called
  <em|data abstraction><index|data abstraction>. Data abstraction is a
  methodology that enables us to isolate how a compound data object is used
  from the details of how it is constructed from more primitive data objects.

  The basic idea of data abstraction is to structure the programs that are to
  use compound data objects so that they operate on \Pabstract data.\Q That
  is, our programs should use data in such a way as to make no assumptions
  about the data that are not strictly necessary for performing the task at
  hand. At the same time, a \Pconcrete\Q data representation is defined
  independent of the programs that use the data. The interface between these
  two parts of our system will be a set of procedures, called
  <em|selectors><index|selectors> and <em|constructors><index|constructors>,
  that implement the abstract data in terms of the concrete representation.
  To illustrate this technique, we will consider how to design a set of
  procedures for manipulating rational numbers.

  <subsection|Example: Arithmetic Operations for Rational Numbers>

  Suppose we want to do arithmetic with rational numbers. We want to be able
  to add, subtract, multiply, and divide them and to test whether two
  rational numbers are equal.

  Let us begin by assuming that we already have a way of constructing a
  rational number from a numerator and a denominator. We also assume that,
  given a rational number, we have a way of extracting (or selecting) its
  numerator and its denominator. Let us further assume that the constructor
  and selectors are available as procedures:

  <\itemize>
    <item><code*|(make-rat \<langle\><var|n>\<rangle\>
    \<langle\><var|d>\<rangle\>)> returns the rational number whose numerator
    is the integer <code*|\<langle\><var|n>\<rangle\>> and whose denominator
    is the integer <code*|\<langle\><var|d>\<rangle\>>.

    <item><code*|(numer \<langle\><var|x>\<rangle\>)> returns the numerator
    of the rational number <code*|\<langle\><var|x>\<rangle\>>.

    <item><code*|(denom \<langle\><var|x>\<rangle\>)> returns the denominator
    of the rational number <code*|\<langle\><var|x>\<rangle\>>.
  </itemize>

  We are using here a powerful strategy of synthesis: <em|wishful
  thinking><index|wishful thinking>. We haven't yet said how a rational
  number is represented, or how the procedures <code*|numer>, <code*|denom>,
  and <code*|make-rat> should be implemented. Even so, if we did have these
  three procedures, we could then add, subtract, multiply, divide, and test
  equality by using the following relations:

  <\eqnarray*>
    <tformat|<table|<row|<cell|<frac|n<rsub|1>|d<rsub|1>>+<frac|n<rsub|2>|d<rsub|2>>>|<cell|=>|<cell|<frac|n<rsub|1>
    d<rsub|2>+n<rsub|2> d<rsub|1>|d<rsub|1>*d<rsub|2>>,>>|<row|<cell|<frac|n<rsub|1>|d<rsub|1>>-<frac|n<rsub|2>|d<rsub|2>>>|<cell|=>|<cell|<frac|n<rsub|1>
    d<rsub|2>-n<rsub|2> d<rsub|1>|d<rsub|1>*d<rsub|2>>,>>|<row|<cell|<frac|n<rsub|1>|d<rsub|1>>\<times\><frac|n<rsub|2>|d<rsub|2>>>|<cell|=>|<cell|<frac|n<rsub|1>
    n<rsub|2>|d<rsub|1>*d<rsub|2>>,>>|<row|<cell|<frac|n<rsub|1><around*|/|d<rsub|1>|\<nobracket\>>|n<rsub|2><around*|/|d<rsub|2>|\<nobracket\>>>>|<cell|=>|<cell|<frac|n<rsub|1>
    d<rsub|2>|d<rsub|1>*n<rsub|2>>,>>|<row|<cell|<frac|n<rsub|1>|d<rsub|1>>>|<cell|=>|<cell|<frac|n<rsub|2>|d<rsub|2>>,<text|if
    and only if>n<rsub|1> d<rsub|2>=n<rsub|2> d<rsub|1>.>>>>
  </eqnarray*>

  We can express these rules as procedures:

  <\session|scheme|default>
    <\input|Scheme] >
      <\with|prog-scripts|scheme>
        (define (add-rat x y)

        \ \ (make-rat (+ (* (numer x) (denom y))

        \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (numer y) (denom x)))

        \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))
      </with>
    </input>

    <\input|Scheme] >
      (define (sub-rat x y)

      \ \ (make-rat (- (* (numer x) (denom y))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (numer y) (denom x)))

      \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))
    </input>

    <\input|Scheme] >
      (define (mul-rat x y)

      \ \ (make-rat (* (numer x) (numer y))

      \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))
    </input>

    <\input|Scheme] >
      (define (div-rat x y)

      \ \ (make-rat (* (numer x) (denom y))

      \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (numer y))))
    </input>

    <\input|Scheme] >
      (define (equal-rat? x y)

      \ \ (= (* (numer x) (denom y))

      \ \ \ \ \ (* (numer y) (denom x))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now we have the operations on rational numbers defined in terms of the
  selector and constructor procedures <code*|numer>, <code*|denom>, and
  <code*|make-rat>. But we haven't yet defined these. What we need is some
  way to glue together a numerator and a denominator to form a rational
  number.

  <paragraph*|Pairs>

  To enable us to implement the concrete level of our data abstraction, our
  language provides a compound structure called a <em|pair><index|pair>,
  which can be constructed with the primitive procedure <code*|cons>. This
  procedure takes two arguments and returns a compound data object that
  contains the two arguments as parts. Given a pair, we can extract the parts
  using the primitive procedures <code*|car> and <code*|cdr>.<\footnote>
    The name <code*|cons> stands for \Pconstruct.\Q The names <code*|car> and
    <code*|cdr> derive from the original implementation of Lisp on the IBM
    704. That machine had an addressing scheme that allowed one to reference
    the \Paddress\Q and \Pdecrement\Q parts of a memory location. <code*|Car>
    stands for \PContents of Address part of Register\Q and <code*|cdr>
    (pronounced \Pcould-er\Q) stands for \PContents of Decrement part of
    Register.\Q
  </footnote> Thus, we can use <code*|cons>, <code*|car>, and <code*|cdr> as
  follows:

  <\session|scheme|default>
    <\input|Scheme] >
      (define x (cons 1 2))
    </input>

    <\unfolded-io|Scheme] >
      (car x)
    <|unfolded-io>
      1
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (cdr x)
    <|unfolded-io>
      2
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Notice that a pair is a data object that can be given a name and
  manipulated, just like a primitive data object. Moreover, <code*|cons> can
  be used to form pairs whose elements are pairs, and so on:

  <\session|scheme|default>
    <\input|Scheme] >
      (define x (cons 1 2))
    </input>

    <\input|Scheme] >
      (define y (cons 3 4))
    </input>

    <\input|Scheme] >
      (define z (cons x y))
    </input>

    <\unfolded-io|Scheme] >
      (car (car z))
    <|unfolded-io>
      1
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  In <hlink|2.2|2_002e2.xhtml#g_t2_002e2> we will see how this ability to
  combine pairs means that pairs can be used as general-purpose building
  blocks to create all sorts of complex data structures. The single
  compound-data primitive <em|pair><index|pair>, implemented by the
  procedures <code*|cons>, <code*|car>, and <code*|cdr>, is the only glue we
  need. Data objects constructed from pairs are called
  <em|list-structured><index|list-structured> data.

  <paragraph*|Representing rational numbers>

  Pairs offer a natural way to complete the rational-number system. Simply
  represent a rational number as a pair of two integers: a numerator and a
  denominator. Then <code*|make-rat>, <code*|numer>, and <code*|denom> are
  readily implemented as follows:<\footnote>
    Another way to define the selectors and constructor is

    <\scm-code>
      (define make-rat cons)

      (define numer car)

      (define denom cdr)
    </scm-code>

    The first definition associates the name <code*|make-rat> with the value
    of the expression <code*|cons>, which is the primitive procedure that
    constructs pairs. Thus <code*|make-rat> and <code*|cons> are names for
    the same primitive constructor.

    Defining selectors and constructors in this way is efficient: Instead of
    <code*|make-rat> <em|calling> <code*|cons>, <code*|make-rat> <em|is>
    <code*|cons>, so there is only one procedure called, not two, when
    <code*|make-rat> is called. On the other hand, doing this defeats
    debugging aids that trace procedure calls or put breakpoints on procedure
    calls: You may want to watch <code*|make-rat> being called, but you
    certainly don't want to watch every call to <code*|cons>.

    We have chosen not to use this style of definition in this book.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-rat n d) (cons n d))
    </input>

    <\input|Scheme] >
      (define (numer x) (car x))
    </input>

    <\input|Scheme] >
      (define (denom x) (cdr x))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Also, in order to display the results of our computations, we can print
  rational numbers by printing the numerator, a slash, and the
  denominator:<\footnote>
    <code*|Display> is the Scheme primitive for printing data. The Scheme
    primitive <code*|newline> starts a new line for printing. Neither of
    these procedures returns a useful value, so in the uses of
    <code*|print-rat> below, we show only what <code*|print-rat> prints, not
    what the interpreter prints as the value returned by <code*|print-rat>.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (print-rat x)

      \ \ (newline)

      \ \ (display (numer x))

      \ \ (display "/")

      \ \ (display (denom x)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now we can try our rational-number procedures:

  <\session|scheme|default>
    <\input|Scheme] >
      (define one-half (make-rat 1 2))
    </input>

    <\input|Scheme] >
      (print-rat one-half)
    </input>

    <\input|Scheme] >
      (define one-third (make-rat 1 3))
    </input>

    <\input|Scheme] >
      (print-rat (add-rat one-half one-third))
    </input>

    <\input|Scheme] >
      (print-rat (mul-rat one-half one-third))
    </input>

    <\input|Scheme] >
      (print-rat (add-rat one-third one-third))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  As the final example shows, our rational-number implementation does not
  reduce rational numbers to lowest terms. We can remedy this by changing
  <code*|make-rat>. If we have a <code*|gcd> procedure like the one in
  <hlink|1.2.5|#1.2.5> that produces the greatest common divisor of two
  integers, we can use <code*|gcd> to reduce the numerator and the
  denominator to lowest terms before constructing the pair:

  <\session|scheme|default>
    <\input>
      Scheme]\ 
    <|input>
      (define (make-rat n d)

      \ \ (let ((g (gcd n d)))

      \ \ \ \ (cons (/ n g) (/ d g))))
    </input>
  </session>

  Now we have

  <\session|scheme|default>
    <\input|Scheme] >
      (print-rat (add-rat one-third one-third))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  as desired. This modification was accomplished by changing the constructor
  <code*|make-rat> without changing any of the procedures (such as
  <code*|add-rat> and <code*|mul-rat>) that implement the actual operations.

  <\exercise>
    Define a better version of <code*|make-rat> that handles both positive
    and negative arguments. <code*|Make-rat> should normalize the sign so
    that if the rational number is positive, both the numerator and
    denominator are positive, and if the rational number is negative, only
    the numerator is negative.
  </exercise>

  <subsection|Abstraction Barriers>

  Before continuing with more examples of compound data and data abstraction,
  let us consider some of the issues raised by the rational-number example.
  We defined the rational-number operations in terms of a constructor
  <code*|make-rat> and selectors <code*|numer> and <code*|denom>. In general,
  the underlying idea of data abstraction is to identify for each type of
  data object a basic set of operations in terms of which all manipulations
  of data objects of that type will be expressed, and then to use only those
  operations in manipulating the data.

  We can envision the structure of the rational-number system as shown in
  <hlink|Figure 2.1|#fig2.1>. The horizontal lines represent <em|abstraction
  barriers><index|abstraction barriers> that isolate different \Plevels\Q of
  the system. At each level, the barrier separates the programs (above) that
  use the data abstraction from the programs (below) that implement the data
  abstraction. Programs that use rational numbers manipulate them solely in
  terms of the procedures supplied \Pfor public use\Q by the rational-number
  package: <code*|add-rat>, <code*|sub-rat>, <code*|mul-rat>,
  <code*|div-rat>, and <code*|equal-rat?>. These, in turn, are implemented
  solely in terms of the constructor and selectors <code*|make-rat>,
  <code*|numer>, and <code*|denom>, which themselves are implemented in terms
  of pairs. The details of how pairs are implemented are irrelevant to the
  rest of the rational-number package so long as pairs can be manipulated by
  the use of <code*|cons>, <code*|car>, and <code*|cdr>. In effect,
  procedures at each level are the interfaces that define the abstraction
  barriers and connect the different levels.

  <\big-figure|<tabular|<tformat|<twith|table-halign|l>|<cwith|2|2|5|5|cell-halign|c>|<cwith|3|3|5|5|cell-halign|c>|<cwith|8|8|5|5|cell-halign|c>|<cwith|7|7|5|5|cell-halign|c>|<cwith|6|6|5|5|cell-halign|c>|<cwith|5|5|5|5|cell-halign|c>|<cwith|7|7|5|5|cell-tborder|1ln>|<cwith|6|6|5|5|cell-bborder|1ln>|<cwith|7|7|5|5|cell-bborder|1ln>|<cwith|8|8|5|5|cell-tborder|1ln>|<cwith|7|7|5|5|cell-lborder|1ln>|<cwith|7|7|4|4|cell-rborder|1ln>|<cwith|7|7|5|5|cell-rborder|1ln>|<cwith|7|7|6|6|cell-lborder|1ln>|<cwith|1|1|5|5|cell-halign|c>|<cwith|2|2|5|5|cell-tborder|0ln>|<cwith|1|1|2|2|cell-row-span|1>|<cwith|1|1|2|2|cell-col-span|7>|<cwith|1|1|2|2|cell-halign|c>|<cwith|1|1|2|8|cell-tborder|1ln>|<cwith|1|1|2|8|cell-bborder|1ln>|<cwith|2|2|2|2|cell-tborder|1ln>|<cwith|1|1|1|1|cell-rborder|1ln>|<cwith|1|1|2|8|cell-rborder|1ln>|<cwith|1|1|2|8|cell-lborder|1ln>|<cwith|2|2|5|5|cell-bborder|0ln>|<cwith|4|4|5|5|cell-tborder|0ln>|<cwith|3|3|3|3|cell-row-span|1>|<cwith|3|3|3|3|cell-col-span|5>|<cwith|3|3|3|3|cell-halign|c>|<cwith|4|4|5|5|cell-bborder|0ln>|<cwith|6|6|5|5|cell-tborder|0ln>|<cwith|5|5|4|4|cell-row-span|1>|<cwith|5|5|4|4|cell-col-span|3>|<cwith|5|5|4|6|cell-tborder|1ln>|<cwith|4|4|4|4|cell-bborder|1ln>|<cwith|5|5|4|6|cell-bborder|1ln>|<cwith|6|6|4|4|cell-tborder|1ln>|<cwith|5|5|3|3|cell-rborder|1ln>|<cwith|5|5|4|6|cell-rborder|1ln>|<cwith|5|5|4|6|cell-lborder|1ln>|<cwith|5|5|4|4|cell-halign|c>|<cwith|3|3|3|7|cell-tborder|1ln>|<cwith|2|2|3|3|cell-bborder|1ln>|<cwith|3|3|3|7|cell-bborder|1ln>|<cwith|4|4|3|3|cell-tborder|1ln>|<cwith|3|3|2|2|cell-rborder|1ln>|<cwith|3|3|3|7|cell-rborder|1ln>|<cwith|3|3|3|7|cell-lborder|1ln>|<cwith|2|2|1|-1|cell-width|30px>|<cwith|2|2|1|-1|cell-hmode|exact>|<cwith|2|2|9|9|cell-width|>|<cwith|2|2|9|9|cell-hmode|auto>|<cwith|2|2|1|-1|cell-height|40px>|<cwith|2|2|1|-1|cell-vmode|exact>|<cwith|4|4|1|-1|cell-height|40px>|<cwith|4|4|1|-1|cell-vmode|exact>|<cwith|6|6|1|-1|cell-height|40px>|<cwith|6|6|1|-1|cell-vmode|exact>|<cwith|8|8|1|-1|cell-height|40px>|<cwith|8|8|1|-1|cell-vmode|exact>|<cwith|8|8|5|5|cell-valign|c>|<cwith|6|6|5|5|cell-valign|c>|<cwith|4|4|5|5|cell-halign|c>|<cwith|4|4|5|5|cell-valign|c>|<cwith|2|2|5|5|cell-valign|c>|<table|<row|<cell|>|<cell|Programs
  that use rational numbers>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|Rational
  number in problem domain>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|add-rat
  sub-rat <text-dots>>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|Rational
  numbers as numerators and denominators>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|make-rat
  numer denom>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|Rational
  numbers as pairs>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|cons
  car cdr>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|However
  pairs are implemented>|<cell|>|<cell|>|<cell|>|<cell|>>>>>>
    <label|fig2.1>Data-abstraction barriers in the rational-number package.
  </big-figure>

  This simple idea has many advantages. One advantage is that it makes
  programs much easier to maintain and to modify. Any complex data structure
  can be represented in a variety of ways with the primitive data structures
  provided by a programming language. Of course, the choice of representation
  influences the programs that operate on it; thus, if the representation
  were to be changed at some later time, all such programs might have to be
  modified accordingly. This task could be time-consuming and expensive in
  the case of large programs unless the dependence on the representation were
  to be confined by design to a very few program modules.

  For example, an alternate way to address the problem of reducing rational
  numbers to lowest terms is to perform the reduction whenever we access the
  parts of a rational number, rather than when we construct it. This leads to
  different constructor and selector procedures:

  <\scm-code>
    (define (make-rat n d)

    \ \ (cons n d))

    (define (numer x)

    \ \ (let ((g (gcd (car x) (cdr x))))

    \ \ \ \ (/ (car x) g)))

    (define (denom x)

    \ \ (let ((g (gcd (car x) (cdr x))))

    \ \ \ \ (/ (cdr x) g))
  </scm-code>

  The difference between this implementation and the previous one lies in
  when we compute the <code*|gcd>. If in our typical use of rational numbers
  we access the numerators and denominators of the same rational numbers many
  times, it would be preferable to compute the <code*|gcd> when the rational
  numbers are constructed. If not, we may be better off waiting until access
  time to compute the <code*|gcd>. In any case, when we change from one
  representation to the other, the procedures <code*|add-rat>,
  <code*|sub-rat>, and so on do not have to be modified at all.

  Constraining the dependence on the representation to a few interface
  procedures helps us design programs as well as modify them, because it
  allows us to maintain the flexibility to consider alternate
  implementations. To continue with our simple example, suppose we are
  designing a rational-number package and we can't decide initially whether
  to perform the <code*|gcd> at construction time or at selection time. The
  data-abstraction methodology gives us a way to defer that decision without
  losing the ability to make progress on the rest of the system.

  <\exercise>
    <label|ex2.2>Consider the problem of representing line segments in a
    plane. Each segment is represented as a pair of points: a starting point
    and an ending point. Define a constructor <code*|make-segment> and
    selectors <code*|start-segment> and <code*|end-segment> that define the
    representation of segments in terms of points. Furthermore, a point can
    be represented as a pair of numbers: the <math|x> coordinate and the
    <math|y> coordinate. Accordingly, specify a constructor
    <code*|make-point> and selectors <code*|x-point> and <code*|y-point> that
    define this representation. Finally, using your selectors and
    constructors, define a procedure <code*|midpoint-segment> that takes a
    line segment as argument and returns its midpoint (the point whose
    coordinates are the average of the coordinates of the endpoints). To try
    your procedures, you'll need a way to print points:

    <\scm-code>
      (define (print-point p)

      \ \ (newline)

      \ \ (display "(")

      \ \ (display (x-point p))

      \ \ (display ",")

      \ \ (display (y-point p))

      \ \ (display ")"))
    </scm-code>
  </exercise>

  <\exercise>
    <label|ex2.3>Implement a representation for rectangles in a plane. (Hint:
    You may want to make use of <hlink|Exercise 2.2|#ex2.2>.) In terms of
    your constructors and selectors, create procedures that compute the
    perimeter and the area of a given rectangle. Now implement a different
    representation for rectangles. Can you design your system with suitable
    abstraction barriers, so that the same perimeter and area procedures will
    work using either representation?
  </exercise>

  <subsection|What Is Meant by Data?>

  We began the rational-number implementation in
  <hlink|2.1.1|#g_t2_002e1_002e1> by implementing the rational-number
  operations <code*|add-rat>, <code*|sub-rat>, and so on in terms of three
  unspecified procedures: <code*|make-rat>, <code*|numer>, and <code*|denom>.
  At that point, we could think of the operations as being defined in terms
  of data objects\Vnumerators, denominators, and rational numbers\Vwhose
  behavior was specified by the latter three procedures.

  But exactly what is meant by <em|data><index|data>? It is not enough to say
  \Pwhatever is implemented by the given selectors and constructors.\Q
  Clearly, not every arbitrary set of three procedures can serve as an
  appropriate basis for the rational-number implementation. We need to
  guarantee that, if we construct a rational number <code*|x> from a pair of
  integers <code*|n> and <code*|d>, then extracting the <code*|numer> and the
  <code*|denom> of <code*|x> and dividing them should yield the same result
  as dividing <code*|n> by <code*|d>. In other words, <code*|make-rat>,
  <code*|numer>, and <code*|denom> must satisfy the condition that, for any
  integer <code*|n> and any non-zero integer <code*|d>, if <code*|x> is
  <code*|(make-rat n d)>, then <math|<frac|<with|mode|text|(numer
  x)>|<with|mode|text|(denom x)>>=<frac|<with|mode|text|n>|<with|mode|text|d>>>.
  In fact, this is the only condition <code*|make-rat>, <code*|numer>, and
  <code*|denom> must fulfill in order to form a suitable basis for a
  rational-number representation. In general, we can think of data as defined
  by some collection of selectors and constructors, together with specified
  conditions that these procedures must fulfill in order to be a valid
  representation.<\footnote>
    Surprisingly, this idea is very difficult to formulate rigorously. There
    are two approaches to giving such a formulation. One, pioneered by C. A.
    R. <hlink|Hoare (1972)|References.xhtml#Hoare-_00281972_0029>, is known
    as the method of <em|abstract models><index|abstract models>. It
    formalizes the \Pprocedures plus conditions\Q specification as outlined
    in the rational-number example above. Note that the condition on the
    rational-number representation was stated in terms of facts about
    integers (equality and division). In general, abstract models define new
    kinds of data objects in terms of previously defined types of data
    objects. Assertions about data objects can therefore be checked by
    reducing them to assertions about previously defined data objects.
    Another approach, introduced by Zilles at <abbr|MIT>, by Goguen,
    Thatcher, Wagner, and Wright at IBM (see <hlink|Thatcher et al.
    1978|References.xhtml#Thatcher-et-al_002e-1978>), and by Guttag at
    Toronto (see <hlink|Guttag 1977|References.xhtml#Guttag-1977>), is called
    <em|algebraic specification><index|algebraic specification>. It regards
    the \Pprocedures\Q as elements of an abstract algebraic system whose
    behavior is specified by axioms that correspond to our \Pconditions,\Q
    and uses the techniques of abstract algebra to check assertions about
    data objects. Both methods are surveyed in the paper by <hlink|Liskov and
    Zilles (1975)|References.xhtml#Liskov-and-Zilles-_00281975_0029>.
  </footnote>

  This point of view can serve to define not only \Phigh-level\Q data
  objects, such as rational numbers, but lower-level objects as well.
  Consider the notion of a pair, which we used in order to define our
  rational numbers. We never actually said what a pair was, only that the
  language supplied procedures <code*|cons>, <code*|car>, and <code*|cdr> for
  operating on pairs. But the only thing we need to know about these three
  operations is that if we glue two objects together using <code*|cons> we
  can retrieve the objects using <code*|car> and <code*|cdr>. That is, the
  operations satisfy the condition that, for any objects <code*|x> and
  <code*|y>, if <code*|z> is <code*|(cons x y)> then <code*|(car z)> is
  <code*|x> and <code*|(cdr z)> is <code*|y>. Indeed, we mentioned that these
  three procedures are included as primitives in our language. However, any
  triple of procedures that satisfies the above condition can be used as the
  basis for implementing pairs. This point is illustrated strikingly by the
  fact that we could implement <code*|cons>, <code*|car>, and <code*|cdr>
  without using any data structures at all but only using procedures. Here
  are the definitions:

  <\scm-code>
    (define (cons x y)

    \ \ (define (dispatch m)

    \ \ \ \ (cond ((= m 0) x)

    \ \ \ \ \ \ \ \ \ \ ((= m 1) y)

    \ \ \ \ \ \ \ \ \ \ (else (error "Argument not 0 or 1 -- CONS" m))))

    \ \ dispatch)

    \;

    (define (car z) (z 0))

    \;

    (define (cdr z) (z 1))
  </scm-code>

  This use of procedures corresponds to nothing like our intuitive notion of
  what data should be. Nevertheless, all we need to do to show that this is a
  valid way to represent pairs is to verify that these procedures satisfy the
  condition given above.

  The subtle point to notice is that the value returned by <code*|(cons x y)>
  is a procedure\Vnamely the internally defined procedure <code*|dispatch>,
  which takes one argument and returns either <code*|x> or <code*|y>
  depending on whether the argument is 0 or 1. Correspondingly, <code*|(car
  z)> is defined to apply <code*|z> to 0. Hence, if <code*|z> is the
  procedure formed by <code*|(cons x y)>, then <code*|z> applied to 0 will
  yield <code*|x>. Thus, we have shown that <code*|(car (cons x y))> yields
  <code*|x>, as desired. Similarly, <code*|(cdr (cons x y))> applies the
  procedure returned by <code*|(cons x y)> to 1, which returns <code*|y>.
  Therefore, this procedural implementation of pairs is a valid
  implementation, and if we access pairs using only <code*|cons>,
  <code*|car>, and <code*|cdr> we cannot distinguish this implementation from
  one that uses \Preal\Q data structures.

  The point of exhibiting the procedural representation of pairs is not that
  our language works this way (Scheme, and Lisp systems in general, implement
  pairs directly, for efficiency reasons) but that it could work this way.
  The procedural representation, although obscure, is a perfectly adequate
  way to represent pairs, since it fulfills the only conditions that pairs
  need to fulfill. This example also demonstrates that the ability to
  manipulate procedures as objects automatically provides the ability to
  represent compound data. This may seem a curiosity now, but procedural
  representations of data will play a central role in our programming
  repertoire. This style of programming is often called <em|message
  passing><index|message passing>, and we will be using it as a basic tool in
  <hlink|Chapter 3|Chapter-3.xhtml#Chapter-3> when we address the issues of
  modeling and simulation.

  <\exercise>
    Here is an alternative procedural representation of pairs. For this
    representation, verify that <code*|(car (cons x y))> yields <code*|x> for
    any objects <code*|x> and <code*|y>.

    <\scm-code>
      (define (cons x y)

      \ \ (lambda (m) (m x y)))

      \;

      (define (car z)

      \ \ (z (lambda (p q) p)))
    </scm-code>

    What is the corresponding definition of <code*|cdr>? (Hint: To verify
    that this works, make use of the substitution model of
    <hlink|1.1.5|#1.1.5>.)
  </exercise>

  <\exercise>
    Show that we can represent pairs of nonnegative integers using only
    numbers and arithmetic operations if we represent the pair <math|a> and
    <math|b> as the integer that is the product <math|2<rsup|a>*3<rsup|b>>.
    Give the corresponding definitions of the procedures <code*|cons>,
    <code*|car>, and <code*|cdr>.
  </exercise>

  <\exercise>
    In case representing pairs as procedures wasn't mind-boggling enough,
    consider that, in a language that can manipulate procedures, we can get
    by without numbers (at least insofar as nonnegative integers are
    concerned) by implementing 0 and the operation of adding 1 as

    <\scm-code>
      (define zero (lambda (f) (lambda (x) x)))

      \;

      (define (add-1 n)

      \ \ (lambda (f) (lambda (x) (f ((n f) x)))))
    </scm-code>

    This representation is known as <em|Church numerals><index|Church
    numerals>, after its inventor, Alonzo Church, the logician who invented
    the \<lambda\>-calculus.

    Define <code*|one> and <code*|two> directly (not in terms of <code*|zero>
    and <code*|add-1>). (Hint: Use substitution to evaluate <code*|(add-1
    zero)>). Give a direct definition of the addition procedure <code*|+>
    (not in terms of repeated application of <code*|add-1>).
  </exercise>

  <subsection|Extended Exercise: Interval Arithmetic>

  Alyssa P. Hacker is designing a system to help people solve engineering
  problems. One feature she wants to provide in her system is the ability to
  manipulate inexact quantities (such as measured parameters of physical
  devices) with known precision, so that when computations are done with such
  approximate quantities the results will be numbers of known precision.

  Electrical engineers will be using Alyssa's system to compute electrical
  quantities. It is sometimes necessary for them to compute the value of a
  parallel equivalent resistance <math|R<rsub|p>> of two resistors
  <math|R<rsub|1>> and <math|R<rsub|2>> using the formula
  <math|R<rsub|p>=<frac|1|1<around*|/|R<rsub|1>+1<around*|/|R<rsub|2>|\<nobracket\>>|\<nobracket\>>>>.
  Resistance values are usually known only up to some tolerance guaranteed by
  the manufacturer of the resistor. For example, if you buy a resistor
  labeled \P6.8 ohms with 10% tolerance\Q you can only be sure that the
  resistor has a resistance between 6.8 <math|-> 0.68 = 6.12 and 6.8 + 0.68 =
  7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a
  4.7-ohm 5% resistor, the resistance of the combination can range from about
  2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms
  (if the two resistors are at the upper bounds).

  Alyssa's idea is to implement \Pinterval arithmetic\Q as a set of
  arithmetic operations for combining \Pintervals\Q (objects that represent
  the range of possible values of an inexact quantity). The result of adding,
  subtracting, multiplying, or dividing two intervals is itself an interval,
  representing the range of the result.

  Alyssa postulates the existence of an abstract object called an
  \Pinterval\Q that has two endpoints: a lower bound and an upper bound. She
  also presumes that, given the endpoints of an interval, she can construct
  the interval using the data constructor <code*|make-interval>. Alyssa first
  writes a procedure for adding two intervals. She reasons that the minimum
  value the sum could be is the sum of the two lower bounds and the maximum
  value it could be is the sum of the two upper bounds:

  <\scm-code>
    (define (add-interval x y)

    \ \ (make-interval (+ (lower-bound x) (lower-bound y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (upper-bound x) (upper-bound y))))
  </scm-code>

  Alyssa also works out the product of two intervals by finding the minimum
  and the maximum of the products of the bounds and using them as the bounds
  of the resulting interval. (<code*|Min> and <code*|max> are primitives that
  find the minimum or maximum of any number of arguments.)

  <\scm-code>
    (define (mul-interval x y)

    \ \ (let ((p1 (* (lower-bound x) (lower-bound y)))

    \ \ \ \ \ \ \ \ (p2 (* (lower-bound x) (upper-bound y)))

    \ \ \ \ \ \ \ \ (p3 (* (upper-bound x) (lower-bound y)))

    \ \ \ \ \ \ \ \ (p4 (* (upper-bound x) (upper-bound y))))

    \ \ \ \ (make-interval (min p1 p2 p3 p4)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (max p1 p2 p3 p4))))
  </scm-code>

  To divide two intervals, Alyssa multiplies the first by the reciprocal of
  the second. Note that the bounds of the reciprocal interval are the
  reciprocal of the upper bound and the reciprocal of the lower bound, in
  that order.

  <\scm-code>
    (define (div-interval x y)

    \ \ (mul-interval x\ 

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-interval (/ 1.0 (upper-bound y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (/ 1.0
    (lower-bound y)))))
  </scm-code>

  <\exercise>
    Alyssa's program is incomplete because she has not specified the
    implementation of the interval abstraction. Here is a definition of the
    interval constructor:

    <\scm-code>
      (define (make-interval a b) (cons a b))
    </scm-code>

    Define selectors <code*|upper-bound> and <code*|lower-bound> to complete
    the implementation.
  </exercise>

  <\exercise>
    Using reasoning analogous to Alyssa's, describe how the difference of two
    intervals may be computed. Define a corresponding subtraction procedure,
    called <code*|sub-interval>.
  </exercise>

  <\exercise>
    The <em|width><index|width> of an interval is half of the difference
    between its upper and lower bounds. The width is a measure of the
    uncertainty of the number specified by the interval. For some arithmetic
    operations the width of the result of combining two intervals is a
    function only of the widths of the argument intervals, whereas for others
    the width of the combination is not a function of the widths of the
    argument intervals. Show that the width of the sum (or difference) of two
    intervals is a function only of the widths of the intervals being added
    (or subtracted). Give examples to show that this is not true for
    multiplication or division.
  </exercise>

  <\exercise>
    Ben Bitdiddle, an expert systems programmer, looks over Alyssa's shoulder
    and comments that it is not clear what it means to divide by an interval
    that spans zero. Modify Alyssa's code to check for this condition and to
    signal an error if it occurs.
  </exercise>

  <\exercise>
    In passing, Ben also cryptically comments: \PBy testing the signs of the
    endpoints of the intervals, it is possible to break <code*|mul-interval>
    into nine cases, only one of which requires more than two
    multiplications.\Q Rewrite this procedure using Ben's suggestion.

    After debugging her program, Alyssa shows it to a potential user, who
    complains that her program solves the wrong problem. He wants a program
    that can deal with numbers represented as a center value and an additive
    tolerance; for example, he wants to work with intervals such as 3.5
    <math|\<pm\>> 0.15 rather than [3.35, 3.65]. Alyssa returns to her desk
    and fixes this problem by supplying an alternate constructor and
    alternate selectors:

    <\scm-code>
      (define (make-center-width c w)

      \ \ (make-interval (- c w) (+ c w)))

      (define (center i)

      \ \ (/ (+ (lower-bound i) (upper-bound i)) 2))

      (define (width i)

      \ \ (/ (- (upper-bound i) (lower-bound i)) 2))
    </scm-code>

    Unfortunately, most of Alyssa's users are engineers. Real engineering
    situations usually involve measurements with only a small uncertainty,
    measured as the ratio of the width of the interval to the midpoint of the
    interval. Engineers usually specify percentage tolerances on the
    parameters of devices, as in the resistor specifications given earlier.
  </exercise>

  <\exercise>
    <label|ex2.12>Define a constructor <code*|make-center-percent> that takes
    a center and a percentage tolerance and produces the desired interval.
    You must also define a selector <code*|percent> that produces the
    percentage tolerance for a given interval. The <code*|center> selector is
    the same as the one shown above.
  </exercise>

  <\exercise>
    Show that under the assumption of small percentage tolerances there is a
    simple formula for the approximate percentage tolerance of the product of
    two intervals in terms of the tolerances of the factors. You may simplify
    the problem by assuming that all numbers are positive.

    After considerable work, Alyssa P. Hacker delivers her finished system.
    Several years later, after she has forgotten all about it, she gets a
    frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has
    noticed that the formula for parallel resistors can be written in two
    algebraically equivalent ways: <math|<frac|R<rsub|1>*R<rsub|2>|R<rsub|1>+R<rsub|2>>>
    and <math|<frac|1|1<around*|/|R<rsub|1>+1<around*|/|R<rsub|2>|\<nobracket\>>|\<nobracket\>>>>.
    He has written the following two programs, each of which computes the
    parallel-resistors formula differently:

    <\scm-code>
      (define (par1 r1 r2)

      \ \ (div-interval (mul-interval r1 r2)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (add-interval r1 r2)))

      (define (par2 r1 r2)

      \ \ (let ((one (make-interval 1 1)))\ 

      \ \ \ \ (div-interval one

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (add-interval (div-interval one r1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (div-interval
      one r2)))))
    </scm-code>

    Lem complains that Alyssa's program gives different answers for the two
    ways of computing. This is a serious complaint.
  </exercise>

  <\exercise>
    Demonstrate that Lem is right. Investigate the behavior of the system on
    a variety of arithmetic expressions. Make some intervals <math|A> and
    <math|B>, and use them in computing the expressions
    <math|A<around*|/|A|\<nobracket\>>> and
    <math|A<around*|/|B|\<nobracket\>>>. You will get the most insight by
    using intervals whose width is a small percentage of the center value.
    Examine the results of the computation in center-percent form (see
    <hlink|Exercise 2.12|#ex2.12>).
  </exercise>

  <\exercise>
    Eva Lu Ator, another user, has also noticed the different intervals
    computed by different but algebraically equivalent expressions. She says
    that a formula to compute with intervals using Alyssa's system will
    produce tighter error bounds if it can be written in such a form that no
    variable that represents an uncertain number is repeated. Thus, she says,
    <code*|par2> is a \Pbetter\Q program for parallel resistances than
    <code*|par1>. Is she right? Why?
  </exercise>

  <\exercise>
    Explain, in general, why equivalent algebraic expressions may lead to
    different answers. Can you devise an interval-arithmetic package that
    does not have this shortcoming, or is this task impossible? (Warning:
    This problem is very difficult.)
  </exercise>

  <section|Hierarchical Data and the Closure Property>

  As we have seen, pairs provide a primitive \Pglue\Q that we can use to
  construct compound data objects. <hlink|Figure 2.2|#fig2.2> shows a
  standard way to visualize a pair\Vin this case, the pair formed by
  <scm|(cons 1 2)>. In this representation, which is called
  <em|box-and-pointer notation><index|box-and-pointer notation>, each object
  is shown as a <em|pointer><index|pointer> to a box. The box for a primitive
  object contains a representation of the object. For example, the box for a
  number contains a numeral. The box for a pair is actually a double box, the
  left part containing (a pointer to) the <code*|car> of the pair and the
  right part containing the <code*|cdr>.

  <\big-figure>
    <\script-output|dot|default>
      %dot -output png -width 0.5par

      digraph G {

      \ \ node [shape=plain ]

      \ \ edge [tailclip=false ] \ // tail starts in the center

      \ \ graph [dpi=360]

      \;

      \ \ // begin1 - pointer from the left

      \ \ begin1 [style=invis]

      \ \ 

      \ \ // pair w/ left & right pointers (filled circle in center)

      \ \ a [label=\<less\>\<less\>TABLE BORDER="0" CELLBORDER="1"
      CELLSPACING="0"\<gtr\>

      \ \ \ \ \<less\>TR\<gtr\>

      \ \ \ \ \<less\>TD WIDTH="32" port="l"\<gtr\>\<less\>font
      point-size="20pt"\<gtr\>&bull;\<less\>/font\<gtr\>\<less\>/TD\<gtr\>

      \ \ \ \ \<less\>TD WIDTH="32" height="32" PORT="r"\<gtr\>\<less\>font
      point-size="20pt"\<gtr\>&bull;\<less\>/font\<gtr\>\<less\>/TD\<gtr\>

      \ \ \ \ \<less\>/TR\<gtr\>

      \ \ \<less\>/TABLE\<gtr\>\<gtr\>];

      \;

      \ \ // terminal

      \ \ 1 [label=\<less\>\<less\>TABLE BORDER="0" CELLBORDER="1"
      CELLSPACING="0"\<gtr\>

      \ \ \ \ \<less\>TR\<gtr\>

      \ \ \ \ \<less\>TD width="32" HEIGHT="32"
      port="l"\<gtr\>1\<less\>/TD\<gtr\>

      \ \ \ \ \<less\>TD width="32" HEIGHT="32"
      border="0"\<gtr\>\<less\>/TD\<gtr\> \ \ \ 

      \ \ \ \ \<less\>/TR\<gtr\>

      \ \ \<less\>/TABLE\<gtr\>\<gtr\>];

      \ \ // terminal

      \ \ 2 [label=\<less\>\<less\>TABLE BORDER="0" CELLBORDER="1"
      CELLSPACING="0"\<gtr\>

      \ \ \ \ \<less\>TR\<gtr\>

      \ \ \ \ \<less\>TD WIDTH="32" HEIGHT="32"
      port="l"\<gtr\>2\<less\>/TD\<gtr\>

      \ \ \ \ \<less\>TD WIDTH="32" HEIGHT="32"
      border="0"\<gtr\>\<less\>/TD\<gtr\> \ \ \ 

      \ \ \ \ \<less\>/TR\<gtr\>

      \ \ \<less\>/TABLE\<gtr\>\<gtr\>];

      \ \ { rank=same begin1 -\<gtr\> a }

      \;

      \ \ a:l:c -\<gtr\> 1:l

      \ \ { rank=same a 2 \ \ a:r:c -\<gtr\> 2:w}

      }
    </script-output|<image|<tuple||png>|0.5par|||>>
  <|big-figure>
    <label|fig2.2>Box-and-pointer representation of <code*|(cons 1 2)>.
  </big-figure>

  We have already seen that <code*|cons> can be used to combine not only
  numbers but pairs as well. (You made use of this fact, or should have, in
  doing <hlink|Exercise 2.2|#ex2.2> and <hlink|Exercise 2.3|#ex2.3>.) As a
  consequence, pairs provide a universal building block from which we can
  construct all sorts of data structures. <hlink|Figure 2.3|#fig2.3> shows
  two ways to use pairs to combine the numbers 1, 2, 3, and 4.

  <\big-figure|<image|<tuple||png>|400pt|160pt||>>
    <label|fig2.3>Two ways to combine 1, 2, 3, and 4 using pairs.
  </big-figure>

  The ability to create pairs whose elements are pairs is the essence of list
  structure's importance as a representational tool. We refer to this ability
  as the <em|closure property><index|closure property> of <code*|cons>. In
  general, an operation for combining data objects satisfies the closure
  property if the results of combining things with that operation can
  themselves be combined using the same operation.<\footnote>
    The use of the word \Pclosure\Q here comes from abstract algebra, where a
    set of elements is said to be closed under an operation if applying the
    operation to elements in the set produces an element that is again an
    element of the set. The Lisp community also (unfortunately) uses the word
    \Pclosure\Q to describe a totally unrelated concept: A closure is an
    implementation technique for representing procedures with free variables.
    We do not use the word \Pclosure\Q in this second sense in this book.
  </footnote> Closure is the key to power in any means of combination because
  it permits us to create <em|hierarchical><index|hierarchical>
  structures\Vstructures made up of parts, which themselves are made up of
  parts, and so on.

  From the outset of <hlink|Chapter 1|Chapter-1.xhtml#Chapter-1>, we've made
  essential use of closure in dealing with procedures, because all but the
  very simplest programs rely on the fact that the elements of a combination
  can themselves be combinations. In this section, we take up the
  consequences of closure for compound data. We describe some conventional
  techniques for using pairs to represent sequences and trees, and we exhibit
  a graphics language that illustrates closure in a vivid way.<\footnote>
    The notion that a means of combination should satisfy closure is a
    straightforward idea. Unfortunately, the data combiners provided in many
    popular programming languages do not satisfy closure, or make closure
    cumbersome to exploit. In Fortran or Basic, one typically combines data
    elements by assembling them into arrays\Vbut one cannot form arrays whose
    elements are themselves arrays. Pascal and C admit structures whose
    elements are structures. However, this requires that the programmer
    manipulate pointers explicitly, and adhere to the restriction that each
    field of a structure can contain only elements of a prespecified form.
    Unlike Lisp with its pairs, these languages have no built-in
    general-purpose glue that makes it easy to manipulate compound data in a
    uniform way. This limitation lies behind Alan Perlis's comment in his
    foreword to this book: \PIn Pascal the plethora of declarable data
    structures induces a specialization within functions that inhibits and
    penalizes casual cooperation. It is better to have 100 functions operate
    on one data structure than to have 10 functions operate on 10 data
    structures.\Q
  </footnote>

  <subsection|Representing Sequences><label|2.2.1>

  \;

  <\big-figure|<with|gr-mode|<tuple|group-edit|edit-props>|gr-frame|<tuple|scale|1cm|<tuple|0.480002gw|0.420008gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-arrow-end|\<gtr\>|gr-auto-crop|true|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|<graphics||<cline|<point|-4|3>|<point|-4.0|2.0>|<point|-3.0|2.0>|<point|-3.0|3.0>>|<cline|<point|-3|3>|<point|-2.0|3.0>|<point|-2.0|2.0>|<point|-3.0|2.0>>|<point|-3.5|2.5>|<point|-2.5|2.5>|<cline|<point|-4|1>|<point|-4.0|0.0>|<point|-3.0|0.0>|<point|-3.0|1.0>>|<cline|<point|-1|3>|<point|-1.0|2.0>|<point|0.0|2.0>|<point|0.0|3.0>>|<cline|<point|0|3>|<point|0.0|2.0>|<point|1.0|2.0>|<point|1.0|3.0>>|<point|-0.5|2.5>|<point|0.5|2.5>|<point|3.5|2.5>|<cline|<point|3.0|3.0>|<point|3.9999999999999987|3.0>|<point|3.9999999999999987|2.0>|<point|3.0|2.0>>|<point|2.5|2.5>|<cline|<point|1.9999999999999996|3.0>|<point|1.9999999999999996|2.0>|<point|3.0|2.0>|<point|3.0|3.0>>|<cline|<point|5.999999999999999|3.0000000000000004>|<point|6.999999999999997|3.0000000000000004>|<point|6.999999999999997|2.0>|<point|5.999999999999999|2.0>>|<point|5.499999999999999|2.5000000000000004>|<cline|<point|4.999999999999998|3.0000000000000004>|<point|4.999999999999998|2.0>|<point|5.999999999999999|2.0>|<point|5.999999999999999|3.0000000000000004>>|<cline|<point|-1.0000000000000004|1.0>|<point|-1.0000000000000004|-5.551115123125784e-17>|<point|4.579669976578771e-16|-5.551115123125784e-17>|<point|4.579669976578771e-16|1.0>>|<cline|<point|-1.0000000000000004|1.0>|<point|-1.0000000000000004|-5.551115123125784e-17>|<point|4.579669976578771e-16|-5.551115123125784e-17>|<point|4.579669976578771e-16|1.0>>|<cline|<point|2.0|1.0>|<point|2.0|-3.885780586188048e-16>|<point|3.0|-3.885780586188048e-16>|<point|3.0|1.0>>|<cline|<point|5.0|1.0>|<point|5.0|-8.326672684688674e-17>|<point|6.000000000000001|-8.326672684688674e-17>|<point|6.000000000000001|1.0>>|<cline|<point|5.0|1.0>|<point|5.0|-8.326672684688674e-17>|<point|6.000000000000001|-8.326672684688674e-17>|<point|6.000000000000001|1.0>>|<text-at|<with|font-base-size|12|1>|<point|-3.593097631961901|0.3682762270141557>>|<text-at|2|<point|-0.5999966926842176|0.3999966926842178>>|<text-at|<with|font-base-size|12|3>|<point|2.405880407461305|0.36585527186135725>>|<text-at|<with|font-base-size|12|4>|<point|5.420379679851831|0.32049212858843784>>|<with|arrow-end|\<gtr\>|<line|<point|-3.5|2.5>|<point|-3.5|1.0>>>|<with|arrow-end|\<gtr\>|<line|<point|-0.5|2.5>|<point|-0.5|1.0>>>|<with|arrow-end|\<gtr\>|<line|<point|2.5|2.5>|<point|2.5|1.0>>>|<with|arrow-end|\<gtr\>|<line|<point|5.5|2.5>|<point|5.5|1.0>>>|<with|arrow-end|\<gtr\>|<line|<point|-2.5|2.5>|<point|-1.0|2.5>>>|<with|arrow-end|\<gtr\>|<line|<point|0.5|2.5>|<point|2.0|2.5>>>|<with|arrow-end|\<gtr\>|<line|<point|3.5|2.5>|<point|5.0|2.5>>>|<with|arrow-end|\<gtr\>|<line|<point|-5|2.5>|<point|-4.0|2.5>>>|<with|arrow-end|\<gtr\>|<line|<point|7|3>|<point|6.0|2.0>>>>>>
    <label|fig2.4>The sequence 1, 2, 3, 4 represented as a chain of pairs.
  </big-figure>

  One of the useful structures we can build with pairs is a
  <em|sequence><index|sequence>\Van ordered collection of data objects. There
  are, of course, many ways to represent sequences in terms of pairs. One
  particularly straightforward representation is illustrated in <hlink|Figure
  2.4|#fig2.4>, where the sequence 1, 2, 3, 4 is represented as a chain of
  pairs. The <code*|car> of each pair is the corresponding item in the chain,
  and the <code*|cdr> of the pair is the next pair in the chain. The
  <code*|cdr> of the final pair signals the end of the sequence by pointing
  to a distinguished value that is not a pair, represented in box-and-pointer
  diagrams as a diagonal line and in programs as the value of the variable
  <code*|nil>. The entire sequence is constructed by nested <code*|cons>
  operations:

  <\scm-code>
    (cons 1

    \ \ \ \ \ \ (cons 2

    \ \ \ \ \ \ \ \ \ \ \ \ (cons 3

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons 4 nil))))
  </scm-code>

  Such a sequence of pairs, formed by nested <code*|cons>es, is called a
  <em|list><index|list>, and Scheme provides a primitive called <code*|list>
  to help in constructing lists.<\footnote>
    In this book, we use <em|list><index|list> to mean a chain of pairs
    terminated by the end-of-list marker. In contrast, the term <em|list
    structure><index|list structure> refers to any data structure made out of
    pairs, not just to lists.
  </footnote> The above sequence could be produced by <code*|(list 1 2 3 4)>.
  In general,

  <\scm-code>
    (list \<langle\><math|a<rsub|1>>\<rangle\>
    \<langle\><math|a<rsub|2>>\<rangle\> ...
    \<langle\><math|a<rsub|n>>\<rangle\>)
  </scm-code>

  is equivalent to

  <\scm-code>
    (cons \<less\><math|a<rsub|1>>\<gtr\> (cons
    \<less\><math|a<rsub|2>>\<gtr\> (cons ... (cons
    \<less\><math|a<rsub|n>>\<gtr\> nil) ...)))
  </scm-code>

  Lisp systems conventionally print lists by printing the sequence of
  elements, enclosed in parentheses. Thus, the data object in <hlink|Figure
  2.4|#Figure-2_002e4> is printed as <code*|(1 2 3 4)>:

  <\session|scheme|default>
    <\input|Scheme] >
      (define one-through-four (list 1 2 3 4))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Be careful not to confuse the expression <code*|(list 1 2 3 4)> with the
  list <code*|(1 2 3 4)>, which is the result obtained when the expression is
  evaluated. Attempting to evaluate the expression <code*|(1 2 3 4)> will
  signal an error when the interpreter tries to apply the procedure <code*|1>
  to arguments <code*|2>, <code*|3>, <code*|4>.

  We can think of <code*|car> as selecting the first item in the list, and of
  <code*|cdr> as selecting the sublist consisting of all but the first item.
  Nested applications of <code*|car> and <code*|cdr> can be used to extract
  the second, third, and subsequent items in the list.<\footnote>
    Since nested applications of <code*|car> and <code*|cdr> are cumbersome
    to write, Lisp dialects provide abbreviations for them\Vfor instance,

    <\scm-code>
      (cadr \<langle\><var|arg>\<rangle\>) = (car (cdr
      \<langle\><var|arg>\<rangle\>))
    </scm-code>

    The names of all such procedures start with <code*|c> and end with
    <code*|r>. Each <code*|a> between them stands for a <code*|car> operation
    and each <code*|d> for a <code*|cdr> operation, to be applied in the same
    order in which they appear in the name. The names <code*|car> and
    <code*|cdr> persist because simple combinations like <code*|cadr> are
    pronounceable.
  </footnote> The constructor <code*|cons> makes a list like the original
  one, but with an additional item at the beginning.

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (car one-through-four)
    <|unfolded-io>
      1
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (cdr one-through-four)
    <|unfolded-io>
      (2 3 4)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (car (cdr one-through-four))
    <|unfolded-io>
      2
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (cons 10 one-through-four)
    <|unfolded-io>
      (10 1 2 3 4)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (cons 5 one-through-four)
    <|unfolded-io>
      (5 1 2 3 4)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The value of <code*|nil>, used to terminate the chain of pairs, can be
  thought of as a sequence of no elements, the <em|empty list><index|empty
  list>. The word <em|nil><index|nil> is a contraction of the Latin word
  <em|nihil>, which means \Pnothing.\Q<\footnote>
    It's remarkable how much energy in the standardization of Lisp dialects
    has been dissipated in arguments that are literally over nothing: Should
    <code*|nil> be an ordinary name? Should the value of <code*|nil> be a
    symbol? Should it be a list? Should it be a pair? In Scheme, <code*|nil>
    is an ordinary name, which we use in this section as a variable whose
    value is the end-of-list marker (just as <code*|true> is an ordinary
    variable that has a true value). Other dialects of Lisp, including Common
    Lisp, treat <code*|nil> as a special symbol. The authors of this book,
    who have endured too many language standardization brawls, would like to
    avoid the entire issue. Once we have introduced quotation in
    <hlink|2.3|2_002e3.xhtml#g_t2_002e3>, we will denote the empty list as
    <code*|'()> and dispense with the variable <code*|nil> entirely.
  </footnote>

  <paragraph*|List operations>

  The use of pairs to represent sequences of elements as lists is accompanied
  by conventional programming techniques for manipulating lists by
  successively \P<code*|cdr>ing down\Q the lists. For example, the procedure
  <code*|list-ref> takes as arguments a list and a number <math|n> and
  returns the <math|n<rsup|<with|mode|text|th>>> item of the list. It is
  customary to number the elements of the list beginning with 0. The method
  for computing <code*|list-ref> is the following:

  <\itemize>
    <item>For <math|n=0>, <code*|list-ref> should return the <code*|car> of
    the list.

    <item>Otherwise, <code*|list-ref> should return the
    <math|<around*|(|n-1|)>>-st item of the <code*|cdr> of the list.
  </itemize>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (list-ref items n)

      \ \ (if (= n 0)

      \ \ \ \ \ \ (car items)

      \ \ \ \ \ \ (list-ref (cdr items) (- n 1))))
    </input>

    <\input|Scheme] >
      (define squares (list 1 4 9 16 25))
    </input>

    <\unfolded-io|Scheme] >
      (list-ref squares 3)
    <|unfolded-io>
      16
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Often we <code*|cdr> down the whole list. To aid in this, Scheme includes a
  primitive predicate <code*|null?>, which tests whether its argument is the
  empty list. The procedure <code*|length>, which returns the number of items
  in a list, illustrates this typical pattern of use:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (length items)

      \ \ (if (null? items)

      \ \ \ \ \ \ 0

      \ \ \ \ \ \ (+ 1 (length (cdr items)))))
    </input>

    <\input|Scheme] >
      (define odds (list 1 3 5 7))
    </input>

    <\unfolded-io|Scheme] >
      (length odds)
    <|unfolded-io>
      4
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The <code*|length> procedure implements a simple recursive plan. The
  reduction step is:

  <\itemize>
    <item>The <code*|length> of any list is 1 plus the <code*|length> of the
    <code*|cdr> of the list.
  </itemize>

  This is applied successively until we reach the base case:

  <\itemize>
    <item>The <code*|length> of the empty list is 0.
  </itemize>

  We could also compute <code*|length> in an iterative style:

  <\scm-code>
    (define (length items)

    \ \ (define (length-iter a count)

    \ \ \ \ (if (null? a)

    \ \ \ \ \ \ \ \ count

    \ \ \ \ \ \ \ \ (length-iter (cdr a) (+ 1 count))))

    \ \ (length-iter items 0))
  </scm-code>

  Another conventional programming technique is to \P<code*|cons> up\Q an
  answer list while <code*|cdr>ing down a list, as in the procedure
  <code*|append>, which takes two lists as arguments and combines their
  elements to make a new list:

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (append squares odds)
    <|unfolded-io>
      (1 4 9 16 25 1 3 5 7)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (append odds squares)
    <|unfolded-io>
      (1 3 5 7 1 4 9 16 25)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  <code*|Append> is also implemented using a recursive plan. To
  <code*|append> lists <code*|list1> and <code*|list2>, do the following:

  <\itemize>
    <item>If <code*|list1> is the empty list, then the result is just
    <code*|list2>.

    <item>Otherwise, <code*|append> the <code*|cdr> of <code*|list1> and
    <code*|list2>, and <code*|cons> the <code*|car> of <code*|list1> onto the
    result:
  </itemize>

  <\scm-code>
    (define (append list1 list2)

    \ \ (if (null? list1)

    \ \ \ \ \ \ list2

    \ \ \ \ \ \ (cons (car list1) (append (cdr list1) list2))))
  </scm-code>

  <\exercise>
    Define a procedure <code*|last-pair> that returns the list that contains
    only the last element of a given (nonempty) list:

    <\scm-code>
      (last-pair (list 23 72 149 34))

      (34)
    </scm-code>
  </exercise>

  <\exercise>
    Define a procedure <code*|reverse> that takes a list as argument and
    returns a list of the same elements in reverse order:

    <\scm-code>
      (reverse (list 1 4 9 16 25))

      (25 16 9 4 1)
    </scm-code>
  </exercise>

  <\exercise>
    Consider the change-counting program of
    <hlink|1.2.2|1_002e2.xhtml#g_t1_002e2_002e2>. It would be nice to be able
    to easily change the currency used by the program, so that we could
    compute the number of ways to change a British pound, for example. As the
    program is written, the knowledge of the currency is distributed partly
    into the procedure <code*|first-denomination> and partly into the
    procedure <code*|count-change> (which knows that there are five kinds of
    U.S. coins). It would be nicer to be able to supply a list of coins to be
    used for making change.

    We want to rewrite the procedure <code*|cc> so that its second argument
    is a list of the values of the coins to use rather than an integer
    specifying which coins to use. We could then have lists that defined each
    kind of currency:

    <\scm-code>
      (define us-coins (list 50 25 10 5 1))

      (define uk-coins (list 100 50 20 10 5 2 1 0.5))
    </scm-code>

    We could then call <code*|cc> as follows:

    <\scm-code>
      (cc 100 us-coins)

      292
    </scm-code>

    To do this will require changing the program <code*|cc> somewhat. It will
    still have the same form, but it will access its second argument
    differently, as follows:

    <\scm-code>
      (define (cc amount coin-values)

      \ \ (cond ((= amount 0) 1)

      \ \ \ \ \ \ \ \ ((or (\<less\> amount 0) (no-more? coin-values)) 0)

      \ \ \ \ \ \ \ \ (else

      \ \ \ \ \ \ \ \ \ (+ (cc amount

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (except-first-denomination
      coin-values))

      \ \ \ \ \ \ \ \ \ \ \ \ (cc (- amount

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (first-denomination coin-values))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coin-values)))))
    </scm-code>

    Define the procedures <code*|first-denomination>,
    <code*|except-first-denomination> and <code*|no-more?> in terms of
    primitive operations on list structures. Does the order of the list
    <code*|coin-values> affect the answer produced by <code*|cc>? Why or why
    not?
  </exercise>

  <\exercise>
    The procedures <code*|+>, <code*|*>, and <code*|list> take arbitrary
    numbers of arguments. One way to define such procedures is to use
    <code*|define> with <em|dotted-tail notation><index|dotted-tail
    notation>. In a procedure definition, a parameter list that has a dot
    before the last parameter name indicates that, when the procedure is
    called, the initial parameters (if any) will have as values the initial
    arguments, as usual, but the final parameter's value will be a
    <em|list><index|list> of any remaining arguments. For instance, given the
    definition

    <code|(define (f x y . z) \<langle\><var|body>\<rangle\>)>

    the procedure <code*|f> can be called with two or more arguments. If we
    evaluate

    <code|(f 1 2 3 4 5 6)>

    then in the body of <code*|f>, <code*|x> will be 1, <code*|y> will be 2,
    and <code*|z> will be the list <code*|(3 4 5 6)>. Given the definition

    <code|(define (g . w) \<langle\><var|body>\<rangle\>)>

    the procedure <code*|g> can be called with zero or more arguments. If we
    evaluate

    <code|(g 1 2 3 4 5 6)>

    then in the body of <code*|g>, <code*|w> will be the list <code*|(1 2 3 4
    5 6)>.<hlink||#FOOT77><\footnote>
      To define <code*|f> and <code*|g> using <code*|lambda> we would write

      <\scm-code>
        (define f (lambda (x y . z) \<langle\><var|body>\<rangle\>))

        (define g (lambda w \<langle\><var|body>\<rangle\>))
      </scm-code>
    </footnote>

    Use this notation to write a procedure <code*|same-parity> that takes one
    or more integers and returns a list of all the arguments that have the
    same even-odd parity as the first argument. For example,

    <\scm-code>
      (same-parity 1 2 3 4 5 6 7)

      (1 3 5 7)

      \;

      (same-parity 2 3 4 5 6 7)

      (2 4 6)
    </scm-code>
  </exercise>

  <paragraph*|Mapping over lists>

  One extremely useful operation is to apply some transformation to each
  element in a list and generate the list of results. For instance, the
  following procedure scales each number in a list by a given factor:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (scale-list items factor)

      \ \ (if (null? items)

      \ \ \ \ \ \ #nil

      \ \ \ \ \ \ (cons (* (car items) factor)

      \ \ \ \ \ \ \ \ \ \ \ \ (scale-list (cdr items) factor))))
    </input>

    <\unfolded-io|Scheme] >
      (scale-list (list 1 2 3 4 5) 10)
    <|unfolded-io>
      (10 20 30 40 50)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  We can abstract this general idea and capture it as a common pattern
  expressed as a higher-order procedure, just as in
  <hlink|1.3|1_002e3.xhtml#g_t1_002e3>. The higher-order procedure here is
  called <code*|map>. <code*|Map> takes as arguments a procedure of one
  argument and a list, and returns a list of the results produced by applying
  the procedure to each element in the list:<\footnote>
    Scheme standardly provides a <code*|map> procedure that is more general
    than the one described here. This more general <code*|map> takes a
    procedure of <math|n> arguments, together with <math|n> lists, and
    applies the procedure to all the first elements of the lists, all the
    second elements of the lists, and so on, returning a list of the results.
    For example:

    <\session|scheme|default>
      <\unfolded-io|Scheme] >
        (map + (list 1 2 3) (list 40 50 60) (list 700 800 900))
      <|unfolded-io>
        (741 852 963)
      </unfolded-io>

      <\unfolded-io|Scheme] >
        (map (lambda (x y) (+ x (* 2 y)))

        \ \ \ \ \ (list 1 2 3)

        \ \ \ \ \ (list 4 5 6))
      <|unfolded-io>
        (9 12 15)
      </unfolded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>
  </footnote>

  <\scm-code>
    (define (map proc items)

    \ \ (if (null? items)

    \ \ \ \ \ \ #nil

    \ \ \ \ \ \ (cons (proc (car items))

    \ \ \ \ \ \ \ \ \ \ \ \ (map proc (cdr items)))))
  </scm-code>

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (map abs (list -10 2.5 -11.6 17))
    <|unfolded-io>
      (10 2.5 11.6 17)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (map (lambda (x) (* x x))

      \ \ \ \ \ (list 1 2 3 4))
    <|unfolded-io>
      (1 4 9 16)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now we can give a new definition of <code*|scale-list> in terms of
  <code*|map>:

  <\scm-code>
    (define (scale-list items factor)

    \ \ (map (lambda (x) (* x factor))

    \ \ \ \ \ \ \ items))
  </scm-code>

  <code*|Map> is an important construct, not only because it captures a
  common pattern, but because it establishes a higher level of abstraction in
  dealing with lists. In the original definition of <code*|scale-list>, the
  recursive structure of the program draws attention to the
  element-by-element processing of the list. Defining <code*|scale-list> in
  terms of <code*|map> suppresses that level of detail and emphasizes that
  scaling transforms a list of elements to a list of results. The difference
  between the two definitions is not that the computer is performing a
  different process (it isn't) but that we think about the process
  differently. In effect, <code*|map> helps establish an abstraction barrier
  that isolates the implementation of procedures that transform lists from
  the details of how the elements of the list are extracted and combined.
  Like the barriers shown in <hlink|Figure 2.1|#fig2.1>, this abstraction
  gives us the flexibility to change the low-level details of how sequences
  are implemented, while preserving the conceptual framework of operations
  that transform sequences to sequences. Section
  <hlink|2.2.3|#g_t2_002e2_002e3> expands on this use of sequences as a
  framework for organizing programs.

  <\exercise>
    <label|ex2.21>The procedure <code*|square-list> takes a list of numbers
    as argument and returns a list of the squares of those numbers.

    <\scm-code>
      (square-list (list 1 2 3 4))

      (1 4 9 16)
    </scm-code>

    Here are two different definitions of <code*|square-list>. Complete both
    of them by filling in the missing expressions:

    <\scm-code>
      (define (square-list items)

      \ \ (if (null? items)

      \ \ \ \ \ \ nil

      \ \ \ \ \ \ (cons \<less\>??\<gtr\> \<less\>??\<gtr\>)))

      (define (square-list items)

      \ \ (map \<less\>??\<gtr\> \<less\>??\<gtr\>))
    </scm-code>
  </exercise>

  <\exercise>
    Louis Reasoner tries to rewrite the first <code*|square-list> procedure
    of <hlink|Exercise 2.21|#Exercise-2_002e21> so that it evolves an
    iterative process:

    <\scm-code>
      (define (square-list items)

      \ \ (define (iter things answer)

      \ \ \ \ (if (null? things)

      \ \ \ \ \ \ \ \ answer

      \ \ \ \ \ \ \ \ (iter (cdr things)\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (square (car things))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ answer))))

      \ \ (iter items nil))
    </scm-code>

    Unfortunately, defining <code*|square-list> this way produces the answer
    list in the reverse order of the one desired. Why?

    Louis then tries to fix his bug by interchanging the arguments to
    <code*|cons>:

    <\scm-code>
      (define (square-list items)

      \ \ (define (iter things answer)

      \ \ \ \ (if (null? things)

      \ \ \ \ \ \ \ \ answer

      \ \ \ \ \ \ \ \ (iter (cdr things)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons answer

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (square (car things))))))

      \ \ (iter items nil))
    </scm-code>

    This doesn't work either. Explain.
  </exercise>

  <\exercise>
    The procedure <code*|for-each> is similar to <code*|map>. It takes as
    arguments a procedure and a list of elements. However, rather than
    forming a list of the results, <code*|for-each> just applies the
    procedure to each of the elements in turn, from left to right. The values
    returned by applying the procedure to the elements are not used at
    all\V<code*|for-each> is used with procedures that perform an action,
    such as printing. For example,

    <\scm-code>
      (for-each (lambda (x) (newline) (display x))

      \ \ \ \ \ \ \ \ \ \ (list 57 321 88))

      57

      321

      88
    </scm-code>

    The value returned by the call to <code*|for-each> (not illustrated
    above) can be something arbitrary, such as true. Give an implementation
    of <code*|for-each>.
  </exercise>

  <subsection|Hierarchical Structures><label|2.2.2>

  The representation of sequences in terms of lists generalizes naturally to
  represent sequences whose elements may themselves be sequences. For
  example, we can regard the object <code*|((1 2) 3 4)> constructed by

  <\scm-code>
    (cons (list 1 2) (list 3 4))
  </scm-code>

  as a list of three items, the first of which is itself a list, <code*|(1
  2)>. Indeed, this is suggested by the form in which the result is printed
  by the interpreter. <hlink|Figure 2.5|#fig2.5> shows the representation of
  this structure in terms of pairs.

  <\big-figure|<image|<tuple|<#89504E470D0A1A0A0000000D494844520000015F000000B4080600000033412F74000000097048597300000EC400000EC401952B0E1B0000075449444154789CEDDDEB729B3A140650B9E3F77F65CE8FD6A78402E622B1B561AD994C129328B22C3E8410CEAB00590C7F3EBF26DF8FBD661EDB53E6D263008F3517B67BB62FFDCEDCEF1D298B1D7E455700D8642D0C9702744B996BA35B01DC90F0853CBE4D03EC9926F816ACA61C1A13BE90DFEBCFC7D1D1EFF83317794757000831BDC066A47B310D0E39ACAD4A2833DBF696BB54B68C001EEFCAA901D31000235784A2E005000000BE307DD031EB7C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085FB89761E7E30411BE702FAF22685310BE0001842FDCDF507E8F88E988F085FB31F59080F00508207C01029807827B1A4F3BD8CF3B64E40BF724703B277C01002AB2E20100C63EF342C3E4FBB1E9B63313F9D323F16B66DBD932F79631F7778FD6056093F7E8EBB5A0996E3BB3887B1A72AFD1E347CA9CD6ADC6A956CB45EA594F051D88DAC8DA1F4AE9A74FA46CC37759AFF8D951E591DF3D7A2BE49117E0F3B7D6DE09AA45076B5166CB5B485376EE44B2F5874FF93DC9D286FFB7DB67B5C39E516FAD0ACC3DB11A7F6B6B19DF3A4F2F4775E01E7E644EC452B356F3A9AF726CBA60987C06A8ED9F6B655787EFDAC5BBABBD461FA518E9026DCC2E52788F362E85CF74DB30F3758D150A6B8FEF29EB685DD69E27C0118BABC3DE65FD547D6E5BEB0B6E7BCB3F3B62BD7ABE1B7886D565B9E30B6E7B02B8859EDEF0B9A7BA00F97CBD1FE2D7B71FD8B0AD969EC2AEA7BA00B96CBA11EDBDB4814D6A4EC95C5576CB3AD3EEAD1C5BBF6E3DF58B8CFBD55CF9AB650BDF73D6EEAE3BF3A2CE4DF3D4980A69552E7F2D5DB4EDB13FAC951F29DB7E352D7F5379C2B7AEB5D51202EE7932F487ABEFEE3C22533B6EAECF13C2B7B7A37A8FB6B491767C9E6FAFB93EF1DBA125B74F08DF2B8F8C59FF75CBB7BAF6340ACAA4D751DAD8D26AA69EFA44CFED78F88EDD27846F4BAD3A45EDF5D5ADCBE5AF1607E0A7BD6E59F62B6F3D9BCC9E53B5563FBB97D3CB768EBE1749ED72F7EAA94FD4B83376CFCF0CA38FA306FFC30D60BB6A6736C217609BAA534AC217E0BBEA73F9C217605D93554CC2176059B3E5A3C217E0BBEACBC9AC4FBB5E4F4B74F6D057DAC8DA1F4AE9A74F646E433AA55331A54FD411DE8EA61D0002085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F0EDD3B0F1312029E10BFD5B3AF03A20EFD3D5A046F8424E4329E5155D098E13BE39D8D1E066846F9F5EC529257FE90F37247C211F6742C74C0F62A1ED287C010208DF7E7D8EC846397043C2177230EF5BC7B81D430735C217F271267403C2B77F7634B8A18C3BF6F494617C2AB6E7F94C4FE15E33DB6AB74FD6D3C62BFA49D6B629E55CFBB47CDE19F7EF33B46563D3061E161E3F5ACED2F735640C98ABEA9CB16D4A395FEF56CF3B6B7B9E91AA2DB34D3BCC35C2D123D296DFCBD281B3D43342CB1D52BB7358B6F02DA5CD54C0DC722EA7192C11BA9C96317C6BEA62C909A91CBDC6003FBCA32B1068EEC29D9D89254297AA3286EF3424A7F76A97726ED5C3B7C7791EC14B75D9C277EE2E9F9617DCEC68085E9AC838E77BC56D96A6202845F0D250C6F02DA5FD8EB075195ACB8340EBB2AF9856C9BC56BAB7E01D663E482CDBB4434FCEDE61B7E4EC1C7674F96335A789AEAC776FC15BCABFF510BEE785AE7612BEE72D5DFC9B6E3BA3D63448C40EBB161A679F53EDE9A11E43774AE8DEC413C237B2B3665947FCAD8D5ADFB6D943FB6408DEB10C75ECD9E7C01D960F4F08DF2B3B69AB916F6B6BF56C39BAFCF6B7AF922978AD4B3FAF8BB38727846F6B57ECB8B5CA8D38D2F718B663998297BAC66FCA75F96B2F7C8F6B75CA3C0DC896E5B7EE70353BF5F40267ED39F0DE83B7F7835826D3EB342EB825D3F205FB0464EF23E9A8BF533378B38458967A6662E40B17CA34DAA52DFFC30D2E2278E986F0E529042F5D11BE3C81E0A53BC2972711BC74C305B77B102ACBB40D5D12BED7DB7393431777E25C68EBF3BD5BBBDCEDF944D2969CA613CDD32EDC82395F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085F8000C2172080F00508207C0102085FB2987B431D6FB2435AC2B72F4B612264E066846F5F3EFF321EB839E14B5643F15F2A484CF8F64FC8FCE6AC805B11BE0001846F7F8CF0E0019CCEF6691CBE5EA39F3E6DA35D48CDC8172080F0ED93511DDC9CF025230727D2D389AFD7F2625AE6D753BB004DB50A99EC2B24B40B8F62DA012080F00508207C0102085F8000C2172080F00508207C0102BCA32BC02C6FACB36CBA6E57FB9092916FBF84CAB2D7E8C34D14A4247CFB247897691B6EC1B40359795F5F5233F22523C14B7AC2976CA6C16BCE97944C3BF46998F9DA28EF27A14B6AC2B74F827699B6E1164C3B000410BE0001842F4000E10B1040F8020410BE00012C358B618DEA3CEDC263FC07CE6D535CBD04ED300000000049454E44AE426082>|png>|351pt|180pt||>>
    <label|fig2.5>Structure formed by <code*|(cons (list 1 2) (list 3 4))>.
  </big-figure>

  Another way to think of sequences whose elements are sequences is as
  <em|trees><index|trees>. The elements of the sequence are the branches of
  the tree, and elements that are themselves sequences are subtrees.
  <hlink|Figure 2.6|#fig2.6> shows the structure in <hlink|Figure
  2.5|#fig2.5> viewed as a tree.

  <\big-figure|<tree|<scm|((1 2) 3 4)>|<tree|<scm|(1
  2)>|<scm|1>|<scm|2>>|<scm|3>|<scm|4>>>
    <label|fig2.6>The list structure in <hlink|Figure 2.5|#fig2.5> viewed as
    a tree.
  </big-figure>

  Recursion is a natural tool for dealing with tree structures, since we can
  often reduce operations on trees to operations on their branches, which
  reduce in turn to operations on the branches of the branches, and so on,
  until we reach the leaves of the tree. As an example, compare the
  <code*|length> procedure of <hlink|2.2.1|#g_t2_002e2_002e1> with the
  <code*|count-leaves> procedure, which returns the total number of leaves of
  a tree:

  <\session|scheme|default>
    <\input|Scheme] >
      (define x (cons (list 1 2) (list 3 4)))
    </input>

    <\unfolded-io|Scheme] >
      (length x)
    <|unfolded-io>
      3
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (count-leaves x)
    <|unfolded-io>
      4
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (list x x)
    <|unfolded-io>
      (((1 2) 3 4) ((1 2) 3 4))
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (length (list x x))
    <|unfolded-io>
      2
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (count-leaves (list x x))
    <|unfolded-io>
      8
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  To implement <code*|count-leaves>, recall the recursive plan for computing
  <code*|length>:

  <\itemize>
    <item><code*|Length> of a list <code*|x> is 1 plus <code*|length> of the
    <code*|cdr> of <code*|x>.

    <item><code*|Length> of the empty list is 0.
  </itemize>

  <code*|Count-leaves> is similar. The value for the empty list is the same:

  <\itemize>
    <item><code*|Count-leaves> of the empty list is 0.
  </itemize>

  But in the reduction step, where we strip off the <code*|car> of the list,
  we must take into account that the <code*|car> may itself be a tree whose
  leaves we need to count. Thus, the appropriate reduction step is

  <\itemize>
    <item><code*|Count-leaves> of a tree <code*|x> is <code*|count-leaves> of
    the <code*|car> of <code*|x> plus <code*|count-leaves> of the <code*|cdr>
    of <code*|x>.
  </itemize>

  Finally, by taking <code*|car>s we reach actual leaves, so we need another
  base case:

  <\itemize>
    <item><code*|Count-leaves> of a leaf is 1.
  </itemize>

  To aid in writing recursive procedures on trees, Scheme provides the
  primitive predicate <code*|pair?>, which tests whether its argument is a
  pair. Here is the complete procedure:<\footnote>
    The order of the first two clauses in the <code*|cond> matters, since the
    empty list satisfies <code*|null?> and also is not a pair.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (count-leaves x)

      \ \ (cond ((null? x) 0) \ 

      \ \ \ \ \ \ \ \ ((not (pair? x)) 1)

      \ \ \ \ \ \ \ \ (else (+ (count-leaves (car x))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (count-leaves (cdr x))))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  <\exercise>
    Suppose we evaluate the expression <code*|(list 1 (list 2 (list 3 4)))>.
    Give the result printed by the interpreter, the corresponding
    box-and-pointer structure, and the interpretation of this as a tree (as
    in <hlink|Figure 2.6|#Figure-2_002e6>).
  </exercise>

  <\exercise>
    Give combinations of <code*|car>s and <code*|cdr>s that will pick 7 from
    each of the following lists:

    <\scm-code>
      (1 3 (5 7) 9)

      ((7))

      (1 (2 (3 (4 (5 (6 7))))))
    </scm-code>
  </exercise>

  <\exercise>
    Suppose we define <code*|x> and <code*|y> to be two lists:

    <\session|scheme|default>
      <\input|Scheme] >
        (define x (list 1 2 3))
      </input>

      <\input|Scheme] >
        (define y (list 4 5 6))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    What result is printed by the interpreter in response to evaluating each
    of the following expressions:

    <\session|scheme|default>
      <\folded-io|Scheme] >
        (append x y)
      <|folded-io>
        (1 2 3 4 5 6)
      </folded-io>

      <\folded-io|Scheme] >
        (cons x y)
      <|folded-io>
        ((1 2 3) 4 5 6)
      </folded-io>

      <\folded-io|Scheme] >
        (list x y)
      <|folded-io>
        ((1 2 3) (4 5 6))
      </folded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>
  </exercise>

  <\exercise>
    Modify your <code*|reverse> procedure of <hlink|Exercise
    2.18|#Exercise-2_002e18> to produce a <code*|deep-reverse> procedure that
    takes a list as argument and returns as its value the list with its
    elements reversed and with all sublists deep-reversed as well. For
    example,

    <\scm-code>
      (define x (list (list 1 2) (list 3 4)))

      \;

      x

      ((1 2) (3 4))

      \;

      (reverse x)

      ((3 4) (1 2))

      \;

      (deep-reverse x)

      ((4 3) (2 1))
    </scm-code>
  </exercise>

  <\exercise>
    Write a procedure <code*|fringe> that takes as argument a tree
    (represented as a list) and returns a list whose elements are all the
    leaves of the tree arranged in left-to-right order. For example,

    <\scm-code>
      (define x (list (list 1 2) (list 3 4)))

      \;

      (fringe x)

      (1 2 3 4)

      \;

      (fringe (list x x))

      (1 2 3 4 1 2 3 4)
    </scm-code>
  </exercise>

  <\exercise>
    A binary mobile consists of two branches, a left branch and a right
    branch. Each branch is a rod of a certain length, from which hangs either
    a weight or another binary mobile. We can represent a binary mobile using
    compound data by constructing it from two branches (for example, using
    <code*|list>):

    <\scm-code>
      (define (make-mobile left right)

      \ \ (list left right))
    </scm-code>

    A branch is constructed from a <code*|length> (which must be a number)
    together with a <code*|structure>, which may be either a number
    (representing a simple weight) or another mobile:

    <\scm-code>
      (define (make-branch length structure)

      \ \ (list length structure))
    </scm-code>

    <\enumerate>
      <item>Write the corresponding selectors <code*|left-branch> and
      <code*|right-branch>, which return the branches of a mobile, and
      <code*|branch-length> and <code*|branch-structure>, which return the
      components of a branch.

      <item>Using your selectors, define a procedure <code*|total-weight>
      that returns the total weight of a mobile.

      <item>A mobile is said to be <em|balanced><index|balanced> if the
      torque applied by its top-left branch is equal to that applied by its
      top-right branch (that is, if the length of the left rod multiplied by
      the weight hanging from that rod is equal to the corresponding product
      for the right side) and if each of the submobiles hanging off its
      branches is balanced. Design a predicate that tests whether a binary
      mobile is balanced.

      <item>Suppose we change the representation of mobiles so that the
      constructors are

      <\scm-code>
        (define (make-mobile left right)

        \ \ (cons left right))

        (define (make-branch length structure)

        \ \ (cons length structure))
      </scm-code>

      How much do you need to change your programs to convert to the new
      representation?
    </enumerate>
  </exercise>

  <paragraph*|Mapping over trees>

  Just as <code*|map> is a powerful abstraction for dealing with sequences,
  <code*|map> together with recursion is a powerful abstraction for dealing
  with trees. For instance, the <code*|scale-tree> procedure, analogous to
  <code*|scale-list> of <hlink|2.2.1|#2.2.1>, takes as arguments a numeric
  factor and a tree whose leaves are numbers. It returns a tree of the same
  shape, where each number is multiplied by the factor. The recursive plan
  for <code*|scale-tree> is similar to the one for <code*|count-leaves>:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (scale-tree tree factor)

      \ \ (cond ((null? tree) #nil)

      \ \ \ \ \ \ \ \ ((not (pair? tree)) (* tree factor))

      \ \ \ \ \ \ \ \ (else (cons (scale-tree (car tree) factor)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (scale-tree (cdr tree)
      factor)))))
    </input>

    <\unfolded-io|Scheme] >
      (scale-tree (list 1 (list 2 (list 3 4) 5) (list 6 7))

      \ \ \ \ \ \ \ \ \ \ \ \ 10)
    <|unfolded-io>
      (10 (20 (30 40) 50) (60 70))
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Another way to implement <code*|scale-tree> is to regard the tree as a
  sequence of sub-trees and use <code*|map>. We map over the sequence,
  scaling each sub-tree in turn, and return the list of results. In the base
  case, where the tree is a leaf, we simply multiply by the factor:

  <\scm-code>
    (define (scale-tree tree factor)

    \ \ (map (lambda (sub-tree)

    \ \ \ \ \ \ \ \ \ (if (pair? sub-tree)

    \ \ \ \ \ \ \ \ \ \ \ \ \ (scale-tree sub-tree factor)

    \ \ \ \ \ \ \ \ \ \ \ \ \ (* sub-tree factor)))

    \ \ \ \ \ \ \ tree))
  </scm-code>

  Many tree operations can be implemented by similar combinations of sequence
  operations and recursion.

  <\exercise>
    <label|ex2.30>Define a procedure <code*|square-tree> analogous to the
    <code*|square-list> procedure of <hlink|Exercise 2.21|#ex2.21>. That is,
    <code*|square-tree> should behave as follows:

    <\scm-code>
      (square-tree

      \ (list 1

      \ \ \ \ \ \ \ (list 2 (list 3 4) 5)

      \ \ \ \ \ \ \ (list 6 7)))

      (1 (4 (9 16) 25) (36 49))
    </scm-code>

    Define <code*|square-tree> both directly (i.e., without using any
    higher-order procedures) and also by using <code*|map> and recursion.
  </exercise>

  <\exercise>
    Abstract your answer to <hlink|Exercise 2.30|#ex2.30> to produce a
    procedure <code*|tree-map> with the property that <code*|square-tree>
    could be defined as

    <\scm-code>
      (define (square-tree tree) (tree-map square tree))
    </scm-code>
  </exercise>

  <\exercise>
    We can represent a set as a list of distinct elements, and we can
    represent the set of all subsets of the set as a list of lists. For
    example, if the set is <code*|(1 2 3)>, then the set of all subsets is
    <code*|(() (3) (2) (2 3) (1) (1 3) (1 2) (1 2 3))>. Complete the
    following definition of a procedure that generates the set of subsets of
    a set and give a clear explanation of why it works:

    <\scm-code>
      (define (subsets s)

      \ \ (if (null? s)

      \ \ \ \ \ \ (list nil)

      \ \ \ \ \ \ (let ((rest (subsets (cdr s))))

      \ \ \ \ \ \ \ \ (append rest (map \<less\>??\<gtr\> rest)))))
    </scm-code>
  </exercise>

  <subsection|Sequences as Conventional Interfaces><label|2.2.3>

  In working with compound data, we've stressed how data abstraction permits
  us to design programs without becoming enmeshed in the details of data
  representations, and how abstraction preserves for us the flexibility to
  experiment with alternative representations. In this section, we introduce
  another powerful design principle for working with data structures\Vthe use
  of <em|conventional interfaces><index|conventional interfaces>.

  In <hlink|1.3|#1.3> we saw how program abstractions, implemented as
  higher-order procedures, can capture common patterns in programs that deal
  with numerical data. Our ability to formulate analogous operations for
  working with compound data depends crucially on the style in which we
  manipulate our data structures. Consider, for example, the following
  procedure, analogous to the <code*|count-leaves> procedure of
  <hlink|2.2.2|#2.2.2>, which takes a tree as argument and computes the sum
  of the squares of the leaves that are odd:

  <\scm-code>
    (define (sum-odd-squares tree)

    \ \ (cond ((null? tree) 0)

    \ \ \ \ \ \ \ \ ((not (pair? tree))

    \ \ \ \ \ \ \ \ \ (if (odd? tree) (square tree) 0))

    \ \ \ \ \ \ \ \ (else (+ (sum-odd-squares (car tree))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (sum-odd-squares (cdr tree))))))
  </scm-code>

  On the surface, this procedure is very different from the following one,
  which constructs a list of all the even Fibonacci numbers
  <math|<with|mode|text|Fib><around*|(|k|)>>, where <math|k> is less than or
  equal to a given integer <math|n>:

  <\scm-code>
    (define (even-fibs n)

    \ \ (define (next k)

    \ \ \ \ (if (\<gtr\> k n)

    \ \ \ \ \ \ \ \ nil

    \ \ \ \ \ \ \ \ (let ((f (fib k)))

    \ \ \ \ \ \ \ \ \ \ (if (even? f)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons f (next (+ k 1)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (next (+ k 1))))))

    \ \ (next 0))
  </scm-code>

  Despite the fact that these two procedures are structurally very different,
  a more abstract description of the two computations reveals a great deal of
  similarity. The first program

  <\itemize>
    <item>enumerates the leaves of a tree;

    <item>filters them, selecting the odd ones;

    <item>squares each of the selected ones; and

    <item>accumulates the results using <code*|+>, starting with 0.
  </itemize>

  The second program

  <\itemize>
    <item>enumerates the integers from 0 to <math|n>;

    <item>computes the Fibonacci number for each integer;

    <item>filters them, selecting the even ones; and

    <item>accumulates the results using <code*|cons>, starting with the empty
    list.
  </itemize>

  A signal-processing engineer would find it natural to conceptualize these
  processes in terms of signals flowing through a cascade of stages, each of
  which implements part of the program plan, as shown in <hlink|Figure
  2.7|#fig2.7>. In <code*|sum-odd-squares>, we begin with an
  <em|enumerator><index|enumerator>, which generates a \Psignal\Q consisting
  of the leaves of a given tree. This signal is passed through a
  <em|filter><index|filter>, which eliminates all but the odd elements. The
  resulting signal is in turn passed through a <em|map><index|map>, which is
  a \Ptransducer\Q that applies the <code*|square> procedure to each element.
  The output of the map is then fed to an
  <em|accumulator><index|accumulator>, which combines the elements using
  <code*|+>, starting from an initial 0. The plan for <code*|even-fibs> is
  analogous.

  <\big-figure|<\script-output|dot|default>
    digraph {

    \ \ rankdir=LR

    \ \ node [shape=box]

    \;

    \ \ "enumerate:\\ntree leaves"

    \ \ -\<gtr\> "filter:\\nodd?"

    \ \ -\<gtr\> "map:\\nsquare"

    \ \ -\<gtr\> "accumulate:\\n+, 0"

    \ \ \ \ 

    \ \ "enumerate:\\nintegers"

    \ \ -\<gtr\> "map:\\nfib"

    \ \ -\<gtr\> "filter:\\neven?"

    \ \ -\<gtr\> "accumulate:\\ncons, ()"

    }
  </script-output|<image|<tuple|<#>|ps>|0.618par|||>>>
    <label|fig2.7>The signal-flow plans for the procedures
    <code*|sum-odd-squares> (top) and <code*|even-fibs> (bottom) reveal the
    commonality between the two programs.
  </big-figure>

  Unfortunately, the two procedure definitions above fail to exhibit this
  signal-flow structure. For instance, if we examine the
  <code*|sum-odd-squares> procedure, we find that the enumeration is
  implemented partly by the <code*|null?> and <code*|pair?> tests and partly
  by the tree-recursive structure of the procedure. Similarly, the
  accumulation is found partly in the tests and partly in the addition used
  in the recursion. In general, there are no distinct parts of either
  procedure that correspond to the elements in the signal-flow description.
  Our two procedures decompose the computations in a different way, spreading
  the enumeration over the program and mingling it with the map, the filter,
  and the accumulation. If we could organize our programs to make the
  signal-flow structure manifest in the procedures we write, this would
  increase the conceptual clarity of the resulting code.

  <paragraph*|Sequence Operations>

  The key to organizing programs so as to more clearly reflect the
  signal-flow structure is to concentrate on the \Psignals\Q that flow from
  one stage in the process to the next. If we represent these signals as
  lists, then we can use list operations to implement the processing at each
  of the stages. For instance, we can implement the mapping stages of the
  signal-flow diagrams using the <code*|map> procedure from
  <hlink|2.2.1|#2.2.1>:

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (map square (list 1 2 3 4 5))
    <|unfolded-io>
      (1 4 9 16 25)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Filtering a sequence to select only those elements that satisfy a given
  predicate is accomplished by

  <\session|scheme|default>
    <\input|Scheme] >
      (define (filter predicate sequence)

      \ \ (cond ((null? sequence) nil)

      \ \ \ \ \ \ \ \ ((predicate (car sequence))

      \ \ \ \ \ \ \ \ \ (cons (car sequence)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (filter predicate (cdr sequence))))

      \ \ \ \ \ \ \ \ (else (filter predicate (cdr sequence)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  For example,

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (filter odd? (list 1 2 3 4 5))
    <|unfolded-io>
      (1 3 5)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Accumulations can be implemented by

  <\session|scheme|default>
    <\input|Scheme] >
      (define (accumulate op initial sequence)

      \ \ (if (null? sequence)

      \ \ \ \ \ \ initial

      \ \ \ \ \ \ (op (car sequence)

      \ \ \ \ \ \ \ \ \ \ (accumulate op initial (cdr sequence)))))
    </input>

    <\unfolded-io|Scheme] >
      (accumulate + 0 (list 1 2 3 4 5))
    <|unfolded-io>
      15
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (accumulate * 1 (list 1 2 3 4 5))
    <|unfolded-io>
      120
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (accumulate cons #nil (list 1 2 3 4 5))
    <|unfolded-io>
      (1 2 3 4 5)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  All that remains to implement signal-flow diagrams is to enumerate the
  sequence of elements to be processed. For <code*|even-fibs>, we need to
  generate the sequence of integers in a given range, which we can do as
  follows:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (enumerate-interval low high)

      \ \ (if (\<gtr\> low high)

      \ \ \ \ \ \ #nil

      \ \ \ \ \ \ (cons low (enumerate-interval (+ low 1) high))))
    </input>

    <\unfolded-io|Scheme] >
      (enumerate-interval 2 7)
    <|unfolded-io>
      (2 3 4 5 6 7)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  To enumerate the leaves of a tree, we can use<\footnote>
    This is, in fact, precisely the <code*|fringe> procedure from
    <hlink|Exercise 2.28|#Exercise-2_002e28>. Here we've renamed it to
    emphasize that it is part of a family of general sequence-manipulation
    procedures.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (enumerate-tree tree)

      \ \ (cond ((null? tree) #nil)

      \ \ \ \ \ \ \ \ ((not (pair? tree)) (list tree))

      \ \ \ \ \ \ \ \ (else (append (enumerate-tree (car tree))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-tree (cdr
      tree))))))
    </input>

    <\unfolded-io|Scheme] >
      (enumerate-tree (list 1 (list 2 (list 3 4)) 5))
    <|unfolded-io>
      (1 2 3 4 5)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now we can reformulate <code*|sum-odd-squares> and <code*|even-fibs> as in
  the signal-flow diagrams. For <code*|sum-odd-squares>, we enumerate the
  sequence of leaves of the tree, filter this to keep only the odd numbers in
  the sequence, square each element, and sum the results:

  <\scm-code>
    (define (sum-odd-squares tree)

    \ \ (accumulate +

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map square

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (filter odd?

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-tree
    tree)))))
  </scm-code>

  For <code*|even-fibs>, we enumerate the integers from 0 to <math|n>,
  generate the Fibonacci number for each of these integers, filter the
  resulting sequence to keep only the even elements, and accumulate the
  results into a list:

  <\scm-code>
    (define (even-fibs n)

    \ \ (accumulate cons

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ nil

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (filter even?

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map fib

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval
    0 n)))))
  </scm-code>

  The value of expressing programs as sequence operations is that this helps
  us make program designs that are modular, that is, designs that are
  constructed by combining relatively independent pieces. We can encourage
  modular design by providing a library of standard components together with
  a conventional interface for connecting the components in flexible ways.

  Modular construction is a powerful strategy for controlling complexity in
  engineering design. In real signal-processing applications, for example,
  designers regularly build systems by cascading elements selected from
  standardized families of filters and transducers. Similarly, sequence
  operations provide a library of standard program elements that we can mix
  and match. For instance, we can reuse pieces from the
  <code*|sum-odd-squares> and <code*|even-fibs> procedures in a program that
  constructs a list of the squares of the first <math|n+1> Fibonacci numbers:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (list-fib-squares n)

      \ \ (accumulate cons

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ #nil

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map square

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map <hlink|fib|#define_fib>

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 0
      n)))))
    </input>

    <\unfolded-io|Scheme] >
      (list-fib-squares 10)
    <|unfolded-io>
      (0 1 1 4 9 25 64 169 441 1156 3025)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  We can rearrange the pieces and use them in computing the product of the
  squares of the odd integers in a sequence:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (product-of-squares-of-odd-elements sequence)

      \ \ (accumulate *

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map <hlink|square|#define_square>

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (filter odd? sequence))))
    </input>

    <\unfolded-io|Scheme] >
      (product-of-squares-of-odd-elements (list 1 2 3 4 5))
    <|unfolded-io>
      225
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  We can also formulate conventional data-processing applications in terms of
  sequence operations. Suppose we have a sequence of personnel records and we
  want to find the salary of the highest-paid programmer. Assume that we have
  a selector <code*|salary> that returns the salary of a record, and a
  predicate <code*|programmer?> that tests if a record is for a programmer.
  Then we can write

  <\scm-code>
    (define (salary-of-highest-paid-programmer records)

    \ \ (accumulate max

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map salary

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (filter programmer? records))))
  </scm-code>

  These examples give just a hint of the vast range of operations that can be
  expressed as sequence operations.<\footnote>
    Richard <hlink|Waters (1979)|References.xhtml#Waters-_00281979_0029>
    developed a program that automatically analyzes traditional Fortran
    programs, viewing them in terms of maps, filters, and accumulations. He
    found that fully 90 percent of the code in the Fortran Scientific
    Subroutine Package fits neatly into this paradigm. One of the reasons for
    the success of Lisp as a programming language is that lists provide a
    standard medium for expressing ordered collections so that they can be
    manipulated using higher-order operations. The programming language APL
    owes much of its power and appeal to a similar choice. In APL all data
    are represented as arrays, and there is a universal and convenient set of
    generic operators for all sorts of array operations.
  </footnote>

  Sequences, implemented here as lists, serve as a conventional interface
  that permits us to combine processing modules. Additionally, when we
  uniformly represent structures as sequences, we have localized the
  data-structure dependencies in our programs to a small number of sequence
  operations. By changing these, we can experiment with alternative
  representations of sequences, while leaving the overall design of our
  programs intact. We will exploit this capability in
  <hlink|3.5|3_002e5.xhtml#g_t3_002e5>, when we generalize the
  sequence-processing paradigm to admit infinite sequences.

  <\exercise>
    Fill in the missing expressions to complete the following definitions of
    some basic list-manipulation operations as accumulations:

    <\scm-code>
      (define (map p sequence)

      \ \ (accumulate (lambda (x y) \<less\>??\<gtr\>) nil sequence))

      (define (append seq1 seq2)

      \ \ (accumulate cons \<less\>??\<gtr\> \<less\>??\<gtr\>))

      (define (length sequence)

      \ \ (accumulate \<less\>??\<gtr\> 0 sequence))
    </scm-code>
  </exercise>

  <\exercise>
    Evaluating a polynomial in <math|x> at a given value of <math|x> can be
    formulated as an accumulation. We evaluate the polynomial
    <math|a<rsub|n>*x<rsup|n>+a<rsub|n-1>*x<rsup|n-1>+\<cdots\>+a<rsub|1>*x+a<rsub|0>>
    using a well-known algorithm called <em|Horner's rule><index|Horner's
    rule>, which structures the computation as
    <math|<around*|(|\<ldots\><around*|(|a<rsub|n>*x+a<rsub|n-1>|)>*x+\<cdots\>+a<rsub|1>|)>*x+a<rsub|0>>.
    In other words, we start with <math|a<rsub|n>>, multiply by <math|x>, add
    <math|a<rsub|n-1>>, multiply by <math|x>, and so on, until we reach
    <math|a<rsub|0>>.<\footnote>
      According to <hlink|Knuth 1981|References.xhtml#Knuth-1981>, this rule
      was formulated by W. G. Horner early in the nineteenth century, but the
      method was actually used by Newton over a hundred years earlier.
      Horner's rule evaluates the polynomial using fewer additions and
      multiplications than does the straightforward method of first computing
      <math|a<rsub|n>*x<rsup|n>>, then adding <math|a<rsub|n-1>*x<rsup|n-1>>,
      and so on. In fact, it is possible to prove that any algorithm for
      evaluating arbitrary polynomials must use at least as many additions
      and multiplications as does Horner's rule, and thus Horner's rule is an
      optimal algorithm for polynomial evaluation. This was proved (for the
      number of additions) by A. M. Ostrowski in a 1954 paper that
      essentially founded the modern study of optimal algorithms. The
      analogous statement for multiplications was proved by V. Y. Pan in
      1966. The book by <hlink|Borodin and Munro
      (1975)|References.xhtml#Borodin-and-Munro-_00281975_0029> provides an
      overview of these and other results about optimal algorithms.
    </footnote>

    Fill in the following template to produce a procedure that evaluates a
    polynomial using Horner's rule. Assume that the coefficients of the
    polynomial are arranged in a sequence, from <math|a<rsub|0>> through
    <math|a<rsub|n>>.

    <\scm-code>
      (define (horner-eval x coefficient-sequence)

      \ \ (accumulate (lambda (this-coeff higher-terms) \<less\>??\<gtr\>)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ coefficient-sequence))
    </scm-code>

    For example, to compute <math|1+3*x+5*x<rsup|3>+x<rsup|5>> at <math|x=2>
    you would evaluate

    <\scm-code>
      (horner-eval 2 (list 1 3 0 5 0 1))
    </scm-code>
  </exercise>

  <\exercise>
    Redefine <code*|count-leaves> from <hlink|2.2.2|#2.2.2> as an
    accumulation:

    <\scm-code>
      (define (count-leaves t)

      \ \ (accumulate \<less\>??\<gtr\> \<less\>??\<gtr\> (map
      \<less\>??\<gtr\> \<less\>??\<gtr\>)))
    </scm-code>
  </exercise>

  <\exercise>
    The procedure <code*|accumulate-n> is similar to <code*|accumulate>
    except that it takes as its third argument a sequence of sequences, which
    are all assumed to have the same number of elements. It applies the
    designated accumulation procedure to combine all the first elements of
    the sequences, all the second elements of the sequences, and so on, and
    returns a sequence of the results. For instance, if <code*|s> is a
    sequence containing four sequences, <code*|((1 2 3) (4 5 6) (7 8 9) (10
    11 12)),> then the value of <code*|(accumulate-n + 0 s)> should be the
    sequence <code*|(22 26 30)>. Fill in the missing expressions in the
    following definition of <code*|accumulate-n>:

    <\scm-code>
      (define (accumulate-n op init seqs)

      \ \ (if (null? (car seqs))

      \ \ \ \ \ \ nil

      \ \ \ \ \ \ (cons (accumulate op init \<less\>??\<gtr\>)

      \ \ \ \ \ \ \ \ \ \ \ \ (accumulate-n op init \<less\>??\<gtr\>))))
    </scm-code>
  </exercise>

  <\exercise>
    Suppose we represent vectors <with|font-series|bold|v> =
    <math|<around*|(|v<rsub|i>|)>> as sequences of numbers, and matrices
    <with|font-series|bold|m> = <math|<around*|(|m<rsub|ij>|)>> as sequences
    of vectors (the rows of the matrix). For example, the matrix
    <math|<around*|(|<tabular|<table|<row|<cell|1>|<cell|2>|<cell|3>|<cell|4>>|<row|<cell|4>|<cell|5>|<cell|6>|<cell|6>>|<row|<cell|6>|<cell|7>|<cell|8>|<cell|9>>>>|)>>
    is represented as the sequence <code*|((1 2 3 4) (4 5 6 6) (6 7 8 9))>.
    With this representation, we can use sequence operations to concisely
    express the basic matrix and vector operations. These operations (which
    are described in any book on matrix algebra) are the following:

    <math|<tabular|<tformat|<cwith|1|-1|1|1|cell-halign|r>|<cwith|1|-1|2|2|cell-halign|l>|<table|<row|<cell|<with|mode|text|(dot-product
    v w)>>|<cell|<with|mode|text|returns the sum>
    \<Sigma\><rsub|i>*v<rsub|i>*w<rsub|i>;>>|<row|<cell|<with|mode|text|(matrix-*-vector
    m v)>>|<cell|<with|mode|text|returns the vector
    >t,>>|<row|<cell|>|<cell|<with|mode|text|where>
    t<rsub|i>=\<Sigma\><rsub|j>*m<rsub|ij>*v<rsub|j>;>>|<row|<cell|<with|mode|text|(matrix-*-matrix
    m n)>>|<cell|<with|mode|text|returns the matrix>
    p,>>|<row|<cell|>|<cell|<with|mode|text|where>
    p<rsub|ij>=\<Sigma\><rsub|k>*m<rsub|ik>*n<rsub|kj>;>>|<row|<cell|<with|mode|text|(transpose
    m)>>|<cell|<with|mode|text|returns the matrix>
    n,>>|<row|<cell|>|<cell|<with|mode|text|where>
    n<rsub|ij>=m<rsub|ji>.>>>>>>\ 

    We can define the dot product as<\footnote>
      This definition uses the extended version of <code*|map> described in
      <hlink|Footnote 78|#Footnote-78>.
    </footnote>

    <\scm-code>
      (define (dot-product v w)

      \ \ (accumulate + 0 (map * v w)))
    </scm-code>

    Fill in the missing expressions in the following procedures for computing
    the other matrix operations. (The procedure <code*|accumulate-n> is
    defined in <hlink|Exercise 2.36|#Exercise-2_002e36>.)

    <\scm-code>
      (define (matrix-*-vector m v)

      \ \ (map \<less\>??\<gtr\> m))

      (define (transpose mat)

      \ \ (accumulate-n \<less\>??\<gtr\> \<less\>??\<gtr\> mat))

      (define (matrix-*-matrix m n)

      \ \ (let ((cols (transpose n)))

      \ \ \ \ (map \<less\>??\<gtr\> m)))
    </scm-code>
  </exercise>

  <\exercise>
    The <code*|accumulate> procedure is also known as <code*|fold-right>,
    because it combines the first element of the sequence with the result of
    combining all the elements to the right. There is also a
    <code*|fold-left>, which is similar to <code*|fold-right>, except that it
    combines elements working in the opposite direction:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (fold-left op initial sequence)

        \ \ (define (iter result rest)

        \ \ \ \ (if (null? rest)

        \ \ \ \ \ \ \ \ result

        \ \ \ \ \ \ \ \ (iter (op result (car rest))

        \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cdr rest))))

        \ \ (iter initial sequence))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    What are the values of

    <\session|scheme|default>
      <\input|Scheme] >
        (fold-right / 1 (list 1 2 3))
      </input>

      <\folded-io|Scheme] >
        (fold-left \ / 1 (list 1 2 3))
      <|folded-io>
        1/6
      </folded-io>

      <\input|Scheme] >
        (fold-right list nil (list 1 2 3))
      </input>

      <\input|Scheme] >
        (fold-left list nil (list 1 2 3))
      </input>
    </session>

    Give a property that <code*|op> should satisfy to guarantee that
    <code*|fold-right> and <code*|fold-left> will produce the same values for
    any sequence.
  </exercise>

  <\exercise>
    Complete the following definitions of <code*|reverse> (<hlink|Exercise
    2.18|#Exercise-2_002e18>) in terms of <code*|fold-right> and
    <code*|fold-left> from <hlink|Exercise 2.38|#Exercise-2_002e38>:

    <\scm-code>
      (define (reverse sequence)

      \ \ (fold-right (lambda (x y) \<less\>??\<gtr\>) nil sequence))

      (define (reverse sequence)

      \ \ (fold-left (lambda (x y) \<less\>??\<gtr\>) nil sequence))
    </scm-code>
  </exercise>

  <paragraph*|Nested Mappings>

  We can extend the sequence paradigm to include many computations that are
  commonly expressed using nested loops.<\footnote>
    This approach to nested mappings was shown to us by David Turner, whose
    languages KRC and Miranda provide elegant formalisms for dealing with
    these constructs. The examples in this section (see also <hlink|Exercise
    2.42|#Exercise-2_002e42>) are adapted from <hlink|Turner
    1981|References.xhtml#Turner-1981>. In
    <hlink|3.5.3|3_002e5.xhtml#g_t3_002e5_002e3>, we'll see how this approach
    generalizes to infinite sequences.
  </footnote> Consider this problem: Given a positive integer <math|n>, find
  all ordered pairs of distinct positive integers <math|i> and <math|j>,
  where <math|1\<leq\>j\<less\>i\<leq\>n>, such that <math|i+j> is prime. For
  example, if <math|n> is 6, then the pairs are the following:

  \ <math|<tabular|<tformat|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|2|2|cell-halign|c>|<cwith|1|-1|3|3|cell-halign|c>|<cwith|1|-1|4|4|cell-halign|c>|<cwith|1|-1|5|5|cell-halign|c>|<cwith|1|-1|6|6|cell-halign|c>|<cwith|1|-1|7|7|cell-halign|c>|<cwith|1|-1|8|8|cell-halign|c>|<table|<row|<cell|i>|<cell|2>|<cell|3>|<cell|4>|<cell|4>|<cell|5>|<cell|6>|<cell|6>>|<row|<cell|j>|<cell|1>|<cell|2>|<cell|1>|<cell|3>|<cell|2>|<cell|1>|<cell|5>>|<row|<cell|i+j>|<cell|3>|<cell|5>|<cell|5>|<cell|7>|<cell|7>|<cell|7>|<cell|11>>>>>>

  A natural way to organize this computation is to generate the sequence of
  all ordered pairs of positive integers less than or equal to <math|n>,
  filter to select those pairs whose sum is prime, and then, for each pair
  <math|<around*|(|i,j|)>> that passes through the filter, produce the triple
  <math|<around*|(|i,j,i+j|)>>.

  Here is a way to generate the sequence of pairs: For each integer
  <math|i\<leq\>n>, enumerate the integers <math|j\<less\>i>, and for each
  such <math|i> and <math|j> generate the pair <math|<around*|(|i,j|)>>. In
  terms of sequence operations, we map along the sequence
  <code*|(enumerate-interval 1 n)>. For each <math|i> in this sequence, we
  map along the sequence <code*|(enumerate-interval 1 (- i 1))>. For each
  <math|j> in this latter sequence, we generate the pair <code*|(list i j)>.
  This gives us a sequence of pairs for each <math|i>. Combining all the
  sequences for all the <math|i> (by accumulating with <code*|append>)
  produces the required sequence of pairs:<\footnote>
    We're representing a pair here as a list of two elements rather than as a
    Lisp pair. Thus, the \Ppair\Q <math|<around*|(|i,j|)>> is represented as
    <code*|(list i j)>, not <code*|(cons i j)>.
  </footnote>

  <\scm-code>
    (accumulate append

    \ \ \ \ \ \ \ \ \ \ \ \ nil

    \ \ \ \ \ \ \ \ \ \ \ \ (map (lambda (i)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map (lambda (j) (list i j))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 1 (-
    i 1))))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 1 n)))
  </scm-code>

  The combination of mapping and accumulating with <code*|append> is so
  common in this sort of program that we will isolate it as a separate
  procedure:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (flatmap proc seq)

      \ \ (accumulate append nil (map proc seq)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now filter this sequence of pairs to find those whose sum is prime. The
  filter predicate is called for each element of the sequence; its argument
  is a pair and it must extract the integers from the pair. Thus, the
  predicate to apply to each element in the sequence is

  <\session|scheme|default>
    <\input|Scheme] >
      (define (prime-sum? pair)

      \ \ (prime? (+ (car pair) (cadr pair))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Finally, generate the sequence of results by mapping over the filtered
  pairs using the following procedure, which constructs a triple consisting
  of the two elements of the pair along with their sum:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-pair-sum pair)

      \ \ (list (car pair) (cadr pair) (+ (car pair) (cadr pair))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Combining all these steps yields the complete procedure:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (prime-sum-pairs n)

      \ \ (map make-pair-sum

      \ \ \ \ \ \ \ (filter prime-sum?

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (flatmap

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (lambda (i)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map (lambda (j) (list i j))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 1 (-
      i 1))))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 1 n)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Nested mappings are also useful for sequences other than those that
  enumerate intervals. Suppose we wish to generate all the permutations of a
  set <math|S>; that is, all the ways of ordering the items in the set. For
  instance, the permutations of <math|<around*|{|1,2,3|}>> are
  <math|<around*|{|1,2,3|}>>, <math|<around*|{|1,3,2|}>>,
  <math|<around*|{|2,1,3|}>>, <math|<around*|{|2,3,1|}>>,
  <math|<around*|{|3,1,2|}>>, and <math|<around*|{|3,2,1|}>>. Here is a plan
  for generating the permutations of <math|S>: For each item <math|x> in
  <math|S>, recursively generate the sequence of permutations of
  <math|S-x>,<\footnote>
    The set <math|S-x> is the set of all elements of <math|S>, excluding
    <math|x>.
  </footnote> and adjoin <math|x> to the front of each one. This yields, for
  each <math|x> in <math|S>, the sequence of permutations of <math|S> that
  begin with <math|x>. Combining these sequences for all <math|x> gives all
  the permutations of <math|S>:<\footnote>
    Semicolons in Scheme code are used to introduce
    <em|comments><index|comments>. Everything from the semicolon to the end
    of the line is ignored by the interpreter. In this book we don't use many
    comments; we try to make our programs self-documenting by using
    descriptive names.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (permutations s)

      \ \ (if (null? s) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ; empty set?

      \ \ \ \ \ \ (list nil) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ; sequence
      containing empty set

      \ \ \ \ \ \ (flatmap (lambda (x)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (map (lambda (p) (cons x p))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (permutations (remove x
      s))))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Notice how this strategy reduces the problem of generating permutations of
  <math|S> to the problem of generating the permutations of sets with fewer
  elements than <math|S>. In the terminal case, we work our way down to the
  empty list, which represents a set of no elements. For this, we generate
  <code*|(list nil)>, which is a sequence with one item, namely the set with
  no elements. The <code*|remove> procedure used in <code*|permutations>
  returns all the items in a given sequence except for a given item. This can
  be expressed as a simple filter:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (remove item sequence)

      \ \ (filter (lambda (x) (not (= x item)))

      \ \ \ \ \ \ \ \ \ \ sequence))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  <\exercise>
    Define a procedure <code*|unique-pairs> that, given an integer <math|n>,
    generates the sequence of pairs <math|<around*|(|i,j|)>> with
    <math|1\<leq\>j\<less\>i\<leq\>n>. Use <code*|unique-pairs> to simplify
    the definition of <code*|prime-sum-pairs> given above.
  </exercise>

  <\exercise>
    Write a procedure to find all ordered triples of distinct positive
    integers <math|i>, <math|j>, and <math|k> less than or equal to a given
    integer <math|n> that sum to a given integer <math|s>.
  </exercise>

  <\exercise>
    The \Peight-queens puzzle\Q asks how to place eight queens on a
    chessboard so that no queen is in check from any other (i.e., no two
    queens are in the same row, column, or diagonal). One possible solution
    is shown in <hlink|Figure 2.8|#fig2.8>. One way to solve the puzzle is to
    work across the board, placing a queen in each column. Once we have
    placed <math|k-1> queens, we must place the
    <math|k<rsup|<with|mode|text|th>>> queen in a position where it does not
    check any of the queens already on the board. We can formulate this
    approach recursively: Assume that we have already generated the sequence
    of all possible ways to place <math|k-1> queens in the first <math|k-1>
    columns of the board. For each of these ways, generate an extended set of
    positions by placing a queen in each row of the
    <math|k<rsup|<with|mode|text|th>>> column. Now filter these, keeping only
    the positions for which the queen in the
    <math|k<rsup|<with|mode|text|th>>> column is safe with respect to the
    other queens. This produces the sequence of all ways to place <math|k>
    queens in the first <math|k> columns. By continuing this process, we will
    produce not only one solution, but all solutions to the puzzle.

    <\big-figure|<image|<tuple|<#89504E470D0A1A0A0000000D494844520000011A0000011A0806000000CEB398BA0000000473424954080808087C086488000000097048597300000B1300000B1301009A9C18000008A849444154789CEDDDD98AE4381040D1A8A1FFFF97AB1F8604B7F122DB0AA796735E063A17440D5C42B233F327227E0320CF4F84D0B4CEFF9F7DFE36DB5AFABBFC4644FCF7ED552C34F7C76193BFCD367F97032D85061894D000E984064827348CEAECCCA4E44C65EF39CE632E121A66F41BFF5F72158C97080D6C33CD5424348CEC69144C3D95080D33DB0BC9676B452542C3C86A4F24027493D000E98486D1ADA79AF55472F6F8D9BF534068807442C30C5C3DFAB23FDF5E0034601922DBA604261A6661AAF922130D33399A4AF61E33C95460A201D2090D904E6880744203D7B8027583C3606651E393DCDC24348C6A7D39FB69285C1A7F4068185DAD49E4F33E827383D030B2B33B7EAFA8F53E53121A46576B1211980784865908C517B9BC0DA4131A209DD000E98406482734403AA101D2090D90CED71B02D97E22DA094D2BEB88B096232DADC75AB635B7165B27209DD000E98406482734D79CED7D7F1F3EA7A5BD35542334ED1019862534D709025C2434F51DDD9BE41BF49992D05C977193A3003134A1A9472C6087D0DC7336D56C3DBE17228162784203A4139AFBEE4C35A5AF85A108CD3B6C9B989A9F5B79A6E60F94C1B04C34B93E21DA8B90383105A1794E2CE084D0D471149BD269C6E130C3129AB6988E1892D05CE3B234DC2034403A97B79F793ADDD82A3105A1B9AFC6FD33B6614C4168EEAB318D7CDEC31DC20CCD19CD759F03E15AD388A986E19968EE594E22B5DE0B862534CF880414B07502D2090D904E6880744203A4131A209DD000E9840648B7FCAA4977A802197E22DA094C2BEB88B096232DADC75AB635B7165B27209DD000E9840648B7179AB33D5EC91E70EFAB145ADA3F022F7832D1080650E42834420254F164A239BAF7E6E847ED81C91C85662F24BEDF16B824E3AA931001FF380BCDD94713AE7C7441806052EEA301D29584A6C6D4629A81895D9D68B682E193DFC0A1D2D08809705BCD339AA369C7B6092676253447B1101260D7D589E64E6C440826E7F236904E6880747BA1719509A8E6CF85E7DE0D8F331A98DC59689671B91B8C75A084072673169A1A5158BE87ED184CA8E4FB686AC5C18D7B30A9D289E6ECAB22CE9EB37C1E3099D2C3E0A348FC163C0798D895AB4E7B040638E4863D209DD000E98406482734403AA101D2090D906EF9559B3E1E0064F889682730ADAC23C25A8EB4B41E6BD9D6DC5A6C9D80744203A4131A209DD0C077959CA7B474E6728BD040AEA3483C0D483701121AF8AEB35B4BF61EEB26321142036FE82A0A198406DAF5B999B6FB1B6A8506F29D85E26A48BAFBFE6DA101D2090DBC633DB5ACA792B3C7CFFEBD694203A4131A784FF787BA77D5F81504A08E658886D936459868E06D534E354203DF716732E9729A89B075826F380AC6DE63DD4626C24403BC4068807442037DEAEA0A94331A78DF9DAB4EDD44658BD040AEADCBD977A2D1F52571A181773C9D48D6AFEF2A3CCE68E01D35C3D0D5F94C848906DEF089C2566C8E82B117A7AE22132134F0A6BDCF2F5D797E978406BE6B98981C714603A4131A209DD000E98406482734403AA101D24DF9B582C0AB7E22DA094D2BEB88B096232DADC75AB635B7165B27209DD000E9840648273464FB8DB2338396CE15A84C6878AA4620F6DEA33452344E68A8410C382434BCE1E87EADEEBE2D8EEB84861A326EFC14A081080D99C48288101AEA399B6AB61EDF0B91400D4668807442434D4FCE6A7CC0776042C39B9631B16D9A885F41A0B6654C04838830D1F0BE92436306233464288985A04C4468C8721492BDC7C467504243CB5C851A84D0F054F6656953CE00840648E7F23699AE4C3A269781090D35ADC372251E4F5E4BE384865A9EDED1BB7EAD83E08138A3A186ACE9C3543308130DB5EC5D7D2A89C5DDD7D109A1A1A6BD0F49DE791D03111AB28908CE68807C4203A4131A209DD000E9840648273440BACF4D56BE811E48D54A605A594784B51C69693DD6B2ADB9B5D83A01E98406482734403AA1013E4ACE766E9DFF080DCC23F390F8F0BD85068828BBCDE576A88406E6F274AAD98AD1E97B0A0D904E68602E67DBA3BDC7F7BE7CBEE84BE98506482734309FBB53CD6D42039C6D7F1E6D9B22840666F5EA3736F8150460CB32448FA69908130DCCECB5A946688074B64E30B7A3EDCFDE63977F14D04403A4131A209DD0004F9D5E8172460344945F7DBA7C3E1321343093A39F572A0DC8ADD7090DCCE7D2CD762BEBD7154D42CE688074261A98CB67DB64EB04A4DAFBECD2DDD79E121A20E2FE994D116734403AA101D2090D904E6880744203A4131A20DDAB5F500C4CE927A29DD0B4B28E086B39D2D27AAC655B736BB17502D2090D904E6880742384A6743FDAD2BE15A6D243684A0271F69CBDC7C5075ED04368220401BAD64B689E78F2B5854005BD8466EFC6C24F44EEDC78684A8297F4121AA0633D85E66C6AD97A7C6FDB643B052FEA293440A77A0B8D0F8142877A0BCD9965886C9BA0113DFE0AC232265782611A822F196DA229619A8197F51A9AA3582C7FC81C6840AFA189388FCDD5D700497A0E0DD009A101D2F5101A578BA0733D5EDE5E2B8990B319F8A2DE42B315959288AC5F273CF0A29E42F3E492F5FA75776EF8036EEAE18C26A27E1004065ED4D34413F1EF16E86A2C6C9FE04B7A0ACDDEF6E7EEEB8197F4149A35E1804EF4724603744C6880744203A4131A209DD000E9840648E793D1C02B5A094D2BEB88B096232DADC75AB635B7165B27209DD000E98406482734403AA11957E981604B07870C4A68FA551288B3E71C3D2E405423347DCB8A81C85095D08CCD0D99344168FAF624247E9F9CD7080D6B02447542D3BFADA966190BDB27BE4E68E6B437B59866482134637832B59878482734731013BE4A68C6511A13DB265E2734E3110C9A233463390ACC67E2D97B8E38914668C673169BABAF81C784862D0E8EA94A68FA957D25C99443354203A4131A20DD9F6F2F806A6A6CA36C97482134FDFB04A646241C0293C2D6A96F3FABFFB6F67E1011269A112CAF3E3D0944CDC908FE213463F8C4E1C9D6476048233463110B9AE48C06482734403AA101D2090D904E688074BE4B16C8F6F317D5D2605C25B904BD0000000049454E44AE426082>|png>|200pt|||>>
      <label|fig2.8>A solution to the eight-queens puzzle.
    </big-figure>

    We implement this solution as a procedure <code*|queens>, which returns a
    sequence of all solutions to the problem of placing <math|n> queens on an
    <math|n\<times\>n> chessboard. <code*|Queens> has an internal procedure
    <code*|queen-cols> that returns the sequence of all ways to place queens
    in the first <math|k> columns of the board.

    <\scm-code>
      (define (queens board-size)

      \ \ (define (queen-cols k) \ 

      \ \ \ \ (if (= k 0)

      \ \ \ \ \ \ \ \ (list empty-board)

      \ \ \ \ \ \ \ \ (filter

      \ \ \ \ \ \ \ \ \ (lambda (positions) (safe? k positions))

      \ \ \ \ \ \ \ \ \ (flatmap

      \ \ \ \ \ \ \ \ \ \ (lambda (rest-of-queens)

      \ \ \ \ \ \ \ \ \ \ \ \ (map (lambda (new-row)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-position new-row k
      rest-of-queens))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (enumerate-interval 1 board-size)))

      \ \ \ \ \ \ \ \ \ \ (queen-cols (- k 1))))))

      \ \ (queen-cols board-size))
    </scm-code>

    In this procedure <code*|rest-of-queens> is a way to place <math|k-1>
    queens in the first <math|k-1> columns, and <code*|new-row> is a proposed
    row in which to place the queen for the
    <math|k<rsup|<with|mode|text|th>>> column. Complete the program by
    implementing the representation for sets of board positions, including
    the procedure <code*|adjoin-position>, which adjoins a new row-column
    position to a set of positions, and <code*|empty-board>, which represents
    an empty set of positions. You must also write the procedure
    <code*|safe?>, which determines for a set of positions, whether the queen
    in the <math|k<rsup|<with|mode|text|th>>> column is safe with respect to
    the others. (Note that we need only check whether the new queen is
    safe\Vthe other queens are already guaranteed safe with respect to each
    other.)
  </exercise>

  <\exercise>
    Louis Reasoner is having a terrible time doing <hlink|Exercise
    2.42|#Exercise-2_002e42>. His <code*|queens> procedure seems to work, but
    it runs extremely slowly. (Louis never does manage to wait long enough
    for it to solve even the <math|6\<times\>6> case.) When Louis asks Eva Lu
    Ator for help, she points out that he has interchanged the order of the
    nested mappings in the <code*|flatmap>, writing it as

    <\scm-code>
      (flatmap

      \ (lambda (new-row)

      \ \ \ (map (lambda (rest-of-queens)

      \ \ \ \ \ \ \ \ \ \ (adjoin-position new-row k rest-of-queens))

      \ \ \ \ \ \ \ \ (queen-cols (- k 1))))

      \ (enumerate-interval 1 board-size))
    </scm-code>

    Explain why this interchange makes the program run slowly. Estimate how
    long it will take Louis's program to solve the eight-queens puzzle,
    assuming that the program in <hlink|Exercise 2.42|#Exercise-2_002e42>
    solves the puzzle in time <math|T>.
  </exercise>

  <subsection|Example: A Picture Language>

  This section presents a simple language for drawing pictures that
  illustrates the power of data abstraction and closure, and also exploits
  higher-order procedures in an essential way. The language is designed to
  make it easy to experiment with patterns such as the ones in <hlink|Figure
  2.9|#fig2.9>, which are composed of repeated elements that are shifted and
  scaled.<\footnote>
    The picture language is based on the language Peter Henderson created to
    construct images like M.C. Escher's \PSquare Limit\Q woodcut (see
    <hlink|Henderson 1982|References.xhtml#Henderson-1982>). The woodcut
    incorporates a repeated scaled pattern, similar to the arrangements drawn
    using the <code*|square-limit> procedure in this section.
  </footnote> In this language, the data objects being combined are
  represented as procedures rather than as list structure. Just as
  <code*|cons>, which satisfies the closure property, allowed us to easily
  build arbitrarily complicated list structure, the operations in this
  language, which also satisfy the closure property, allow us to easily build
  arbitrarily complicated patterns.

  <\big-figure>
    <image|<tuple||png>|189pt|188pt||><image|<tuple||png>|189pt|188pt||>
  <|big-figure>
    <label|fig2.9>Designs generated with the picture language.
  </big-figure>

  <paragraph*|The picture language>

  When we began our study of programming in <hlink|1.1|#1.1>, we emphasized
  the importance of describing a language by focusing on the language's
  primitives, its means of combination, and its means of abstraction. We'll
  follow that framework here.

  Part of the elegance of this picture language is that there is only one
  kind of element, called a <em|painter><index|painter>. A painter draws an
  image that is shifted and scaled to fit within a designated
  parallelogram-shaped frame. For example, there's a primitive painter we'll
  call <code*|wave> that makes a crude line drawing, as shown in
  <hlink|Figure 2.10|#Figure-2_002e10>. The actual shape of the drawing
  depends on the frame\Vall four images in figure 2.10 are produced by the
  same <code*|wave> painter, but with respect to four different frames.
  Painters can be more elaborate than this: The primitive painter called
  <code*|rogers> paints a picture of <abbr|MIT>'s founder, William Barton
  Rogers, as shown in <hlink|Figure 2.11|#fig2.11>.<\footnote>
    William Barton Rogers (1804-1882) was the founder and first president of
    <abbr|MIT>. A geologist and talented teacher, he taught at William and
    Mary College and at the University of Virginia. In 1859 he moved to
    Boston, where he had more time for research, worked on a plan for
    establishing a \Ppolytechnic institute,\Q and served as Massachusetts's
    first State Inspector of Gas Meters.

    When <abbr|MIT> was established in 1861, Rogers was elected its first
    president. Rogers espoused an ideal of \Puseful learning\Q that was
    different from the university education of the time, with its
    overemphasis on the classics, which, as he wrote, \Pstand in the way of
    the broader, higher and more practical instruction and discipline of the
    natural and social sciences.\Q This education was likewise to be
    different from narrow trade-school education. In Rogers's words:

    <\quotation>
      The world-enforced distinction between the practical and the scientific
      worker is utterly futile, and the whole experience of modern times has
      demonstrated its utter worthlessness.
    </quotation>

    Rogers served as president of <abbr|MIT> until 1870, when he resigned due
    to ill health. In 1878 the second president of <abbr|MIT>, John Runkle,
    resigned under the pressure of a financial crisis brought on by the Panic
    of 1873 and strain of fighting off attempts by Harvard to take over
    <abbr|MIT>. Rogers returned to hold the office of president until 1881.

    Rogers collapsed and died while addressing <abbr|MIT>'s graduating class
    at the commencement exercises of 1882. Runkle quoted Rogers's last words
    in a memorial address delivered that same year:

    <\quotation>
      \PAs I stand here today and see what the Institute is, \<ldots\> I call
      to mind the beginnings of science. I remember one hundred and fifty
      years ago Stephen Hales published a pamphlet on the subject of
      illuminating gas, in which he stated that his researches had
      demonstrated that 128 grains of bituminous coal \U \Q \PBituminous
      coal,\Q these were his last words on earth. Here he bent forward, as if
      consulting some notes on the table before him, then slowly regaining an
      erect position, threw up his hands, and was translated from the scene
      of his earthly labors and triumphs to \Pthe tomorrow of death,\Q where
      the mysteries of life are solved, and the disembodied spirit finds
      unending satisfaction in contemplating the new and still unfathomable
      mysteries of the infinite future.
    </quotation>

    In the words of Francis A. Walker (<abbr|MIT>'s third president):

    <\quotation>
      All his life he had borne himself most faithfully and heroically, and
      he died as so good a knight would surely have wished, in harness, at
      his post, and in the very part and act of public duty.
    </quotation>
  </footnote> The four images in figure 2.11 are drawn with respect to the
  same four frames as the <code*|wave> images in figure 2.10.

  <\big-figure>
    <image|<tuple|<#89504E470D0A1A0A0000000D49484452000000B6000000B6080600000074F077040000000473424954080808087C086488000000097048597300000B1300000B1301009A9C18000004F349444154789CEDDDD96E1A411484E126CAFBBF32B9B0E2C42CC32CBD54D5F9BF8B48911C385B376D2033ADB5766FF844AD466AF148A24888F36B7500065417BE6A5C322810E2B063231283BD8D57336001161E0E63688C711401208957160080395ECA9EB9D5C42DDE29280AE2F0AEC833D785EE1AF7100C3662B1D211871DFB27F745EE1E3F000085F1320E086381E21BC310E657A3A908C560E7A1A78D2220101FD02012839DFB8A959AD76EF746111088A14634063C07BD4424061BAD3506A1049A0C400E1B537BFF5D918AC5A99873341AFA853A84A1A188F3E92375861EB618DE7FDC6BE11E7F377BBE0445B1108BE106CCB188031CF93E360DD7467F1089C1BE80E201C658C0E6B8AE48067AF8C299A25048C863481187CB2FF863637A81C1462C56FC6BD4A538060040576C2A6FF43A63A71638352F14C76003D0D273576287830C86719B6A7D54E39230E2031A0A0E090C22E2F091FA3E2C7E33BF073EF6BDB5761BF8F87B6348343BAFD57D3C25ED1E3449B9A8A0A60F661584C28F675BE351818F7C5CDB629BB2ADB772E00CB2067AF09F2BC5A090E842619014628039955FF018662FF2FD5A790F1ACECDDEA47BF72E38B77749B0866C3F6503BB8857837924EBBC159464C0C01EE9C39B9E9F0ABB3ABB05EC166F12BBDABB043CFB17613CA3D69DF13EB90EAB5A5B058BE598970EF6169162E3250603472C9D178615232D9BAF6A835D2D5F054B6ACE3D6830C3F499711CD2AB313BE69C606ADD6932E2385E30A7D7426441AF41DD5FE85D148A8CB754FE6B19BCD0CFC128F03AF2B5970F708373EC09CAD6BF6CE2B8467970946383B8CAF7A0718B3759F75E546E6EE5DC1575EB87EA3D6818B89A6EAD63EFD586482D1E98521A24A55860AEEAA5CCD4E3DBE21C7B39B39BE53C1C552EDF269BA36C60212AD4573647D9C0CC55AA6BA55C2FA1507E247BA616945A3C18605593570E1783EDE950DFF88F02BE2A5EDB7C775E2B0A905AF4D9AA5E8873575ED5DE3F5EFDFC2B24E6FC31A7C4A4B7A4E55BF9829C9B3925260CA0A0A4CD2C29173CA8DEDCEAF92318C31DEA4A63538622258FC39213E70AB45F52F238A464D20744D5272A99E2E8E597FBF71FC003FBB9B04F60A72A79A2795EF81DF888C1CE53F5AA034FEC02C6A691FD6456008C576DA799916FB59A4AA20963505700B966EE70E577D3F402A4E78717781F7BBE0ABBF6F2CD84C19EE76FB36F4BA398A3EB9D09CE5A1E401115EBBC34E78A055FADC27164F9F3AF4E7C2495DC54E258697A0D928BAE9C9B726CC0690C36AC290CB0420C28A4FA259C55E3C207346E91E40F6818AA9FD4EBD13D3EF584CF4ACD2B59B79E25EFD8AB295EB75A7DB177FBBA41F26057F84E0636A8AF62D47569361307DB2D278E23032426BA3AA7D5CF9FE8704D69427FD4740CEA6A88E3C83ECEB15FB23AF1D5CF5F45B93A3B27EC1CBB94E4F7B151039BC1044E45768AF594F804CDD08FF3EE6FFF626E652E8E75748C7917CED88815BB6A51173B761FBD37073EACB988C106C445EE3C38871D5B17C7112CC5500862C706301DC7910BE2129A88DA094B684E420EEF24E7360C676C4462B0CF9BB593CEBC3E4AD4AB435432A1E8D10914EDB8E49A45E4967014896804F088C1063AA870B75BFBCD22E12802C4B1DF5930063BB6178E23073827303B76E75A95E2BE6373D702BCC52EE485E3C84EAEC1730CC15BEE479199948E3D2CB20F9C075B69D020E6D6B657FFABE1E9F5F3231FBB472C477F5E29F69EB1BCFA37F275F903ACA07D07A1D881230000000049454E44AE426082>|png>|0.3par|||><image|<tuple|<#89504E470D0A1A0A0000000D49484452000000B6000000B6080600000074F077040000000473424954080808087C086488000000097048597300000B1300000B1301009A9C18000003A949444154789CEDDDCB721B2110055025FFFFCFCA26954A6C471E493CBA2FE76C9C85CB03C385203130B71BE4B9EF2E008C24D0009D18B5694D808922D0009D19C569435889F26CA0750000E005A610441168E208353CA083008C327344355A030090CA5C9728020D83E84C00DFA9305256280321848958C20D5089519928DF057A77E0775F9F50820583E9545C2228447935D03A0291041B60969123ACD19AED668450B0D94E08899314EAA4BAF0A4158D2F602CB13268424D1CA1662B01A4A51DC1D55998E64AB87C670D50DDAC51D568CD3055C2B4B31C55EE0103684CF8CD148438424D29958353B96CD0924ED55087DD2B82C536A9E14BAD579CD4A5ED0A6560838E0DBFEB19141AE8DAF00ECB612B8FAAC29BAE065AF083A48C9C5FFD4D413DD4AE869F7DDD77FEBE397A73890D31AA4E89F786C94687E6FEE1E7F17EEE2EC0468921F831F8EF25DE2380EB8C825040F557E7C1CB849787D20292569FB634C4EBDC3B601D23CEFBDC433E110A28AC45073D79491D78538B512E49FA882D5063B99FDC6E374100B82675CB172C931CE6E4BAF18086278A40B3CC8AB09D14E893EA0AACE414248E3122D83A07E5BC1BCA9433FD08D3E11D3155AEB7FBBA3C61E439763B83266C4C53E5ABC49941D7818A987DB2E8FDC2EF8CF4EC350491FFBA12EA47BF5781E94A105FE57D2DB14E3436E3CC6C210FF64CE3260741D0C35CFD007852A3AFFE50CC041D1ACE62CC60E9BBD447890D0035AC7A37E2EC6BC21F1E488246749E09BACCB167BD1771E535612A81A59495814C0E7F72DD5A5AB51B26B9E193EBD6CAA815B2AA0D5AB55C2CF46A082A87C7F4EA40AB9F87D6F0007CCDFF10137559A0992971EEFEB72EE5A40881292C6DC4B6CBFB5FE9F58B317207CCCE2988C01DE49D0793568FD4D58359BD7C7C50E5A8E0AAC1A95AAE63BDFA1C47C7953BE1E3935DBBAB3B9FDACA01923EF85529079BBD12842A73FA0AD7A6A02A81A8520E26AADEC83B8E7A80CBBA86A96BB95920FD01271842E0D96ED4B720A3E8146CB163EB99B0B39DD547B6F2AA38E2549B57AFBC061B9CDAB0A7D69B2604B499B43D8FCF3017A73C9B7889333BD4DE51C3723BBFD110E843556CF8A41D34841230964B39F257E7218E50B39425708E27A0003BCC5A8831AAF350A56D55560B29CF73206C234CB0984E476B3BCFCE063897D196E3DD6F3A02035508538532C0B70415A083916FDD85126C980518C9C94970D1FDC34F68CFC20ADB0920C0498CFA44116880D98CB4F09BCE40698E3C00000A32E500A8CC280D50C9FD3FFF86F6049A28024D9C5F571049D6C25A6F5D0000000049454E44AE426082>|png>|0.3par|||>

    <image|<tuple|<#89504E470D0A1A0A0000000D494844520000005B000000B60806000000B6ECF1C50000000473424954080808087C086488000000097048597300000B1300000B1301009A9C18000003B749444154789CED9DC972E4300C4395D4FCFF2F7B2E9349E276DB96CC0520F12EA9EA4AB72910A2B57819038F0DEC77ACD83EB32338E0233B00C10FA4B3CB8226365A9D35054D6C1148696757072A792A2381486C214421BC4E66282749CD202391D8A2242A2391A0888D72126B81B7D810C94471B6280484B385105E4475F1EC52A2717624125B9444652492CF917FE2680382B3BB8C46206823F697B3D30311B590A1BAA2CC3B83301AE9028C99610271E4650659B5D110ED521909642FB6EED41225802865AD51061A503EC91D462330497C27364C80957827B68680829AD30D5F9512418B2E6588E44A6CF6520215FF95D81A9588DB50397B8CD880A1C4A94E69B1351A0944620352BA7B07A1498DA8899C1DC98CD86CD751C39D67FE4CFCAFC5D43D5A8095E3B92E51CC0404E716075C9F55E52D76870441C02AB46BDCD6EE6615198E3321257210D58486292596DFEDC2F20C72DBFDD5F619209D7BC04BDB3B8BF10EB3E583C885282532907D9DEF464ABB19C5A68A992AD84824CC3114BA1C054911B835DA1603A0A5F36E205D02815E3FAAE884D5369D7EAFC5D3DA03399DAE3F5DC9EB26E62599A311E665591723C99D76B86979F787999349173B5DC0DECC0AD249C0F4B6A6072084391D4B8EF960A0FA5B4823D09D0746DC32CD5DB1EFCCF63AB9740939DB06F3A50739F79C2B7DCCF4434C045A4CD3F1A035E08C8C584D8FC9B6538E1CDB122EDB44C4B8B91B7A03148D2E43BF7689DDC370B7AFE5B11E1DFF69F0DDDCB6DC5E16A1F67166C6CDA2D932480D448AA53C6D9758D99E9D22C42BD9EECA3E7E28308DED5AB37F12910C98840B67D0328D168F29A51BF78636E36C88E47611FB2E1049E984AEFE2A409B9A3D8B5CF8907401E5EC4032C44E77D8044CB11E42DF805558CB48DB84CDD275D33565E8C77A1BF5E344B196910C584D6202DB25C19A414ED2DADD4C843BDBA2EB230CFB1062B8A48AD8632CC4C15EB333859FAEDF8C62233DBB0AA59785A0971439422D14631941E4D68B9224B60D6D263B2C755B2F9888A4421941EBC210A6EA7E2B9F4E904EA41BC3D3D9E98DEB04C5884465C417CA1E4719F43FE862A70BF888A8325242AC076C23500354B1439F41A213642095C446ED3DFF6110DB53C4D0759528B1D1168B441261E587A18C9441621723FB797A30C8D9C580765B20F033C852894217BB141162474F68607B03BAB3A31215922074B14510B0E56011E8F64007B782CA88780CE4752472B64881FE1CA117067D03BF36528ACA62C3F50E54B1B336885D13E42DB676D5C181EBFE466C1FE377E37E3A71E6738BDFF0FE3C3D96BF125A05DAF77D16AC0000000049454E44AE426082>|png>|0.15par|||><image|<tuple||png>|0.4par|||>
  <|big-figure>
    <label|fig2.10>Images produced by the <code*|wave> painter, with respect
    to four different frames. The frames, shown with dotted lines, are not
    part of the images.
  </big-figure>

  <\big-figure>
    <image|<tuple||png>|0.25par|||><space|2em><image|<tuple||png>|0.25par|||>

    <image|<tuple||png>|0.15par|||><space|3em><image|<tuple||png>|0.3par|||>
  <|big-figure>
    <label|fig2.11>Images of William Barton Rogers, founder and first
    president of <abbr|MIT>, painted with respect to the same four frames as
    in <hlink|Figure 2.10|#fig2.10> (original image from Wikimedia Commons).
  </big-figure>

  To combine images, we use various operations that construct new painters
  from given painters. For example, the <code*|beside> operation takes two
  painters and produces a new, compound painter that draws the first
  painter's image in the left half of the frame and the second painter's
  image in the right half of the frame. Similarly, <code*|below> takes two
  painters and produces a compound painter that draws the first painter's
  image below the second painter's image. Some operations transform a single
  painter to produce a new painter. For example, <code*|flip-vert> takes a
  painter and produces a painter that draws its image upside-down, and
  <code*|flip-horiz> produces a painter that draws the original painter's
  image left-to-right reversed.

  <hlink|Figure 2.12|#fig2.12> shows the drawing of a painter called
  <code*|wave4> that is built up in two stages starting from <code*|wave>:

  <\scm-code>
    (define wave2 (beside wave (flip-vert wave)))

    (define wave4 (below wave2 wave2))
  </scm-code>

  <\big-figure|<image|<tuple||png>|0.3par|||><image|<tuple||png>|0.3par|||>>
    <label|fig2.12>Creating a complex figure, starting from the <code*|wave>
    painter of <hlink|Figure 2.10|#fig2.10>.
  </big-figure>

  In building up a complex image in this manner we are exploiting the fact
  that painters are closed under the language's means of combination. The
  <code*|beside> or <code*|below> of two painters is itself a painter;
  therefore, we can use it as an element in making more complex painters. As
  with building up list structure using <code*|cons>, the closure of our data
  under the means of combination is crucial to the ability to create complex
  structures while using only a few operations.

  Once we can combine painters, we would like to be able to abstract typical
  patterns of combining painters. We will implement the painter operations as
  Scheme procedures. This means that we don't need a special abstraction
  mechanism in the picture language: Since the means of combination are
  ordinary Scheme procedures, we automatically have the capability to do
  anything with painter operations that we can do with procedures. For
  example, we can abstract the pattern in <code*|wave4> as

  <\scm-code>
    (define (flipped-pairs painter)

    \ \ (let ((painter2 (beside painter (flip-vert painter))))

    \ \ \ \ (below painter2 painter2)))
  </scm-code>

  and define <code*|wave4> as an instance of this pattern:

  <\scm-code>
    (define wave4 (flipped-pairs wave))
  </scm-code>

  We can also define recursive operations. Here's one that makes painters
  split and branch towards the right as shown in <hlink|Figure
  2.13|#Figure-2_002e13> and <hlink|Figure 2.14|#Figure-2_002e14>:

  <\scm-code>
    (define (right-split painter n)

    \ \ (if (= n 0)

    \ \ \ \ \ \ painter

    \ \ \ \ \ \ (let ((smaller (right-split painter (- n 1))))

    \ \ \ \ \ \ \ \ (beside painter (below smaller smaller)))))
  </scm-code>

  <\big-figure|<image|<tuple||png>|0.3par|||><space|2em><image|<tuple||png>|0.3par|||>>
    <label|fig2.13>Recursive plans for <code*|right-split> and
    <code*|corner-split>.
  </big-figure>

  We can produce balanced patterns by branching upwards as well as towards
  the right (see <hlink|Exercise 2.44|#Exercise-2_002e44>, <hlink|Figure
  2.13|#fig2.13> and <hlink|Figure 2.14|#fig2.14>):

  <\scm-code>
    (define (corner-split painter n)

    \ \ (if (= n 0)

    \ \ \ \ \ \ painter

    \ \ \ \ \ \ (let ((up (up-split painter (- n 1)))

    \ \ \ \ \ \ \ \ \ \ \ \ (right (right-split painter (- n 1))))

    \ \ \ \ \ \ \ \ (let ((top-left (beside up up))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (bottom-right (below right right))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (corner (corner-split painter (- n 1))))

    \ \ \ \ \ \ \ \ \ \ (beside (below painter top-left)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (below bottom-right corner))))))
  </scm-code>

  <\big-figure>
    <image|<tuple||png>|0.3par|||>
    <image|<tuple||png>|0.3par|||>

    <image|<tuple||png>|0.3par|||>
    <image|<tuple||png>|0.3par|||>
  <|big-figure>
    The recursive operations <code*|right-split> and <code*|corner-split>
    applied to the painters <code*|wave> and <code*|rogers>. Combining four
    <code*|corner-split> figures produces symmetric <code*|square-limit>
    designs as shown in <hlink|Figure 2.9|#fig2.9>.
  </big-figure>

  By placing four copies of a <code*|corner-split> appropriately, we obtain a
  pattern called <code*|square-limit>, whose application to <code*|wave> and
  <code*|rogers> is shown in <hlink|Figure 2.9|#fig2.9>:

  <\scm-code>
    (define (square-limit painter n)

    \ \ (let ((quarter (corner-split painter n)))

    \ \ \ \ (let ((half (beside (flip-horiz quarter) quarter)))

    \ \ \ \ \ \ (below (flip-vert half) half))))
  </scm-code>

  <\exercise>
    Define the procedure <code*|up-split> used by <code*|corner-split>. It is
    similar to <code*|right-split>, except that it switches the roles of
    <code*|below> and <code*|beside>.
  </exercise>

  <paragraph*|Higher-order operations>

  In addition to abstracting patterns of combining painters, we can work at a
  higher level, abstracting patterns of combining painter operations. That
  is, we can view the painter operations as elements to manipulate and can
  write means of combination for these elements\Vprocedures that take painter
  operations as arguments and create new painter operations.

  For example, <code*|flipped-pairs> and <code*|square-limit> each arrange
  four copies of a painter's image in a square pattern; they differ only in
  how they orient the copies. One way to abstract this pattern of painter
  combination is with the following procedure, which takes four one-argument
  painter operations and produces a painter operation that transforms a given
  painter with those four operations and arranges the results in a square.
  <code*|Tl>, <code*|tr>, <code*|bl>, and <code*|br> are the transformations
  to apply to the top left copy, the top right copy, the bottom left copy,
  and the bottom right copy, respectively.

  <\scm-code>
    (define (square-of-four tl tr bl br)

    \ \ (lambda (painter)

    \ \ \ \ (let ((top (beside (tl painter) (tr painter)))

    \ \ \ \ \ \ \ \ \ \ (bottom (beside (bl painter) (br painter))))

    \ \ \ \ \ \ (below bottom top))))
  </scm-code>

  Then <code*|flipped-pairs> can be defined in terms of
  <code*|square-of-four> as follows:<\footnote>
    Equivalently, we could write

    <\code>
      (define

      \ flipped-pairs

      \ \ 

      (

      square-of-four\ 

      \ \ \ identity flip-vert identity flip-vert

      ))
    </code>
  </footnote>

  <\scm-code>
    (define (flipped-pairs painter)

    \ \ (let ((combine4 (square-of-four identity flip-vert

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ identity
    flip-vert)))

    \ \ \ \ (combine4 painter)))
  </scm-code>

  and <code*|square-limit> can be expressed as<\footnote>
    \ <code*|Rotate180> rotates a painter by 180 degrees (see <hlink|Exercise
    2.50|#Exercise-2_002e50>). Instead of <code*|rotate180> we could say
    <code*|(compose flip-vert flip-horiz)>, using the <code*|compose>
    procedure from <hlink|Exercise 1.42|1_002e3.xhtml#Exercise-1_002e42>.
  </footnote>

  <\scm-code>
    (define (square-limit painter n)

    \ \ (let ((combine4 (square-of-four flip-horiz identity

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rotate180
    flip-vert)))

    \ \ \ \ (combine4 (corner-split painter n))))
  </scm-code>

  <\exercise>
    <code*|Right-split> and <code*|up-split> can be expressed as instances of
    a general splitting operation. Define a procedure <code*|split> with the
    property that evaluating

    <\scm-code>
      (define right-split (split beside below))

      (define up-split (split below beside))
    </scm-code>

    produces procedures <code*|right-split> and <code*|up-split> with the
    same behaviors as the ones already defined.
  </exercise>

  <paragraph*|Frames>

  Before we can show how to implement painters and their means of
  combination, we must first consider frames. A frame can be described by
  three vectors\Van origin vector and two edge vectors. The origin vector
  specifies the offset of the frame's origin from some absolute origin in the
  plane, and the edge vectors specify the offsets of the frame's corners from
  its origin. If the edges are perpendicular, the frame will be rectangular.
  Otherwise the frame will be a more general parallelogram.

  <hlink|Figure 2.15|#Figure-2_002e15> shows a frame and its associated
  vectors. In accordance with data abstraction, we need not be specific yet
  about how frames are represented, other than to say that there is a
  constructor <code*|make-frame>, which takes three vectors and produces a
  frame, and three corresponding selectors <code*|origin-frame>,
  <code*|edge1-frame>, and <code*|edge2-frame> (see <hlink|Exercise
  2.47|#Exercise-2_002e47>).

  <\big-figure|<image|<tuple||png>|0.3par|||>>
    \ A frame is described by three vectors \V an origin and two edges.
  </big-figure>

  We will use coordinates in the unit square
  <math|<around*|(|0\<leq\>x,y\<leq\>1|)>> to specify images. With each
  frame, we associate a <em|frame coordinate map><index|frame coordinate
  map>, which will be used to shift and scale images to fit the frame. The
  map transforms the unit square into the frame by mapping the vector
  <math|v=<around*|(|x,y|)>> to the vector sum
  <math|<with|mode|text|Origin(Frame)>+x\<cdot\><with|mode|text|Edge><rsub|1><with|mode|text|(Frame)>+y\<cdot\><with|mode|text|Edge><rsub|2><with|mode|text|(Frame)>>.
  For example, (0, 0) is mapped to the origin of the frame, (1, 1) to the
  vertex diagonally opposite the origin, and (0.5, 0.5) to the center of the
  frame. We can create a frame's coordinate map with the following
  procedure:<\footnote>
    <code*|Frame-coord-map> uses the vector operations described in
    <hlink|Exercise 2.46|#Exercise-2_002e46> below, which we assume have been
    implemented using some representation for vectors. Because of data
    abstraction, it doesn't matter what this vector representation is, so
    long as the vector operations behave correctly.
  </footnote>

  <\scm-code>
    (define (frame-coord-map frame)

    \ \ (lambda (v)

    \ \ \ \ (add-vect

    \ \ \ \ \ (origin-frame frame)

    \ \ \ \ \ (add-vect (scale-vect (xcor-vect v)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (edge1-frame
    frame))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (scale-vect (ycor-vect v)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (edge2-frame
    frame))))))
  </scm-code>

  Observe that applying <code*|frame-coord-map> to a frame returns a
  procedure that, given a vector, returns a vector. If the argument vector is
  in the unit square, the result vector will be in the frame. For example,

  <\scm-code>
    ((frame-coord-map a-frame) (make-vect 0 0))
  </scm-code>

  returns the same vector as

  <\scm-code>
    (origin-frame a-frame)
  </scm-code>

  <\exercise>
    A two-dimensional vector <math|v> running from the origin to a point can
    be represented as a pair consisting of an <math|x>-coordinate and a
    <math|y>-coordinate. Implement a data abstraction for vectors by giving a
    constructor <code*|make-vect> and corresponding selectors
    <code*|xcor-vect> and <code*|ycor-vect>. In terms of your selectors and
    constructor, implement procedures <code*|add-vect>, <code*|sub-vect>, and
    <code*|scale-vect> that perform the operations vector addition, vector
    subtraction, and multiplying a vector by a scalar:\ 

    <\eqnarray*>
      <tformat|<table|<row|<cell|<around*|(|x<rsub|1>,y<rsub|1>|)>+<around*|(|x<rsub|2>,y<rsub|2>|)>>|<cell|=>|<cell|<around*|(|x<rsub|1>+x<rsub|2>,y<rsub|1>+y<rsub|2>|)>,>>|<row|<cell|<around*|(|x<rsub|1>,y<rsub|1>|)>-<around*|(|x<rsub|2>,y<rsub|2>|)>>|<cell|=>|<cell|<around*|(|x<rsub|1>-x<rsub|2>,y<rsub|1>-y<rsub|2>|)>,>>|<row|<cell|s\<cdot\><around*|(|x,y|)>>|<cell|=>|<cell|<around*|(|sx,sy|)>.>>>>
    </eqnarray*>
  </exercise>

  <\exercise>
    Here are two possible constructors for frames:

    <\scm-code>
      (define (make-frame origin edge1 edge2)

      \ \ (list origin edge1 edge2))

      \;

      (define (make-frame origin edge1 edge2)

      \ \ (cons origin (cons edge1 edge2)))
    </scm-code>

    For each constructor supply the appropriate selectors to produce an
    implementation for frames.
  </exercise>

  <paragraph*|Painters>

  A painter is represented as a procedure that, given a frame as argument,
  draws a particular image shifted and scaled to fit the frame. That is to
  say, if <code*|p> is a painter and <code*|f> is a frame, then we produce
  <code*|p>'s image in <code*|f> by calling <code*|p> with <code*|f> as
  argument.

  The details of how primitive painters are implemented depend on the
  particular characteristics of the graphics system and the type of image to
  be drawn. For instance, suppose we have a procedure <code*|draw-line> that
  draws a line on the screen between two specified points. Then we can create
  painters for line drawings, such as the <code*|wave> painter in
  <hlink|Figure 2.10|#Figure-2_002e10>, from lists of line segments as
  follows:<\footnote>
    <code*|Segments-\<gtr\>painter> uses the representation for line segments
    described in <hlink|Exercise 2.48|#Exercise-2_002e48> below. It also uses
    the <code*|for-each> procedure described in <hlink|Exercise
    2.23|#Exercise-2_002e23>.
  </footnote>

  <\scm-code>
    (define (segments-\<gtr\>painter segment-list)

    \ \ (lambda (frame)

    \ \ \ \ (for-each

    \ \ \ \ \ (lambda (segment)

    \ \ \ \ \ \ \ (draw-line

    \ \ \ \ \ \ \ \ ((frame-coord-map frame) (start-segment segment))

    \ \ \ \ \ \ \ \ ((frame-coord-map frame) (end-segment segment))))

    \ \ \ \ \ segment-list)))
  </scm-code>

  The segments are given using coordinates with respect to the unit square.
  For each segment in the list, the painter transforms the segment endpoints
  with the frame coordinate map and draws a line between the transformed
  points.

  Representing painters as procedures erects a powerful abstraction barrier
  in the picture language. We can create and intermix all sorts of primitive
  painters, based on a variety of graphics capabilities. The details of their
  implementation do not matter. Any procedure can serve as a painter,
  provided that it takes a frame as argument and draws something scaled to
  fit the frame.<\footnote>
    For example, the <code*|rogers> painter of <hlink|Figure
    2.11|#Figure-2_002e11> was constructed from a gray-level image. For each
    point in a given frame, the <code*|rogers> painter determines the point
    in the image that is mapped to it under the frame coordinate map, and
    shades it accordingly. By allowing different types of painters, we are
    capitalizing on the abstract data idea discussed in
    <hlink|2.1.3|2_002e1.xhtml#g_t2_002e1_002e3>, where we argued that a
    rational-number representation could be anything at all that satisfies an
    appropriate condition. Here we're using the fact that a painter can be
    implemented in any way at all, so long as it draws something in the
    designated frame. <hlink|2.1.3|#2.1.3> also showed how pairs could be
    implemented as procedures. Painters are our second example of a
    procedural representation for data.
  </footnote>

  <\exercise>
    A directed line segment in the plane can be represented as a pair of
    vectors\Vthe vector running from the origin to the start-point of the
    segment, and the vector running from the origin to the end-point of the
    segment. Use your vector representation from <hlink|Exercise
    2.46|#Exercise-2_002e46> to define a representation for segments with a
    constructor <code*|make-segment> and selectors <code*|start-segment> and
    <code*|end-segment>.
  </exercise>

  <\exercise>
    Use <code*|segments-\<gtr\>painter> to define the following primitive
    painters:

    <\enumerate>
      <item>The painter that draws the outline of the designated frame.

      <item>The painter that draws an \PX\Q by connecting opposite corners of
      the frame.

      <item>The painter that draws a diamond shape by connecting the
      midpoints of the sides of the frame.

      <item>The <code*|wave> painter.
    </enumerate>
  </exercise>

  <paragraph*|Transforming and combining painters>

  An operation on painters (such as <code*|flip-vert> or <code*|beside>)
  works by creating a painter that invokes the original painters with respect
  to frames derived from the argument frame. Thus, for example,
  <code*|flip-vert> doesn't have to know how a painter works in order to flip
  it\Vit just has to know how to turn a frame upside down: The flipped
  painter just uses the original painter, but in the inverted frame.

  Painter operations are based on the procedure <code*|transform-painter>,
  which takes as arguments a painter and information on how to transform a
  frame and produces a new painter. The transformed painter, when called on a
  frame, transforms the frame and calls the original painter on the
  transformed frame. The arguments to <code*|transform-painter> are points
  (represented as vectors) that specify the corners of the new frame: When
  mapped into the frame, the first point specifies the new frame's origin and
  the other two specify the ends of its edge vectors. Thus, arguments within
  the unit square specify a frame contained within the original frame.

  <\scm-code>
    (define (transform-painter painter origin corner1 corner2)

    \ \ (lambda (frame)

    \ \ \ \ (let ((m (frame-coord-map frame)))

    \ \ \ \ \ \ (let ((new-origin (m origin)))

    \ \ \ \ \ \ \ \ (painter

    \ \ \ \ \ \ \ \ \ (make-frame new-origin

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (sub-vect (m corner1)
    new-origin)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (sub-vect (m corner2)
    new-origin)))))))
  </scm-code>

  Here's how to flip painter images vertically:

  <\scm-code>
    (define (flip-vert painter)

    \ \ (transform-painter painter

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.0 1.0) \ \ ; new
    origin

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 1.0 1.0) \ \ ; new
    end of edge1

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.0 0.0))) ; new end
    of edge2
  </scm-code>

  Using <code*|transform-painter>, we can easily define new transformations.
  For example, we can define a painter that shrinks its image to the
  upper-right quarter of the frame it is given:

  <\scm-code>
    (define (shrink-to-upper-right painter)

    \ \ (transform-painter painter

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.5 0.5)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 1.0 0.5)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.5 1.0)))
  </scm-code>

  Other transformations rotate images counterclockwise by 90
  degrees<\footnote>
    <code*|Rotate90> is a pure rotation only for square frames, because it
    also stretches and shrinks the image to fit into the rotated frame.
  </footnote>

  <\scm-code>
    (define (rotate90 painter)

    \ \ (transform-painter painter

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 1.0 0.0)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 1.0 1.0)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.0 0.0)))
  </scm-code>

  or squash images towards the center of the frame:<\footnote>
    The diamond-shaped images in <hlink|Figure 2.10|#Figure-2_002e10> and
    <hlink|Figure 2.11|#Figure-2_002e11> were created with
    <code*|squash-inwards> applied to <code*|wave> and <code*|rogers>.
  </footnote>

  <\scm-code>
    (define (squash-inwards painter)

    \ \ (transform-painter painter

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.0 0.0)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.65 0.35)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect 0.35 0.65)))
  </scm-code>

  Frame transformation is also the key to defining means of combining two or
  more painters. The <code*|beside> procedure, for example, takes two
  painters, transforms them to paint in the left and right halves of an
  argument frame respectively, and produces a new, compound painter. When the
  compound painter is given a frame, it calls the first transformed painter
  to paint in the left half of the frame and calls the second transformed
  painter to paint in the right half of the frame:

  <\scm-code>
    (define (beside painter1 painter2)

    \ \ (let ((split-point (make-vect 0.5 0.0)))

    \ \ \ \ (let ((paint-left

    \ \ \ \ \ \ \ \ \ \ \ (transform-painter painter1

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect
    0.0 0.0)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ split-point

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect
    0.0 1.0)))

    \ \ \ \ \ \ \ \ \ \ (paint-right

    \ \ \ \ \ \ \ \ \ \ \ (transform-painter painter2

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ split-point

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect
    1.0 0.0)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-vect
    0.5 1.0))))

    \ \ \ \ \ \ (lambda (frame)

    \ \ \ \ \ \ \ \ (paint-left frame)

    \ \ \ \ \ \ \ \ (paint-right frame)))))
  </scm-code>

  Observe how the painter data abstraction, and in particular the
  representation of painters as procedures, makes <code*|beside> easy to
  implement. The <code*|beside> procedure need not know anything about the
  details of the component painters other than that each painter will draw
  something in its designated frame.

  <\exercise>
    Define the transformation <code*|flip-horiz>, which flips painters
    horizontally, and transformations that rotate painters counterclockwise
    by 180 degrees and 270 degrees.
  </exercise>

  <\exercise>
    Define the <code*|below> operation for painters. <code*|Below> takes two
    painters as arguments. The resulting painter, given a frame, draws with
    the first painter in the bottom of the frame and with the second painter
    in the top. Define <code*|below> in two different ways\Vfirst by writing
    a procedure that is analogous to the <code*|beside> procedure given
    above, and again in terms of <code*|beside> and suitable rotation
    operations (from <hlink|Exercise 2.50|#Exercise-2_002e50>).
  </exercise>

  <paragraph*|Levels of language for robust design>

  The picture language exercises some of the critical ideas we've introduced
  about abstraction with procedures and data. The fundamental data
  abstractions, painters, are implemented using procedural representations,
  which enables the language to handle different basic drawing capabilities
  in a uniform way. The means of combination satisfy the closure property,
  which permits us to easily build up complex designs. Finally, all the tools
  for abstracting procedures are available to us for abstracting means of
  combination for painters.

  We have also obtained a glimpse of another crucial idea about languages and
  program design. This is the approach of <em|stratified
  design><index|stratified design>, the notion that a complex system should
  be structured as a sequence of levels that are described using a sequence
  of languages. Each level is constructed by combining parts that are
  regarded as primitive at that level, and the parts constructed at each
  level are used as primitives at the next level. The language used at each
  level of a stratified design has primitives, means of combination, and
  means of abstraction appropriate to that level of detail.

  Stratified design pervades the engineering of complex systems. For example,
  in computer engineering, resistors and transistors are combined (and
  described using a language of analog circuits) to produce parts such as
  and-gates and or-gates, which form the primitives of a language for
  digital-circuit design.<\footnote>
    Section <hlink|3.3.4|3_002e3.xhtml#g_t3_002e3_002e4> describes one such
    language.
  </footnote> These parts are combined to build processors, bus structures,
  and memory systems, which are in turn combined to form computers, using
  languages appropriate to computer architecture. Computers are combined to
  form distributed systems, using languages appropriate for describing
  network interconnections, and so on.

  As a tiny example of stratification, our picture language uses primitive
  elements (primitive painters) that are created using a language that
  specifies points and lines to provide the lists of line segments for
  <code*|segments-\<gtr\>painter>, or the shading details for a painter like
  <code*|rogers>. The bulk of our description of the picture language focused
  on combining these primitives, using geometric combiners such as
  <code*|beside> and <code*|below>. We also worked at a higher level,
  regarding <code*|beside> and <code*|below> as primitives to be manipulated
  in a language whose operations, such as <code*|square-of-four>, capture
  common patterns of combining geometric combiners.

  Stratified design helps make programs <em|robust><index|robust>, that is,
  it makes it likely that small changes in a specification will require
  correspondingly small changes in the program. For instance, suppose we
  wanted to change the image based on <code*|wave> shown in <hlink|Figure
  2.9|#fig2.9>. We could work at the lowest level to change the detailed
  appearance of the <code*|wave> element; we could work at the middle level
  to change the way <code*|corner-split> replicates the <code*|wave>; we
  could work at the highest level to change how <code*|square-limit> arranges
  the four copies of the corner. In general, each level of a stratified
  design provides a different vocabulary for expressing the characteristics
  of the system, and a different kind of ability to change it.

  <\exercise>
    Make changes to the square limit of <code*|wave> shown in <hlink|Figure
    2.9|#Figure-2_002e9> by working at each of the levels described above. In
    particular:

    <\enumerate>
      <item>Add some segments to the primitive <code*|wave> painter of
      <hlink|Exercise 2.49|#Exercise-2_002e49> (to add a smile, for example).

      <item>Change the pattern constructed by <code*|corner-split> (for
      example, by using only one copy of the <code*|up-split> and
      <code*|right-split> images instead of two).

      <item>Modify the version of <code*|square-limit> that uses
      <code*|square-of-four> so as to assemble the corners in a different
      pattern. (For example, you might make the big Mr. Rogers look outward
      from each corner of the square.)
    </enumerate>
  </exercise>

  <section|Symbolic Data>

  All the compound data objects we have used so far were constructed
  ultimately from numbers. In this section we extend the representational
  capability of our language by introducing the ability to work with
  arbitrary symbols as data.

  <subsection|Quotation>

  If we can form compound data using symbols, we can have lists such as

  <\scm-code>
    (a b c d)

    (23 45 17)

    ((Norah 12) (Molly 9) (Anna 7) (Lauren 6) (Charlotte 4))
  </scm-code>

  Lists containing symbols can look just like the expressions of our
  language:

  <\scm-code>
    (* (+ 23 45) (+ x 9))

    \;

    (define (fact n) (if (= n 1) 1 (* n (fact (- n 1)))))
  </scm-code>

  In order to manipulate symbols we need a new element in our language: the
  ability to <label|index-quote> <em|quote> a data object. Suppose we want to
  construct the list <code*|(a b)>. We can't accomplish this with
  <code*|(list a b)>, because this expression constructs a list of the
  <em|values><index|values> of <code*|a> and <code*|b> rather than the
  symbols themselves. This issue is well known in the context of natural
  languages, where words and sentences may be regarded either as semantic
  entities or as character strings (syntactic entities). The common practice
  in natural languages is to use quotation marks to indicate that a word or a
  sentence is to be treated literally as a string of characters. For
  instance, the first letter of \PJohn\Q is clearly \PJ.\Q If we tell
  somebody \Psay your name aloud,\Q we expect to hear that person's name.
  However, if we tell somebody \Psay `your name' aloud,\Q we expect to hear
  the words \Pyour name.\Q Note that we are forced to nest quotation marks to
  describe what somebody else might say.<\footnote>
    Allowing quotation in a language wreaks havoc with the ability to reason
    about the language in simple terms, because it destroys the notion that
    equals can be substituted for equals. For example, three is one plus two,
    but the word \Pthree\Q is not the phrase \Pone plus two.\Q Quotation is
    powerful because it gives us a way to build expressions that manipulate
    other expressions (as we will see when we write an interpreter in
    <hlink|Chapter 4|Chapter-4.xhtml#Chapter-4>). But allowing statements in
    a language that talk about other statements in that language makes it
    very difficult to maintain any coherent principle of what \Pequals can be
    substituted for equals\Q should mean. For example, if we know that the
    evening star is the morning star, then from the statement \Pthe evening
    star is Venus\Q we can deduce \Pthe morning star is Venus.\Q However,
    given that \PJohn knows that the evening star is Venus\Q we cannot infer
    that \PJohn knows that the morning star is Venus.\Q
  </footnote>

  We can follow this same practice to identify lists and symbols that are to
  be treated as data objects rather than as expressions to be evaluated.
  However, our format for quoting differs from that of natural languages in
  that we place a quotation mark (traditionally, the single quote
  symbol<nbsp><code*|'>) only at the beginning of the object to be quoted. We
  can get away with this in Scheme syntax because we rely on blanks and
  parentheses to delimit objects. Thus, the meaning of the single quote
  character is to quote the next object.<\footnote>
    The single quote is different from the double quote we have been using to
    enclose character strings to be printed. Whereas the single quote can be
    used to denote lists or symbols, the double quote is used only with
    character strings. In this book, the only use for character strings is as
    items to be printed.
  </footnote>

  Now we can distinguish between symbols and their values:

  <\session|scheme|default>
    <\input|Scheme] >
      (define a 1)
    </input>

    <\input|Scheme] >
      (define b 2)
    </input>

    <\unfolded-io|Scheme] >
      (list a b)
    <|unfolded-io>
      (1 2)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (list 'a 'b)
    <|unfolded-io>
      (a b)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (list 'a b)
    <|unfolded-io>
      (a 2)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Quotation also allows us to type in compound objects, using the
  conventional printed representation for lists:<\footnote>
    Strictly, our use of the quotation mark violates the general rule that
    all compound expressions in our language should be delimited by
    parentheses and look like lists. We can recover this consistency by
    introducing a special form <code*|quote>, which serves the same purpose
    as the quotation mark. Thus, we would type <code*|(quote a)> instead of
    <code*|'a>, and we would type <code*|(quote (a b c))> instead of
    <code*|'(a b c)>. This is precisely how the interpreter works. The
    quotation mark is just a single-character abbreviation for wrapping the
    next complete expression with <code*|quote> to form <code*|(quote
    \<langle\><var|expression>\<rangle\>)>. This is important because it
    maintains the principle that any expression seen by the interpreter can
    be manipulated as a data object. For instance, we could construct the
    expression <code*|(car '(a b c))>, which is the same as <code*|(car
    (quote (a b c)))>, by evaluating <code*|(list 'car (list 'quote '(a b
    c)))>.
  </footnote>

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (car '(a b c))
    <|unfolded-io>
      a
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (cdr '(a b c))
    <|unfolded-io>
      (b c)
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  In keeping with this, we can obtain the empty list by evaluating
  <code*|'()>, and thus dispense with the variable <code*|nil>.

  One additional primitive used in manipulating symbols is <code*|eq?>, which
  takes two symbols as arguments and tests whether they are the
  same.<\footnote>
    \ We can consider two symbols to be \Pthe same\Q if they consist of the
    same characters in the same order. Such a definition skirts a deep issue
    that we are not yet ready to address: the meaning of \Psameness\Q in a
    programming language. We will return to this in <hlink|Chapter
    3|Chapter-3.xhtml#Chapter-3> (<hlink|3.1.3|3_002e1.xhtml#g_t3_002e1_002e3>).
  </footnote> Using <code*|eq?>, we can implement a useful procedure called
  <code*|memq>. This takes two arguments, a symbol and a list. If the symbol
  is not contained in the list (i.e., is not <code*|eq?> to any item in the
  list), then <code*|memq> returns false. Otherwise, it returns the sublist
  of the list beginning with the first occurrence of the symbol:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (memq item x)

      \ \ (cond ((null? x) #f)

      \ \ \ \ \ \ \ \ ((eq? item (car x)) x)

      \ \ \ \ \ \ \ \ (else (memq item (cdr x)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  For example, the value of

  <\session|scheme|default>
    <\folded-io|Scheme] >
      (memq 'apple '(pear banana prune))
    <|folded-io>
      #f
    </folded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  is false, whereas the value of

  <\session|scheme|default>
    <\folded-io|Scheme] >
      (memq 'apple '(x (apple sauce) y apple pear))
    <|folded-io>
      (apple pear)
    </folded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  is <code*|(apple pear)>.

  <\exercise>
    What would the interpreter print in response to evaluating each of the
    following expressions?

    <\session|scheme|default>
      <\folded-io|Scheme] >
        (list 'a 'b 'c)
      <|folded-io>
        (a b c)
      </folded-io>

      <\folded-io|Scheme] >
        (list (list 'george))
      <|folded-io>
        ((george))
      </folded-io>

      <\folded-io|Scheme] >
        (cdr '((x1 x2) (y1 y2)))
      <|folded-io>
        ((y1 y2))
      </folded-io>

      <\folded-io|Scheme] >
        (cadr '((x1 x2) (y1 y2)))
      <|folded-io>
        (y1 y2)
      </folded-io>

      <\folded-io|Scheme] >
        (pair? (car '(a short list)))
      <|folded-io>
        #f
      </folded-io>

      <\folded-io|Scheme] >
        (memq 'red '((red shoes) (blue socks)))
      <|folded-io>
        #f
      </folded-io>

      <\folded-io|Scheme] >
        (memq 'red '(red shoes blue socks))
      <|folded-io>
        (red shoes blue socks)
      </folded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>
  </exercise>

  <\exercise>
    Two lists are said to be <code*|equal?> if they contain equal elements
    arranged in the same order. For example,

    <\session|scheme|default>
      <\folded-io|Scheme] >
        (equal? '(this is a list) '(this is a list))
      <|folded-io>
        #t
      </folded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>

    is true, but

    <\session|scheme|default>
      <\folded-io|Scheme] >
        (equal? '(this is a list) '(this (is a) list))
      <|folded-io>
        #f
      </folded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>

    is false. To be more precise, we can define <code*|equal?> recursively in
    terms of the basic <code*|eq?> equality of symbols by saying that
    <code*|a> and <code*|b> are <code*|equal?> if they are both symbols and
    the symbols are <code*|eq?>, or if they are both lists such that
    <code*|(car a)> is <code*|equal?> to <code*|(car b)> and <code*|(cdr a)>
    is <code*|equal?> to <code*|(cdr b)>. Using this idea, implement
    <code*|equal?> as a procedure.<\footnote>
      In practice, programmers use <code*|equal?> to compare lists that
      contain numbers as well as symbols. Numbers are not considered to be
      symbols. The question of whether two numerically equal numbers (as
      tested by <code*|=>) are also <code*|eq?> is highly
      implementation-dependent. A better definition of <code*|equal?> (such
      as the one that comes as a primitive in Scheme) would also stipulate
      that if <code*|a> and <code*|b> are both numbers, then <code*|a> and
      <code*|b> are <code*|equal?> if they are numerically equal.
    </footnote>
  </exercise>

  <\exercise>
    Eva Lu Ator types to the interpreter the expression

    <\session|scheme|default>
      <\unfolded-io|Scheme] >
        (car ''abracadabra)
      <|unfolded-io>
        quote
      </unfolded-io>

      <\input|Scheme] >
        \;
      </input>
    </session>

    To her surprise, the interpreter prints back <code*|quote>. Explain.
  </exercise>

  <subsection|Example: Symbolic Differentiation><label|2.3.2>

  As an illustration of symbol manipulation and a further illustration of
  data abstraction, consider the design of a procedure that performs symbolic
  differentiation of algebraic expressions. We would like the procedure to
  take as arguments an algebraic expression and a variable and to return the
  derivative of the expression with respect to the variable. For example, if
  the arguments to the procedure are <math|ax<rsup|2>+bx+c> and <math|x>, the
  procedure should return <math|2ax+b>. Symbolic differentiation is of
  special historical significance in Lisp. It was one of the motivating
  examples behind the development of a computer language for symbol
  manipulation. Furthermore, it marked the beginning of the line of research
  that led to the development of powerful systems for symbolic mathematical
  work, which are currently being used by a growing number of applied
  mathematicians and physicists.

  In developing the symbolic-differentiation program, we will follow the same
  strategy of data abstraction that we followed in developing the
  rational-number system of <hlink|2.1.1|#2.2.1>. That is, we will first
  define a differentiation algorithm that operates on abstract objects such
  as \Psums,\Q \Pproducts,\Q and \Pvariables\Q without worrying about how
  these are to be represented. Only afterward will we address the
  representation problem.

  <paragraph*|The differentiation program with abstract data>

  In order to keep things simple, we will consider a very simple
  symbolic-differentiation program that handles expressions that are built up
  using only the operations of addition and multiplication with two
  arguments. Differentiation of any such expression can be carried out by
  applying the following reduction rules:

  <\eqnarray*>
    <tformat|<table|<row|<cell|<frac|\<mathd\>c|\<mathd\>x>>|<cell|=>|<cell|0,for
    c <with|mode|text|a constant or a variable different from>
    x,>>|<row|<cell|<frac|\<mathd\>x|\<mathd\>x>>|<cell|=>|<cell|1,>>|<row|<cell|<frac|d<around*|(|u+v|)>|\<mathd\>x>>|<cell|=>|<cell|<frac|\<mathd\>u|\<mathd\>x>+<frac|\<mathd\>v|\<mathd\>x>,>>|<row|<cell|<frac|\<mathd\><around*|(|u*v|)>|\<mathd\>x>>|<cell|=>|<cell|u*<frac|\<mathd\>v|\<mathd\>x>+v*<frac|\<mathd\>u|\<mathd\>x>.>>>>
  </eqnarray*>

  Observe that the latter two rules are recursive in nature. That is, to
  obtain the derivative of a sum we first find the derivatives of the terms
  and add them. Each of the terms may in turn be an expression that needs to
  be decomposed. Decomposing into smaller and smaller pieces will eventually
  produce pieces that are either constants or variables, whose derivatives
  will be either 0 or 1.

  To embody these rules in a procedure we indulge in a little wishful
  thinking, as we did in designing the rational-number implementation. If we
  had a means for representing algebraic expressions, we should be able to
  tell whether an expression is a sum, a product, a constant, or a variable.
  We should be able to extract the parts of an expression. For a sum, for
  example we want to be able to extract the addend (first term) and the
  augend (second term). We should also be able to construct expressions from
  parts. Let us assume that we already have procedures to implement the
  following selectors, constructors, and predicates:

  <\scm-code>
    (variable? e) \ \ \ \ \ \ \ \ \ \ ; Is e a variable?

    (same-variable? v1 v2) \ ; Are v1 and v2 the same variable?

    (sum? e) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ; Is e a sum?

    (addend e) \ \ \ \ \ \ \ \ \ \ \ \ \ ; Addend of the sum e.

    (augend e) \ \ \ \ \ \ \ \ \ \ \ \ \ ; Augend of the sum e.

    (make-sum a1 a2) \ \ \ \ \ \ \ ; Construct the sum of a1 and a2.

    (product? e) \ \ \ \ \ \ \ \ \ \ \ ; Is e a product?

    (multiplier e) \ \ \ \ \ \ \ \ \ ; Multiplier of the product e.

    (multiplicand e) \ \ \ \ \ \ \ ; Multiplicand of the product e.

    (make-product m1 m2) \ \ \ ; Construct the product of m1 and m2.
  </scm-code>

  Using these, and the primitive predicate <code*|number?>, which identifies
  numbers, we can express the differentiation rules as the following
  procedure:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (deriv exp var)

      \ \ (cond ((number? exp) 0)

      \ \ \ \ \ \ \ \ ((variable? exp)

      \ \ \ \ \ \ \ \ \ (if (same-variable? exp var) 1 0))

      \ \ \ \ \ \ \ \ ((sum? exp)

      \ \ \ \ \ \ \ \ \ (make-sum (deriv (addend exp) var)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (deriv (augend exp) var)))

      \ \ \ \ \ \ \ \ ((product? exp)

      \ \ \ \ \ \ \ \ \ (make-sum

      \ \ \ \ \ \ \ \ \ \ \ (make-product (multiplier exp)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (deriv (multiplicand
      exp) var))

      \ \ \ \ \ \ \ \ \ \ \ (make-product (deriv (multiplier exp) var)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (multiplicand exp))))

      \ \ \ \ \ \ \ \ (else

      \ \ \ \ \ \ \ \ \ (error "unknown expression type -- DERIV" exp))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  This <code*|deriv> procedure incorporates the complete differentiation
  algorithm. Since it is expressed in terms of abstract data, it will work no
  matter how we choose to represent algebraic expressions, as long as we
  design a proper set of selectors and constructors. This is the issue we
  must address next.

  <paragraph*|Representing algebraic expressions>

  We can imagine many ways to use list structure to represent algebraic
  expressions. For example, we could use lists of symbols that mirror the
  usual algebraic notation, representing <math|ax+b> as the list <code*|(a *
  x + b)>. However, one especially straightforward choice is to use the same
  parenthesized prefix notation that Lisp uses for combinations; that is, to
  represent <math|ax+b> as <code*|(+ (* a x) b)>. Then our data
  representation for the differentiation problem is as follows:

  <\itemize>
    <item>The variables are symbols. They are identified by the primitive
    predicate <code*|symbol?>:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (variable? x) (symbol? x))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>Two variables are the same if the symbols representing them are
    <code*|eq?>:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (same-variable? v1 v2)

        \ \ (and (variable? v1) (variable? v2) (eq? v1 v2)))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>Sums and products are constructed as lists:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (make-sum a1 a2) (list '+ a1 a2))
      </input>

      <\input|Scheme] >
        (define (make-product m1 m2) (list '* m1 m2))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>A sum is a list whose first element is the symbol <code*|+>:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (sum? x)

        \ \ (and (pair? x) (eq? (car x) '+)))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>The addend is the second item of the sum list:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (addend s) (cadr s))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>The augend is the third item of the sum list:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (augend s) (caddr s))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>A product is a list whose first element is the symbol <code*|*>:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (product? x)

        \ \ (and (pair? x) (eq? (car x) '*)))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>The multiplier is the second item of the product list:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (multiplier p) (cadr p))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>

    <item>The multiplicand is the third item of the product list:

    <\session|scheme|default>
      <\input|Scheme] >
        (define (multiplicand p) (caddr p))
      </input>

      <\input|Scheme] >
        \;
      </input>
    </session>
  </itemize>

  Thus, we need only combine these with the algorithm as embodied by
  <code*|deriv> in order to have a working symbolic-differentiation program.
  Let us look at some examples of its behavior:

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (deriv '(+ x 3) 'x)
    <|unfolded-io>
      (+ 1 0)
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (deriv '(* x y) 'x)
    <|unfolded-io>
      (+ (* x 0) (* 1 y))
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (deriv '(* (* x y) (+ x 3)) 'x)
    <|unfolded-io>
      (+ (* (* x y) (+ 1 0)) (* (+ (* x 0) (* 1 y)) (+ x 3)))
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The program produces answers that are correct; however, they are
  unsimplified. It is true that <math|<frac|d<around*|(|xy|)>|dx>=x\<cdot\>0+1\<cdot\>y,>
  but we would like the program to know that <math|x\<cdot\>0=0>,
  <math|1\<cdot\>y=y>, and <math|0+y=y>. The answer for the second example
  should have been simply <code*|y>. As the third example shows, this becomes
  a serious issue when the expressions are complex.

  Our difficulty is much like the one we encountered with the rational-number
  implementation: we haven't reduced answers to simplest form. To accomplish
  the rational-number reduction, we needed to change only the constructors
  and the selectors of the implementation. We can adopt a similar strategy
  here. We won't change <code*|deriv> at all. Instead, we will change
  <code*|make-sum> so that if both summands are numbers, <code*|make-sum>
  will add them and return their sum. Also, if one of the summands is 0, then
  <code*|make-sum> will return the other summand:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-sum a1 a2)

      \ \ (cond ((=number? a1 0) a2)

      \ \ \ \ \ \ \ \ ((=number? a2 0) a1)

      \ \ \ \ \ \ \ \ ((and (number? a1) (number? a2)) (+ a1 a2))

      \ \ \ \ \ \ \ \ (else (list '+ a1 a2))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  This uses the procedure <code*|=number?>, which checks whether an
  expression is equal to a given number:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (=number? exp num)

      \ \ (and (number? exp) (= exp num)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Similarly, we will change <code*|make-product> to build in the rules that 0
  times anything is 0 and 1 times anything is the thing itself:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-product m1 m2)

      \ \ (cond ((or (=number? m1 0) (=number? m2 0)) 0)

      \ \ \ \ \ \ \ \ ((=number? m1 1) m2)

      \ \ \ \ \ \ \ \ ((=number? m2 1) m1)

      \ \ \ \ \ \ \ \ ((and (number? m1) (number? m2)) (* m1 m2))

      \ \ \ \ \ \ \ \ (else (list '* m1 m2))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Here is how this version works on our three examples:

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (deriv '(+ x 3) 'x)
    <|unfolded-io>
      1
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (deriv '(* x y) 'x)
    <|unfolded-io>
      y
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (deriv '(* (* x y) (+ x 3)) 'x)
    <|unfolded-io>
      (+ (* x y) (* y (+ x 3)))
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Although this is quite an improvement, the third example shows that there
  is still a long way to go before we get a program that puts expressions
  into a form that we might agree is \Psimplest.\Q The problem of algebraic
  simplification is complex because, among other reasons, a form that may be
  simplest for one purpose may not be for another.

  <\exercise>
    Show how to extend the basic differentiator to handle more kinds of
    expressions. For instance, implement the differentiation rule
    <math|<frac|d<around*|(|u<rsup|n>|)>|dx>=nu<rsup|n\<minus\>1><frac|du|dx>>
    by adding a new clause to the <code*|deriv> program and defining
    appropriate procedures <code*|exponentiation?>, <code*|base>,
    <code*|exponent>, and <code*|make-exponentiation>. (You may use the
    symbol <code*|**> to denote exponentiation.) Build in the rules that
    anything raised to the power 0 is 1 and anything raised to the power 1 is
    the thing itself.
  </exercise>

  <\exercise>
    Extend the differentiation program to handle sums and products of
    arbitrary numbers of (two or more) terms. Then the last example above
    could be expressed as

    <code|(deriv '(* x y (+ x 3)) 'x)>

    Try to do this by changing only the representation for sums and products,
    without changing the <code*|deriv> procedure at all. For example, the
    <code*|addend> of a sum would be the first term, and the <code*|augend>
    would be the sum of the rest of the terms.
  </exercise>

  <\exercise>
    Suppose we want to modify the differentiation program so that it works
    with ordinary mathematical notation, in which <code*|+> and <code*|*> are
    infix rather than prefix operators. Since the differentiation program is
    defined in terms of abstract data, we can modify it to work with
    different representations of expressions solely by changing the
    predicates, selectors, and constructors that define the representation of
    the algebraic expressions on which the differentiator is to operate.

    <\enumerate>
      <item>Show how to do this in order to differentiate algebraic
      expressions presented in infix form, such as <code*|(x + (3 * (x + (y +
      2))))>. To simplify the task, assume that <code*|+> and <code*|*>
      always take two arguments and that expressions are fully parenthesized.

      <item>The problem becomes substantially harder if we allow standard
      algebraic notation, such as <code*|(x + 3 * (x + y + 2))>, which drops
      unnecessary parentheses and assumes that multiplication is done before
      addition. Can you design appropriate predicates, selectors, and
      constructors for this notation such that our derivative program still
      works?
    </enumerate>
  </exercise>

  <subsection|Example: Representing Sets>

  In the previous examples we built representations for two kinds of compound
  data objects: rational numbers and algebraic expressions. In one of these
  examples we had the choice of simplifying (reducing) the expressions at
  either construction time or selection time, but other than that the choice
  of a representation for these structures in terms of lists was
  straightforward. When we turn to the representation of sets, the choice of
  a representation is not so obvious. Indeed, there are a number of possible
  representations, and they differ significantly from one another in several
  ways.

  Informally, a set is simply a collection of distinct objects. To give a
  more precise definition we can employ the method of data abstraction. That
  is, we define \Pset\Q by specifying the operations that are to be used on
  sets. These are <code*|union-set>, <code*|intersection-set>,
  <code*|element-of-set?>, and <code*|adjoin-set>. <code*|Element-of-set?> is
  a predicate that determines whether a given element is a member of a set.
  <code*|Adjoin-set> takes an object and a set as arguments and returns a set
  that contains the elements of the original set and also the adjoined
  element. <code*|Union-set> computes the union of two sets, which is the set
  containing each element that appears in either argument.
  <code*|Intersection-set> computes the intersection of two sets, which is
  the set containing only elements that appear in both arguments. From the
  viewpoint of data abstraction, we are free to design any representation
  that implements these operations in a way consistent with the
  interpretations given above.<\footnote>
    If we want to be more formal, we can specify \Pconsistent with the
    interpretations given above\Q to mean that the operations satisfy a
    collection of rules such as these:

    <\itemize>
      <item>For any set <code*|S> and any object <code*|x>,
      <code*|(element-of-set? x (adjoin-set x S))> is true (informally:
      \PAdjoining an object to a set produces a set that contains the
      object\Q).

      <item>For any sets <code*|S> and <code*|T> and any object <code*|x>,
      <code*|(element-of-set? x (union-set S T))> is equal to <code*|(or
      (element-of-set? x S) (element-of-set? x T))> (informally: \PThe
      elements of <code*|(union S T)> are the elements that are in <code*|S>
      or in <code*|T>\Q).

      <item>For any object <code*|x>, <code*|(element-of-set? x '())> is
      false (informally: \PNo object is an element of the empty set\Q).
    </itemize>
  </footnote>

  <paragraph*|Sets as unordered lists>

  One way to represent a set is as a list of its elements in which no element
  appears more than once. The empty set is represented by the empty list. In
  this representation, <code*|element-of-set?> is similar to the procedure
  <code*|memq> of <hlink|2.3.1|#2.3.1>. It uses <code*|equal?> instead of
  <code*|eq?> so that the set elements need not be symbols:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (element-of-set? x set)

      \ \ (cond ((null? set) false)

      \ \ \ \ \ \ \ \ ((equal? x (car set)) true)

      \ \ \ \ \ \ \ \ (else (element-of-set? x (cdr set)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Using this, we can write <code*|adjoin-set>. If the object to be adjoined
  is already in the set, we just return the set. Otherwise, we use
  <code*|cons> to add the object to the list that represents the set:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (adjoin-set x set)

      \ \ (if (element-of-set? x set)

      \ \ \ \ \ \ set

      \ \ \ \ \ \ (cons x set)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  For <code*|intersection-set> we can use a recursive strategy. If we know
  how to form the intersection of <code*|set2> and the <code*|cdr> of
  <code*|set1>, we only need to decide whether to include the <code*|car> of
  <code*|set1> in this. But this depends on whether <code*|(car set1)> is
  also in <code*|set2>. Here is the resulting procedure:

  <\session|scheme|default>
    <\input>
      Scheme]\ 
    <|input>
      (define (intersection-set set1 set2)

      \ \ (cond ((or (null? set1) (null? set2)) '())

      \ \ \ \ \ \ \ \ ((element-of-set? (car set1) set2) \ \ \ \ \ \ \ 

      \ \ \ \ \ \ \ \ \ (cons (car set1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (intersection-set (cdr set1) set2)))

      \ \ \ \ \ \ \ \ (else (intersection-set (cdr set1) set2))))
    </input>
  </session>

  In designing a representation, one of the issues we should be concerned
  with is efficiency. Consider the number of steps required by our set
  operations. Since they all use <code*|element-of-set?>, the speed of this
  operation has a major impact on the efficiency of the set implementation as
  a whole. Now, in order to check whether an object is a member of a set,
  <code*|element-of-set?> may have to scan the entire set. (In the worst
  case, the object turns out not to be in the set.) Hence, if the set has
  <math|n> elements, <code*|element-of-set?> might take up to <math|n> steps.
  Thus, the number of steps required grows as
  <math|\<Theta\><around*|(|n|)>>. The number of steps required by
  <code*|adjoin-set>, which uses this operation, also grows as
  <math|\<Theta\><around*|(|n|)>>. For <code*|intersection-set>, which does
  an <code*|element-of-set?> check for each element of <code*|set1>, the
  number of steps required grows as the product of the sizes of the sets
  involved, or <math|\<Theta\><around*|(|n<rsup|2>|)>> for two sets of size
  <math|n>. The same will be true of <code*|union-set>.

  <\exercise>
    Implement the <code*|union-set> operation for the unordered-list
    representation of sets.
  </exercise>

  <\exercise>
    We specified that a set would be represented as a list with no
    duplicates. Now suppose we allow duplicates. For instance, the set
    <math|<around*|{|1,2,3|}>> could be represented as the list <code*|(2 3 2
    1 3 2 2)>. Design procedures <code*|element-of-set?>, <code*|adjoin-set>,
    <code*|union-set>, and <code*|intersection-set> that operate on this
    representation. How does the efficiency of each compare with the
    corresponding procedure for the non-duplicate representation? Are there
    applications for which you would use this representation in preference to
    the non-duplicate one?
  </exercise>

  <paragraph*|Sets as ordered lists>

  One way to speed up our set operations is to change the representation so
  that the set elements are listed in increasing order. To do this, we need
  some way to compare two objects so that we can say which is bigger. For
  example, we could compare symbols lexicographically, or we could agree on
  some method for assigning a unique number to an object and then compare the
  elements by comparing the corresponding numbers. To keep our discussion
  simple, we will consider only the case where the set elements are numbers,
  so that we can compare elements using <code*|\<gtr\>> and <code*|\<less\>>.
  We will represent a set of numbers by listing its elements in increasing
  order. Whereas our first representation above allowed us to represent the
  set <math|<around*|{|1,3,6,10|}>> by listing the elements in any order, our
  new representation allows only the list <code*|(1 3 6 10)>.

  One advantage of ordering shows up in <code*|element-of-set?>: In checking
  for the presence of an item, we no longer have to scan the entire set. If
  we reach a set element that is larger than the item we are looking for,
  then we know that the item is not in the set:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (element-of-set? x set)

      \ \ (cond ((null? set) false)

      \ \ \ \ \ \ \ \ ((= x (car set)) true)

      \ \ \ \ \ \ \ \ ((\<less\> x (car set)) false)

      \ \ \ \ \ \ \ \ (else (element-of-set? x (cdr set)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  How many steps does this save? In the worst case, the item we are looking
  for may be the largest one in the set, so the number of steps is the same
  as for the unordered representation. On the other hand, if we search for
  items of many different sizes we can expect that sometimes we will be able
  to stop searching at a point near the beginning of the list and that other
  times we will still need to examine most of the list. On the average we
  should expect to have to examine about half of the items in the set. Thus,
  the average number of steps required will be about
  <math|n<around*|/|2|\<nobracket\>>>. This is still
  <math|\<Theta\><around*|(|n|)>> growth, but it does save us, on the
  average, a factor of 2 in number of steps over the previous implementation.

  We obtain a more impressive speedup with <code*|intersection-set>. In the
  unordered representation this operation required
  <math|\<Theta\><around*|(|n<rsup|2>|)>> steps, because we performed a
  complete scan of <code*|set2> for each element of <code*|set1>. But with
  the ordered representation, we can use a more clever method. Begin by
  comparing the initial elements, <code*|x1> and <code*|x2>, of the two sets.
  If <code*|x1> equals <code*|x2>, then that gives an element of the
  intersection, and the rest of the intersection is the intersection of the
  <code*|cdr>-s of the two sets. Suppose, however, that <code*|x1> is less
  than <code*|x2>. Since <code*|x2> is the smallest element in <code*|set2>,
  we can immediately conclude that <code*|x1> cannot appear anywhere in
  <code*|set2> and hence is not in the intersection. Hence, the intersection
  is equal to the intersection of <code*|set2> with the <code*|cdr> of
  <code*|set1>. Similarly, if <code*|x2> is less than <code*|x1>, then the
  intersection is given by the intersection of <code*|set1> with the
  <code*|cdr> of <code*|set2>. Here is the procedure:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (intersection-set set1 set2)

      \ \ (if (or (null? set1) (null? set2))

      \ \ \ \ \ \ '() \ \ \ 

      \ \ \ \ \ \ (let ((x1 (car set1)) (x2 (car set2)))

      \ \ \ \ \ \ \ \ (cond ((= x1 x2)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons x1

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (intersection-set (cdr set1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cdr
      set2))))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ ((\<less\> x1 x2)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (intersection-set (cdr set1) set2))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ ((\<less\> x2 x1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (intersection-set set1 (cdr set2)))))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  To estimate the number of steps required by this process, observe that at
  each step we reduce the intersection problem to computing intersections of
  smaller sets\Vremoving the first element from <code*|set1> or <code*|set2>
  or both. Thus, the number of steps required is at most the sum of the sizes
  of <code*|set1> and <code*|set2>, rather than the product of the sizes as
  with the unordered representation. This is <math|\<Theta\><around*|(|n|)>>
  growth rather than <math|\<Theta\><around*|(|n<rsup|2>|)>>\Va considerable
  speedup, even for sets of moderate size.

  <\exercise>
    Give an implementation of <code*|adjoin-set> using the ordered
    representation. By analogy with <code*|element-of-set?> show how to take
    advantage of the ordering to produce a procedure that requires on the
    average about half as many steps as with the unordered representation.
  </exercise>

  <\exercise>
    Give a <math|\<Theta\><around*|(|n|)>> implementation of
    <code*|union-set> for sets represented as ordered lists.
  </exercise>

  <paragraph*|Sets as binary trees>

  We can do better than the ordered-list representation by arranging the set
  elements in the form of a tree. Each node of the tree holds one element of
  the set, called the \Pentry\Q at that node, and a link to each of two other
  (possibly empty) nodes. The \Pleft\Q link points to elements smaller than
  the one at the node, and the \Pright\Q link to elements greater than the
  one at the node. <hlink|Figure 2.16|#Figure-2_002e16> shows some trees that
  represent the set <math|<around*|{|1,3,5,7,9,11|}>>. The same set may be
  represented by a tree in a number of different ways. The only thing we
  require for a valid representation is that all elements in the left subtree
  be smaller than the node entry and that all elements in the right subtree
  be larger.

  <\big-figure>
    \;

    <tree|7|<tree|3|1|5>|<tree|9|11>><space|1em><tree|3|1|<tree|7|5|<tree|9|11>>><space|1em><tree|5|<tree|3|1>|<tree|9|7|11>>

    \;
  <|big-figure>
    Various binary trees that represent the set
    <math|<around*|{|1,3,5,7,9,11|}>>.
  </big-figure>

  The advantage of the tree representation is this: Suppose we want to check
  whether a number <math|x> is contained in a set. We begin by comparing
  <math|x> with the entry in the top node. If <math|x> is less than this, we
  know that we need only search the left subtree; if <math|x> is greater, we
  need only search the right subtree. Now, if the tree is \Pbalanced,\Q each
  of these subtrees will be about half the size of the original. Thus, in one
  step we have reduced the problem of searching a tree of size <math|n> to
  searching a tree of size <math|n<around*|/|2|\<nobracket\>>>. Since the
  size of the tree is halved at each step, we should expect that the number
  of steps needed to search a tree of size <math|n> grows as
  <math|\<Theta\><around*|(|log\<nospace\>n|)>>.<\footnote>
    Halving the size of the problem at each step is the distinguishing
    characteristic of logarithmic growth, as we saw with the
    fast-exponentiation algorithm of <hlink|1.2.4|#1.2.4> and the
    half-interval search method of <hlink|1.3.3|#1.3.3>.
  </footnote> For large sets, this will be a significant speedup over the
  previous representations.

  We can represent trees by using lists. Each node will be a list of three
  items: the entry at the node, the left subtree, and the right subtree. A
  left or a right subtree of the empty list will indicate that there is no
  subtree connected there. We can describe this representation by the
  following procedures:<\footnote>
    We are representing sets in terms of trees, and trees in terms of
    lists\Vin effect, a data abstraction built upon a data abstraction. We
    can regard the procedures <code*|entry>, <code*|left-branch>,
    <code*|right-branch>, and <code*|make-tree> as a way of isolating the
    abstraction of a \Pbinary tree\Q from the particular way we might wish to
    represent such a tree in terms of list structure.
  </footnote>

  <\session|scheme|default>
    <\input|Scheme] >
      (define (entry tree) (car tree))
    </input>

    <\input|Scheme] >
      (define (left-branch tree) (cadr tree))
    </input>

    <\input|Scheme] >
      (define (right-branch tree) (caddr tree))
    </input>

    <\input|Scheme] >
      (define (make-tree entry left right)

      \ \ (list entry left right))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Now we can write the <code*|element-of-set?> procedure using the strategy
  described above:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (element-of-set? x set)

      \ \ (cond ((null? set) false)

      \ \ \ \ \ \ \ \ ((= x (entry set)) true)

      \ \ \ \ \ \ \ \ ((\<less\> x (entry set))

      \ \ \ \ \ \ \ \ \ (element-of-set? x (left-branch set)))

      \ \ \ \ \ \ \ \ ((\<gtr\> x (entry set))

      \ \ \ \ \ \ \ \ \ (element-of-set? x (right-branch set)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Adjoining an item to a set is implemented similarly and also requires
  <math|\<Theta\><around*|(|log\<nospace\>n|)>> steps. To adjoin an item
  <code*|x>, we compare <code*|x> with the node entry to determine whether
  <code*|x> should be added to the right or to the left branch, and having
  adjoined <code*|x> to the appropriate branch we piece this newly
  constructed branch together with the original entry and the other branch.
  If <code*|x> is equal to the entry, we just return the node. If we are
  asked to adjoin <code*|x> to an empty tree, we generate a tree that has
  <code*|x> as the entry and empty right and left branches. Here is the
  procedure:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (adjoin-set x set)

      \ \ (cond ((null? set) (make-tree x '() '()))

      \ \ \ \ \ \ \ \ ((= x (entry set)) set)

      \ \ \ \ \ \ \ \ ((\<less\> x (entry set))

      \ \ \ \ \ \ \ \ \ (make-tree (entry set)\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-set x (left-branch
      set))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (right-branch set)))

      \ \ \ \ \ \ \ \ ((\<gtr\> x (entry set))

      \ \ \ \ \ \ \ \ \ (make-tree (entry set)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (left-branch set)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-set x (right-branch
      set))))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The above claim that searching the tree can be performed in a logarithmic
  number of steps rests on the assumption that the tree is \Pbalanced,\Q
  i.e., that the left and the right subtree of every tree have approximately
  the same number of elements, so that each subtree contains about half the
  elements of its parent. But how can we be certain that the trees we
  construct will be balanced? Even if we start with a balanced tree, adding
  elements with <code*|adjoin-set> may produce an unbalanced result. Since
  the position of a newly adjoined element depends on how the element
  compares with the items already in the set, we can expect that if we add
  elements \Prandomly\Q the tree will tend to be balanced on the average. But
  this is not a guarantee. For example, if we start with an empty set and
  adjoin the numbers 1 through 7 in sequence we end up with the highly
  unbalanced tree shown in <hlink|Figure 2.17|#Figure-2_002e17>. In this tree
  all the left subtrees are empty, so it has no advantage over a simple
  ordered list. One way to solve this problem is to define an operation that
  transforms an arbitrary tree into a balanced tree with the same elements.
  Then we can perform this transformation after every few <code*|adjoin-set>
  operations to keep our set in balance. There are also other ways to solve
  this problem, most of which involve designing new data structures for which
  searching and insertion both can be done in
  <math|\<Theta\><around*|(|log\<nospace\>n|)>> steps.<\footnote>
    Examples of such structures include <em|B-trees><index|B-trees> and
    <em|red-black trees><index|red-black trees>. There is a large literature
    on data structures devoted to this problem. See <hlink|Cormen et al.
    1990|References.xhtml#Cormen-et-al_002e-1990>.
  </footnote>

  <\big-figure|<image|<tuple||png>|0.3par|||>>
    Unbalanced tree produced by adjoining 1 through 7 in sequence.
  </big-figure>

  <\exercise>
    Each of the following two procedures converts a binary tree to a list.

    <\scm-code>
      (define (tree-\<gtr\>list-1 tree)

      \ \ (if (null? tree)

      \ \ \ \ \ \ '()

      \ \ \ \ \ \ (append (tree-\<gtr\>list-1 (left-branch tree))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (entry tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (tree-\<gtr\>list-1
      (right-branch tree))))))

      (define (tree-\<gtr\>list-2 tree)

      \ \ (define (copy-to-list tree result-list)

      \ \ \ \ (if (null? tree)

      \ \ \ \ \ \ \ \ result-list

      \ \ \ \ \ \ \ \ (copy-to-list (left-branch tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (entry tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (copy-to-list
      (right-branch tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result-list)))))

      \ \ (copy-to-list tree '()))
    </scm-code>

    <\enumerate>
      <item>Do the two procedures produce the same result for every tree? If
      not, how do the results differ? What lists do the two procedures
      produce for the trees in <hlink|Figure 2.16|#Figure-2_002e16>?

      <item>Do the two procedures have the same order of growth in the number
      of steps required to convert a balanced tree with <math|n> elements to
      a list? If not, which one grows more slowly?
    </enumerate>
  </exercise>

  <\exercise>
    The following procedure <code*|list-\<gtr\>tree> converts an ordered list
    to a balanced binary tree. The helper procedure <code*|partial-tree>
    takes as arguments an integer <math|n> and list of at least <math|n>
    elements and constructs a balanced tree containing the first <math|n>
    elements of the list. The result returned by <code*|partial-tree> is a
    pair (formed with <code*|cons>) whose <code*|car> is the constructed tree
    and whose <code*|cdr> is the list of elements not included in the tree.

    <\scm-code>
      (define (list-\<gtr\>tree elements)

      \ \ (car (partial-tree elements (length elements))))

      \;

      (define (partial-tree elts n)

      \ \ (if (= n 0)

      \ \ \ \ \ \ (cons '() elts)

      \ \ \ \ \ \ (let ((left-size (quotient (- n 1) 2)))

      \ \ \ \ \ \ \ \ (let ((left-result (partial-tree elts left-size)))

      \ \ \ \ \ \ \ \ \ \ (let ((left-tree (car left-result))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (non-left-elts (cdr left-result))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (right-size (- n (+ left-size 1))))

      \ \ \ \ \ \ \ \ \ \ \ \ (let ((this-entry (car non-left-elts))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (right-result (partial-tree (cdr
      non-left-elts)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ right-size)))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (let ((right-tree (car right-result))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (remaining-elts (cdr
      right-result)))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (make-tree this-entry left-tree
      right-tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ remaining-elts))))))))
    </scm-code>

    <\enumerate-numeric>
      <item>Write a short paragraph explaining as clearly as you can how
      <code*|partial-tree> works. Draw the tree produced by
      <code*|list-\<gtr\>tree> for the list <code*|(1 3 5 7 9 11)>.

      <item>What is the order of growth in the number of steps required by
      <code*|list-\<gtr\>tree> to convert a list of <math|n> elements?
    </enumerate-numeric>
  </exercise>

  <\exercise>
    Use the results of <hlink|Exercise 2.63|#Exercise-2_002e63> and
    <hlink|Exercise 2.64|#Exercise-2_002e64> to give
    <math|\<Theta\><around*|(|n|)>> implementations of <code*|union-set> and
    <code*|intersection-set> for sets implemented as (balanced) binary
    trees.<\footnote>
      <hlink|Exercise 2.63|#Exercise-2_002e63> through <hlink|Exercise
      2.65|#Exercise-2_002e65> are due to Paul Hilfinger.
    </footnote>
  </exercise>

  <paragraph*|Sets and information retrieval>

  We have examined options for using lists to represent sets and have seen
  how the choice of representation for a data object can have a large impact
  on the performance of the programs that use the data. Another reason for
  concentrating on sets is that the techniques discussed here appear again
  and again in applications involving information retrieval.

  Consider a data base containing a large number of individual records, such
  as the personnel files for a company or the transactions in an accounting
  system. A typical data-management system spends a large amount of time
  accessing or modifying the data in the records and therefore requires an
  efficient method for accessing records. This is done by identifying a part
  of each record to serve as an identifying <em|key><index|key>. A key can be
  anything that uniquely identifies the record. For a personnel file, it
  might be an employee's ID number. For an accounting system, it might be a
  transaction number. Whatever the key is, when we define the record as a
  data structure we should include a <code*|key> selector procedure that
  retrieves the key associated with a given record.

  Now we represent the data base as a set of records. To locate the record
  with a given key we use a procedure <code*|lookup>, which takes as
  arguments a key and a data base and which returns the record that has that
  key, or false if there is no such record. <code*|Lookup> is implemented in
  almost the same way as <code*|element-of-set?>. For example, if the set of
  records is implemented as an unordered list, we could use

  <\session|scheme|default>
    <\input|Scheme] >
      (define (lookup given-key set-of-records)

      \ \ (cond ((null? set-of-records) false)

      \ \ \ \ \ \ \ \ ((equal? given-key (key (car set-of-records)))

      \ \ \ \ \ \ \ \ \ (car set-of-records))

      \ \ \ \ \ \ \ \ (else (lookup given-key (cdr set-of-records)))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  Of course, there are better ways to represent large sets than as unordered
  lists. Information-retrieval systems in which records have to be \Prandomly
  accessed\Q are typically implemented by a tree-based method, such as the
  binary-tree representation discussed previously. In designing such a system
  the methodology of data abstraction can be a great help. The designer can
  create an initial implementation using a simple, straightforward
  representation such as unordered lists. This will be unsuitable for the
  eventual system, but it can be useful in providing a \Pquick and dirty\Q
  data base with which to test the rest of the system. Later on, the data
  representation can be modified to be more sophisticated. If the data base
  is accessed in terms of abstract selectors and constructors, this change in
  representation will not require any changes to the rest of the system.

  <\exercise>
    Implement the <code*|lookup> procedure for the case where the set of
    records is structured as a binary tree, ordered by the numerical values
    of the keys.
  </exercise>

  <subsection|Example: Huffman Encoding Trees>

  This section provides practice in the use of list structure and data
  abstraction to manipulate sets and trees. The application is to methods for
  representing data as sequences of ones and zeros (bits). For example, the
  ASCII standard code used to represent text in computers encodes each
  character as a sequence of seven bits. Using seven bits allows us to
  distinguish <math|2<rsup|7>>, or 128, possible different characters. In
  general, if we want to distinguish <math|n> different symbols, we will need
  to use <math|log<rsub|2>\<nospace\>n> bits per symbol. If all our messages
  are made up of the eight symbols A, B, C, D, E, F, G, and H, we can choose
  a code with three bits per character, for example

  <\code>
    A 000 \ C 010 \ E 100 \ G 110

    B 001 \ D 011 \ F 101 \ H 111
  </code>

  With this code, the message

  <code|BACADAEAFABBAAAGAH>

  is encoded as the string of 54 bits

  <\code>
    001000010000011000100000101

    000001001000000000110000111
  </code>

  Codes such as ASCII and the A-through-H code above are known as
  <em|fixed-length><index|fixed-length> codes, because they represent each
  symbol in the message with the same number of bits. It is sometimes
  advantageous to use <em|variable-length><index|variable-length> codes, in
  which different symbols may be represented by different numbers of bits.
  For example, Morse code does not use the same number of dots and dashes for
  each letter of the alphabet. In particular, E, the most frequent letter, is
  represented by a single dot. In general, if our messages are such that some
  symbols appear very frequently and some very rarely, we can encode data
  more efficiently (i.e., using fewer bits per message) if we assign shorter
  codes to the frequent symbols. Consider the following alternative code for
  the letters A through H:

  <\code>
    A 0 \ \ \ C 1010 \ E 1100 \ G 1110

    B 100 \ D 1011 \ F 1101 \ H 1111
  </code>

  With this code, the same message as above is encoded as the string

  <\code>
    100010100101101100011

    010100100000111001111
  </code>

  This string contains 42 bits, so it saves more than 20% in space in
  comparison with the fixed-length code shown above.

  One of the difficulties of using a variable-length code is knowing when you
  have reached the end of a symbol in reading a sequence of zeros and ones.
  Morse code solves this problem by using a special <em|separator
  code><index|separator code> (in this case, a pause) after the sequence of
  dots and dashes for each letter. Another solution is to design the code in
  such a way that no complete code for any symbol is the beginning (or
  <em|prefix><index|prefix>) of the code for another symbol. Such a code is
  called a <em|prefix code><index|prefix code>. In the example above, A is
  encoded by 0 and B is encoded by 100, so no other symbol can have a code
  that begins with 0 or with 100.

  In general, we can attain significant savings if we use variable-length
  prefix codes that take advantage of the relative frequencies of the symbols
  in the messages to be encoded. One particular scheme for doing this is
  called the Huffman encoding method, after its discoverer, David Huffman. A
  Huffman code can be represented as a binary tree whose leaves are the
  symbols that are encoded. At each non-leaf node of the tree there is a set
  containing all the symbols in the leaves that lie below the node. In
  addition, each symbol at a leaf is assigned a weight (which is its relative
  frequency), and each non-leaf node contains a weight that is the sum of all
  the weights of the leaves lying below it. The weights are not used in the
  encoding or the decoding process. We will see below how they are used to
  help construct the tree.

  <hlink|Figure 2.18|#fig2.18> shows the Huffman tree for the A-through-H
  code given above. The weights at the leaves indicate that the tree was
  designed for messages in which A appears with relative frequency 8, B with
  relative frequency 3, and the other letters each with relative frequency 1.

  <\big-figure|<tree|{A B C D E F G H} 17|A 8|<tree|{B C D E F G H}
  9|<tree|{B C D} 5|B 3|<tree|{C D} 2|C 1|D 1>>|<tree|{E F G H} 4|<tree|{E F}
  2|E 1|F 1>|<tree|{G H} 2|G 1|H 1>>>>>
    <label|fig2.18>A Huffman encoding tree.
  </big-figure>

  Given a Huffman tree, we can find the encoding of any symbol by starting at
  the root and moving down until we reach the leaf that holds the symbol.
  Each time we move down a left branch we add a 0 to the code, and each time
  we move down a right branch we add a 1. (We decide which branch to follow
  by testing to see which branch either is the leaf node for the symbol or
  contains the symbol in its set.) For example, starting from the root of the
  tree in <hlink|Figure 2.18|#Figure-2_002e18>, we arrive at the leaf for D
  by following a right branch, then a left branch, then a right branch, then
  a right branch; hence, the code for D is 1011.

  To decode a bit sequence using a Huffman tree, we begin at the root and use
  the successive zeros and ones of the bit sequence to determine whether to
  move down the left or the right branch. Each time we come to a leaf, we
  have generated a new symbol in the message, at which point we start over
  from the root of the tree to find the next symbol. For example, suppose we
  are given the tree above and the sequence 10001010. Starting at the root,
  we move down the right branch, (since the first bit of the string is 1),
  then down the left branch (since the second bit is 0), then down the left
  branch (since the third bit is also 0). This brings us to the leaf for B,
  so the first symbol of the decoded message is B. Now we start again at the
  root, and we make a left move because the next bit in the string is 0. This
  brings us to the leaf for A. Then we start again at the root with the rest
  of the string 1010, so we move right, left, right, left and reach C. Thus,
  the entire message is BAC.

  <paragraph*|Generating Huffman trees>

  Given an \Palphabet\Q of symbols and their relative frequencies, how do we
  construct the \Pbest\Q code? (In other words, which tree will encode
  messages with the fewest bits?) Huffman gave an algorithm for doing this
  and showed that the resulting code is indeed the best variable-length code
  for messages where the relative frequency of the symbols matches the
  frequencies with which the code was constructed. We will not prove this
  optimality of Huffman codes here, but we will show how Huffman trees are
  constructed.<\footnote>
    See <hlink|Hamming 1980|References.xhtml#Hamming-1980> for a discussion
    of the mathematical properties of Huffman codes.
  </footnote>

  The algorithm for generating a Huffman tree is very simple. The idea is to
  arrange the tree so that the symbols with the lowest frequency appear
  farthest away from the root. Begin with the set of leaf nodes, containing
  symbols and their frequencies, as determined by the initial data from which
  the code is to be constructed. Now find two leaves with the lowest weights
  and merge them to produce a node that has these two nodes as its left and
  right branches. The weight of the new node is the sum of the two weights.
  Remove the two leaves from the original set and replace them by this new
  node. Now continue this process. At each step, merge two nodes with the
  smallest weights, removing them from the set and replacing them with a node
  that has these two as its left and right branches. The process stops when
  there is only one node left, which is the root of the entire tree. Here is
  how the Huffman tree of <hlink|Figure 2.18|#Figure-2_002e18> was generated:

  <\code>
    Initial {(A 8) (B 3) (C 1) (D 1)\ 

    leaves \ \ (E 1) (F 1) (G 1) (H 1)}

    \;

    Merge \ \ {(A 8) (B 3) ({C D} 2)\ 

    \ \ \ \ \ \ \ \ \ (E 1) (F 1) (G 1) (H 1)}

    \;

    Merge \ \ {(A 8) (B 3) ({C D} 2)\ 

    \ \ \ \ \ \ \ \ \ ({E F} 2) (G 1) (H 1)}

    \;

    Merge \ \ {(A 8) (B 3) ({C D} 2)\ 

    \ \ \ \ \ \ \ \ \ ({E F} 2) ({G H} 2)}

    \;

    Merge \ \ {(A 8) (B 3) ({C D} 2)\ 

    \ \ \ \ \ \ \ \ \ ({E F G H} 4)}

    \;

    Merge \ \ {(A 8) ({B C D} 5)\ 

    \ \ \ \ \ \ \ \ \ ({E F G H} 4)}

    \;

    Merge \ \ {(A 8) ({B C D E F G H} 9)}

    \;

    Final \ \ {({A B C D E F G H} 17)}

    merge \ \ \ 
  </code>

  The algorithm does not always specify a unique tree, because there may not
  be unique smallest-weight nodes at each step. Also, the choice of the order
  in which the two nodes are merged (i.e., which will be the right branch and
  which will be the left branch) is arbitrary.

  <paragraph*|Representing Huffman trees>

  In the exercises below we will work with a system that uses Huffman trees
  to encode and decode messages and generates Huffman trees according to the
  algorithm outlined above. We will begin by discussing how trees are
  represented.

  Leaves of the tree are represented by a list consisting of the symbol
  <code*|leaf>, the symbol at the leaf, and the weight:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-leaf symbol weight)

      \ \ (list 'leaf symbol weight))
    </input>

    <\input|Scheme] >
      (define (leaf? object)

      \ \ (eq? (car object) 'leaf))
    </input>

    <\input|Scheme] >
      (define (symbol-leaf x) (cadr x))
    </input>

    <\input|Scheme] >
      (define (weight-leaf x) (caddr x))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  A general tree will be a list of a left branch, a right branch, a set of
  symbols, and a weight. The set of symbols will be simply a list of the
  symbols, rather than some more sophisticated set representation. When we
  make a tree by merging two nodes, we obtain the weight of the tree as the
  sum of the weights of the nodes, and the set of symbols as the union of the
  sets of symbols for the nodes. Since our symbol sets are represented as
  lists, we can form the union by using the <code*|append> procedure we
  defined in <hlink|2.2.1|2_002e2.xhtml#g_t2_002e2_002e1>:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-code-tree left right)

      \ \ (list left

      \ \ \ \ \ \ \ \ right

      \ \ \ \ \ \ \ \ (append (symbols left) (symbols right))

      \ \ \ \ \ \ \ \ (+ (weight left) (weight right))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  If we make a tree in this way, we have the following selectors:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (left-branch tree) (car tree))
    </input>

    <\input|Scheme] >
      (define (right-branch tree) (cadr tree))
    </input>

    <\input|Scheme] >
      (define (symbols tree)

      \ \ (if (leaf? tree)

      \ \ \ \ \ \ (list (symbol-leaf tree))

      \ \ \ \ \ \ (caddr tree)))
    </input>

    <\input|Scheme] >
      (define (weight tree)

      \ \ (if (leaf? tree)

      \ \ \ \ \ \ (weight-leaf tree)

      \ \ \ \ \ \ (cadddr tree)))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The procedures <code*|symbols> and <code*|weight> must do something
  slightly different depending on whether they are called with a leaf or a
  general tree. These are simple examples of <label|index-generic-procedures>
  <em|generic procedures><index|generic procedures> (procedures that can
  handle more than one kind of data), which we will have much more to say
  about in <hlink|2.4|2_002e4.xhtml#g_t2_002e4> and
  <hlink|2.5|2_002e5.xhtml#g_t2_002e5>.

  <paragraph*|The decoding procedure>

  The following procedure implements the decoding algorithm. It takes as
  arguments a list of zeros and ones, together with a Huffman tree.

  <\session|scheme|default>
    <\input|Scheme] >
      (define (decode bits tree)

      \ \ (define (decode-1 bits current-branch)

      \ \ \ \ (if (null? bits)

      \ \ \ \ \ \ \ \ '()

      \ \ \ \ \ \ \ \ (let ((next-branch

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (choose-branch (car bits)
      current-branch)))

      \ \ \ \ \ \ \ \ \ \ (if (leaf? next-branch)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (symbol-leaf next-branch)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (decode-1 (cdr bits) tree))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (decode-1 (cdr bits) next-branch)))))

      \ \ (decode-1 bits tree))
    </input>

    <\input|Scheme] >
      (define (choose-branch bit branch)

      \ \ (cond ((= bit 0) (left-branch branch))

      \ \ \ \ \ \ \ \ ((= bit 1) (right-branch branch))

      \ \ \ \ \ \ \ \ (else (error "bad bit -- CHOOSE-BRANCH" bit))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The procedure <code*|decode-1> takes two arguments: the list of remaining
  bits and the current position in the tree. It keeps moving \Pdown\Q the
  tree, choosing a left or a right branch according to whether the next bit
  in the list is a zero or a one. (This is done with the procedure
  <code*|choose-branch>.) When it reaches a leaf, it returns the symbol at
  that leaf as the next symbol in the message by <code*|cons>ing it onto the
  result of decoding the rest of the message, starting at the root of the
  tree. Note the error check in the final clause of <code*|choose-branch>,
  which complains if the procedure finds something other than a zero or a one
  in the input data.

  <paragraph*|Sets of weighted elements>

  In our representation of trees, each non-leaf node contains a set of
  symbols, which we have represented as a simple list. However, the
  tree-generating algorithm discussed above requires that we also work with
  sets of leaves and trees, successively merging the two smallest items.
  Since we will be required to repeatedly find the smallest item in a set, it
  is convenient to use an ordered representation for this kind of set.

  We will represent a set of leaves and trees as a list of elements, arranged
  in increasing order of weight. The following <code*|adjoin-set> procedure
  for constructing sets is similar to the one described in <hlink|Exercise
  2.61|#Exercise-2_002e61>; however, items are compared by their weights, and
  the element being added to the set is never already in it.

  <\session|scheme|default>
    <\input|Scheme] >
      (define (adjoin-set x set)

      \ \ (cond ((null? set) (list x))

      \ \ \ \ \ \ \ \ ((\<less\> (weight x) (weight (car set))) (cons x set))

      \ \ \ \ \ \ \ \ (else (cons (car set)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-set x (cdr set))))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  The following procedure takes a list of symbol-frequency pairs such as
  <code*|((A 4) (B 2) (C 1) (D 1))> and constructs an initial ordered set of
  leaves, ready to be merged according to the Huffman algorithm:

  <\session|scheme|default>
    <\input|Scheme] >
      (define (make-leaf-set pairs)

      \ \ (if (null? pairs)

      \ \ \ \ \ \ '()

      \ \ \ \ \ \ (let ((pair (car pairs)))

      \ \ \ \ \ \ \ \ (adjoin-set (make-leaf (car pair) \ \ \ ; symbol

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cadr
      pair)) \ ; frequency

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-leaf-set (cdr pairs))))))
    </input>

    <\input|Scheme] >
      \;
    </input>
  </session>

  <\exercise>
    Define an encoding tree and a sample message:

    <\scm-code>
      (define sample-tree

      \ \ (make-code-tree (make-leaf 'A 4)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-code-tree

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-leaf 'B 2)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-code-tree (make-leaf 'D 1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-leaf
      'C 1)))))

      \;

      (define sample-message '(0 1 1 0 0 1 0 1 0 1 1 1 0))
    </scm-code>

    Use the <code*|decode> procedure to decode the message, and give the
    result.
  </exercise>

  <\exercise>
    The <code*|encode> procedure takes as arguments a message and a tree and
    produces the list of bits that gives the encoded message.

    <\scm-code>
      (define (encode message tree)

      \ \ (if (null? message)

      \ \ \ \ \ \ '()

      \ \ \ \ \ \ (append (encode-symbol (car message) tree)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (encode (cdr message) tree))))
    </scm-code>

    <code*|Encode-symbol> is a procedure, which you must write, that returns
    the list of bits that encodes a given symbol according to a given tree.
    You should design <code*|encode-symbol> so that it signals an error if
    the symbol is not in the tree at all. Test your procedure by encoding the
    result you obtained in <hlink|Exercise 2.67|#Exercise-2_002e67> with the
    sample tree and seeing whether it is the same as the original sample
    message.
  </exercise>

  <\exercise>
    The following procedure takes as its argument a list of symbol-frequency
    pairs (where no symbol appears in more than one pair) and generates a
    Huffman encoding tree according to the Huffman algorithm.

    <\scm-code>
      (define (generate-huffman-tree pairs)

      \ \ (successive-merge (make-leaf-set pairs)))
    </scm-code>

    <code*|Make-leaf-set> is the procedure given above that transforms the
    list of pairs into an ordered set of leaves. <code*|Successive-merge> is
    the procedure you must write, using <code*|make-code-tree> to
    successively merge the smallest-weight elements of the set until there is
    only one element left, which is the desired Huffman tree. (This procedure
    is slightly tricky, but not really complicated. If you find yourself
    designing a complex procedure, then you are almost certainly doing
    something wrong. You can take significant advantage of the fact that we
    are using an ordered set representation.)
  </exercise>

  <\exercise>
    The following eight-symbol alphabet with associated relative frequencies
    was designed to efficiently encode the lyrics of 1950s rock songs. (Note
    that the \Psymbols\Q of an \Palphabet\Q need not be individual letters.)

    <\code>
      A \ \ \ 2 \ \ \ NA \ 16

      BOOM 1 \ \ \ SHA \ 3

      GET \ 2 \ \ \ YIP \ 9

      JOB \ 2 \ \ \ WAH \ 1
    </code>

    Use <code*|generate-huffman-tree> (<hlink|Exercise
    2.69|#Exercise-2_002e69>) to generate a corresponding Huffman tree, and
    use <code*|encode> (<hlink|Exercise 2.68|#Exercise-2_002e68>) to encode
    the following message:

    <\code>
      Get a job

      Sha na na na na na na na na

      \;

      Get a job

      Sha na na na na na na na na

      \;

      Wah yip yip yip yip\ 

      yip yip yip yip yip

      Sha boom
    </code>

    How many bits are required for the encoding? What is the smallest number
    of bits that would be needed to encode this song if we used a
    fixed-length code for the eight-symbol alphabet?
  </exercise>

  <\exercise>
    Suppose we have a Huffman tree for an alphabet of <math|n> symbols, and
    that the relative frequencies of the symbols are
    <math|1,2,4,\<ldots\>,2<rsup|n\<minus\>1>>. Sketch the tree for
    <math|n=5>; for <math|n=10>. In such a tree (for general <math|n>) how
    many bits are required to encode the most frequent symbol? The least
    frequent symbol?
  </exercise>

  <\exercise>
    Consider the encoding procedure that you designed in <hlink|Exercise
    2.68|#Exercise-2_002e68>. What is the order of growth in the number of
    steps needed to encode a symbol? Be sure to include the number of steps
    needed to search the symbol list at each node encountered. To answer this
    question in general is difficult. Consider the special case where the
    relative frequencies of the <math|n> symbols are as described in
    <hlink|Exercise 2.71|#Exercise-2_002e71>, and give the order of growth
    (as a function of <math|n>) of the number of steps needed to encode the
    most frequent and least frequent symbols in the alphabet.
  </exercise>

  <section|Multiple Representations for Abstract Data>

  We have introduced data abstraction, a methodology for structuring systems
  in such a way that much of a program can be specified independent of the
  choices involved in implementing the data objects that the program
  manipulates. For example, we saw in <hlink|2.1.1|2_002e1.xhtml#g_t2_002e1_002e1>
  how to separate the task of designing a program that uses rational numbers
  from the task of implementing rational numbers in terms of the computer
  language's primitive mechanisms for constructing compound data. The key
  idea was to erect an abstraction barrier \U in this case, the selectors and
  constructors for rational numbers (<code*|make-rat>, <code*|numer>,
  <code*|denom>)\Vthat isolates the way rational numbers are used from their
  underlying representation in terms of list structure. A similar abstraction
  barrier isolates the details of the procedures that perform rational
  arithmetic (<code*|add-rat>, <code*|sub-rat>, <code*|mul-rat>, and
  <code*|div-rat>) from the \Phigher-level\Q procedures that use rational
  numbers. The resulting program has the structure shown in <hlink|Figure
  2.1|fig2.1>.

  These data-abstraction barriers are powerful tools for controlling
  complexity. By isolating the underlying representations of data objects, we
  can divide the task of designing a large program into smaller tasks that
  can be performed separately. But this kind of data abstraction is not yet
  powerful enough, because it may not always make sense to speak of \Pthe
  underlying representation\Q for a data object.

  For one thing, there might be more than one useful representation for a
  data object, and we might like to design systems that can deal with
  multiple representations. To take a simple example, complex numbers may be
  represented in two almost equivalent ways: in rectangular form (real and
  imaginary parts) and in polar form (magnitude and angle). Sometimes
  rectangular form is more appropriate and sometimes polar form is more
  appropriate. Indeed, it is perfectly plausible to imagine a system in which
  complex numbers are represented in both ways, and in which the procedures
  for manipulating complex numbers work with either representation.

  More importantly, programming systems are often designed by many people
  working over extended periods of time, subject to requirements that change
  over time. In such an environment, it is simply not possible for everyone
  to agree in advance on choices of data representation. So in addition to
  the data-abstraction barriers that isolate representation from use, we need
  abstraction barriers that isolate different design choices from each other
  and permit different choices to coexist in a single program. Furthermore,
  since large programs are often created by combining pre-existing modules
  that were designed in isolation, we need conventions that permit
  programmers to incorporate modules into larger systems
  <em|additively><index|additively>, that is, without having to redesign or
  reimplement these modules.

  In this section, we will learn how to cope with data that may be
  represented in different ways by different parts of a program. This
  requires constructing <em|generic procedures><index|generic
  procedures>\Vprocedures that can operate on data that may be represented in
  more than one way. Our main technique for building generic procedures will
  be to work in terms of data objects that have <em|type tags><index|type
  tags>, that is, data objects that include explicit information about how
  they are to be processed. We will also discuss
  <em|data-directed><index|data-directed> programming, a powerful and
  convenient implementation strategy for additively assembling systems with
  generic operations.

  We begin with the simple complex-number example. We will see how type tags
  and data-directed style enable us to design separate rectangular and polar
  representations for complex numbers while maintaining the notion of an
  abstract \Pcomplex-number\Q data object. We will accomplish this by
  defining arithmetic procedures for complex numbers (<code*|add-complex>,
  <code*|sub-complex>, <code*|mul-complex>, and <code*|div-complex>) in terms
  of generic selectors that access parts of a complex number independent of
  how the number is represented. The resulting complex-number system, as
  shown in <hlink|Figure 2.19|#fig2.19>, contains two different kinds of
  abstraction barriers. The \Phorizontal\Q abstraction barriers play the same
  role as the ones in <hlink|Figure 2.1|#fig2.1>. They isolate
  \Phigher-level\Q operations from \Plower-level\Q representations. In
  addition, there is a \Pvertical\Q barrier that gives us the ability to
  separately design and install alternative representations.

  <\big-figure|<image|<tuple|<#89504E470D0A1A0A0000000D494844520000017F000000A00806000000E45B6C290000000473424954080808087C086488000000097048597300000B1300000B1301009A9C1800000A3649444154789CEDDDDB12A32A16005073AAFFFF97330F33A9F1D05C365E51D6AAEAEA8E226E1011316D96058EF5BD3B004EE3D8BEC89FBB0378B9DCC9F2B93C0A46F45D9ED51674FC2FF3CFDD014CE0B33CEB24871C6DF86574FED779EBC973C488D0A8122E66DAE73A6907977EFE6496AF2F18A50EF25359D7934F2B96349FF5FA740A2352B6DFF2521EEBF4E9F6ADF85A71E7D2A4E97A8FC3D6386AE9D2186A5345A5F2F4D661CE967A891CF35C3EF00ADFE44FBA2E973EDD36CDA794B6964F6DBF3DDBE66CCD2FBA9F2DF1A5F5BEB70EB6D667349F48BCB9E55BE2E859574B9B2B4FAE0CAD76CE4D8CFCCFB77554938EDA7A4E98DEF435E948718F23E3FA698D6C236A698F8AB9944F4FBC238D90D3BBB6DFB2A823DB151B98F37F8E75E7D6FAA6C86FFDDE136B9DC75173FB473E003F3ABED1BDA58CB31DB721E9FC9F63DD71B63AFEA31DD1599FF960F853F8776DBBC834DC155AF11E3D42BEAA7DF43E4BE062A67DCE537B9099A6F9ACFE2E3D505B96BF4FA8DC03B75F1E690792A6AD7DCEED2F72C1598FE6D2F4ADB86A9D5C6D6EBF145F6D5D2E96F402D2CA3B527F91185B0FFAD3CFAD7AEA79205CDA6E4F7972EB4A5373B93CB8888A7F9EDA0580B1B4A6E7E036A67D9E211D29E950805D4CFB3C43E99B222E02003020DF660100000000000000000000000000000080F99CF96230EF340138C6A35EE2A8F307D8EF94BED4FBFC0126A4F3079890CE1F60423A7F80098DDCF9D71E727898BC9DBAE32EDADE4046FD0DDFA776FCE90FAD8FEABB8C1DDFCF93EAF3479CED7DA7CB47AEB39AA71CF7CBEDEDA49F7A015816F11DED29F18A73CCFD9EEDEC729D92FFD523FF5C213E9575B5EDB6EEF35358D78AE3D358B7358E34869ED144A93EBFAB7F2F99CFB5785ADE5A9F91386BF5B9D55BEB339767695DADCCBDA3EBD1EB3317C72D77107F96FA01DAAA548074F937F93B57419175A57DA5B794DFD5B2DCBA4FB26EFD7724CF96D2FED6F9A4E922729D52AD81E56269B583B7D76724CE346DCBCCEDB335E02875BEA5BA6DD5F953EA73BDBCA74E0FEFA7FF04767AA4D6C1EB5DB7B5933C52A423285DACA28DA8B5EFBD0D23D7C8A3DB1DEDCEFA3CDAECF5B975DBD26878E6FA3CBC2C777CDB673D9A58FB16FEDD5AD7A3B46D6F9EBDF1AC1B6FFA679D47EB563417479A57295D6DD9D63A7D5B7D469D71B75CCBF7A9F5B9B78DEDADE751EB739DCF596DB4E9CC5152EE2A572A60ED6ADA5AD78AA1B65DED36B4345552BA252DEDAFB5AE369DD05BBE687DE7F4DCCA97B67D727DB6E28CEE33B2AF749FA56D9F5C9FA53C73F994F2EB1D293FA13E7371B4EA74B43BDAA6CBAF6417796BB9EEA23E8FA53E8F35427D9E12C3D523FFA76B8DB4E9A33E8FA53E8F354A7D3EAE2F1DE18A09F074A7F4A523BFDE018093E8FC0126A4F3079890CE1F604267BFDBC7435F000000000000000000000000000000000000000000000000000000000000000080D4F7EE006E30639939C99FBB03E02FB513FC73610C57ED6BE418D6EE8E47C70F2FF65DCA27F99527FF133A9A27C478B419CBCC49FEB93B00FE521A5D8E340ABEC3D51D9F8E965733EDF35CEBCEE953585EF2C9A4AB5D5C4A69D3185A5323B57DE6E24EF793E61F89ABA494765D37DFE47334DEB59E32D7E24FF35EC7563B9EA5BAA8951FB85874B4F94DFE9D7EAEE5F9CD2C8FE491FE29ADAFD912E796CFBD697365DB937F6B5FB53C23FBCDEDAF946EEFB1E5A58CFC9F2F37EA3B328FDCA8B7964F6EDBDFBA23623D524FD96AA2DBA7E58FD447AD4E6B7947F23FAAFC3C9039FFF18CD439F6CA753EBF3FBFF5EBCFB3DB521FA5E99A525EEBF4777F638981E8FC9FE3AE8B426B1E3B3A7A1CF1A21699A32FE999FA896CDF9377F46EE0B72EBD0897F269E5C58B18058CA7F5802E972EF710311D21A6A3EFC883C8C843C16F215DB463A93D3CEE5D5F2B732BED9E78D6CB533D0F7CD37DD5628AAE6B3D3CF6C017266384778D51EAD9435DFEC5B40FBC57EE813B2CCBE2DB3EF06691691F60426EFFAFA19E0100000000000000000000000080FF1BEDC73500003633A8810A6FF5049890CE1F60423A7F8009E9FC0126A4F30798D0CCBFE4F5B65F385AFF283940D5CC9DFFB2FCBFB3F4B54066B075C06360F142A67DFEEB8886ED02C213F82177966531F2FFC975DCE9B2C85DC2B792EE93A44B45EF42D274B913B967DF3A8239F9DFFD939BBDF35F37FE562798EB6CD3CE3ECDA3D6A1E73AE45C3CA50B4AEBE48DEE9B39B5063CB536121D186967039BBDF32F75A0A551754FE3DE32B23A6A3466544749A9834F0719AD797E1DFEC399F33FEFA1EFEFE4E93D197A4EC0A3F7CDFB7D9676DB68B59BDFE0C200E3C174FEFFD5338F9E36F8C8F3821EEB8EBBE7D6FB887D4384C1C50BCC3AEDB3EEC87F0D783D9A29CDB12FCBDF239EDCDC7D6E64948EE26BA3FADE87C5699E917DA7F94284C1C54B38F9C7652E751FDF4DFFB7C8C3DCC8A0264DB74EDFF3050A60A5348564B4D54F9D41C5ACD33EA32A7D4BC7280A00028CFCA1C2B77D0026A4F37F1F235E9E4ADB0576D391408591FFB8A29D974E8ED168BB0FF0F66F9144DF90994B1BFD8F55917C7ADE105AFABE742BDFF5E7DA3B89A26F177DBA277FCF7F4F1B3AAA2DD6D2E6D2E7B689EE4FDBBDC10C23FFDAAB12720DB37632F4E613FDCF3469DA4FF2772EBE5CBA526C5BCBC57DB6B4A174F9D67C7AFEE779A4EDE6F2D4766F36D3F7FC7B5E69507B2B66249FF4350FD1FD6E8DE9CA3CB85EB40DB58E6F2B9F51DBED91F9F03F338CFCAF561BA9ECE1655A9C49BB9DCC4C9D7F64BAE6C87C5AB7B33D8C78E67665DBD56E2731C3B44FEDA554D1874B3DF96C591EBD0D2FBDA93317DBFA246E95CBA86C3CB96997DEB6D593CFD6BC23CF077ADE30ABED7239A3947799E578CE524E0E36D3B40F00FFA3F307607A6EA1DF63A66339535901AA74885061DA0760423A7F8009E9FC0126A4F3079890CE1F6042DE940773F25A84C98DD4005C840000000000000000000000000000000000000000004ABCC1F5784FADD3A7C6FD78B3FF984BADE16994E738B25EF7E4D5DAF64DC7FFCEB28C568FA3C5C34D34847BA8F7E33DB54E9F1AF7E3CD3EF2DF6B4BC33DABB13B89F6517FD7B8BA9E1DD782917EC9EB0EDF255F07BF06F3C92CCB29D563649B529A747D2BFD7ABBD236A53C723FE7192D532DAEC8BA48DEA53CA269D2F4B5FA88ACFF2DABD5672A1A5B2DBF2D751C6DCB7BCAB225EFAD658AA64DDBF496BAE0C57AE6FC7369B7CC1B6FC9F7DB581EC9B796F6B72CFD9353CAA71673A4CCB9FC22316FFDBC65DB5AD95B75B735B6C8B1EFC92F92B6A72C7BE28AC4D2933617F79EFC5FEDCFDD013C4C6EE470C6365147E5D91363EE2E21B24DAF2DFB39D33A9EDCA8FFC8E31B29FB19ED295A96D18ECD51C760AA11BF39FFB8CFD2773BBA759BD1FD3ABEA94E94952B8EE3E8753C7A7C04E8FCFF76C6886BCF49D27BDB1CC923159DA3DEDAF1BDE5C297ABA7ADF3FB257BA722F7889465C463B9E7183CA17CA798F9CA5D3BC83D0FFDD265A57DB41E2E96D2B4D645F26DA5ADE59B2AE59BABAFE843ED52DEA50773AD07D9B5CF9187E0A58783691E91B8D3343DB1A57946EAA7A7AC473EBCDEFAF0FCECB87BE2592F072E34CDA80BEE66DA0760423A7F00E076A67EE002FF01095328F6C21753230000000049454E44AE426082>|png>|200pt|||>>
    <label|fig2.19>Data-abstraction barriers in the complex-number system.
  </big-figure>

  In <hlink|2.5|2_002e5.xhtml#g_t2_002e5> we will show how to use type tags
  and data-directed style to develop a generic arithmetic package. This
  provides procedures (<code*|add>, <code*|mul>, and so on) that can be used
  to manipulate all sorts of \Pnumbers\Q and can be easily extended when a
  new kind of number is needed. In <hlink|2.5.3|#2.5.3>, we'll show how to
  use generic arithmetic in a system that performs symbolic algebra.

  <subsection|Representations for Complex Numbers>

  We will develop a system that performs arithmetic operations on complex
  numbers as a simple but unrealistic example of a program that uses generic
  operations. We begin by discussing two plausible representations for
  complex numbers as ordered pairs: rectangular form (real part and imaginary
  part) and polar form (magnitude and angle).<\footnote>
    In actual computational systems, rectangular form is preferable to polar
    form most of the time because of roundoff errors in conversion between
    rectangular and polar form. This is why the complex-number example is
    unrealistic. Nevertheless, it provides a clear illustration of the design
    of a system using generic operations and a good introduction to the more
    substantial systems to be developed later in this chapter.
  </footnote> Section <hlink|2.4.2|#g_t2_002e4_002e2> will show how both
  representations can be made to coexist in a single system through the use
  of type tags and generic operations.

  Like rational numbers, complex numbers are naturally represented as ordered
  pairs. The set of complex numbers can be thought of as a two-dimensional
  space with two orthogonal axes, the \Preal\Q axis and the \Pimaginary\Q
  axis. (See <hlink|Figure 2.20|#fig2.20>.) From this point of view, the
  complex number <math|z=x+iy> (where <math|i<rsup|2>=<with|mode|text|\<minus\>1>>)
  can be thought of as the point in the plane whose real coordinate is
  <math|x> and whose imaginary coordinate is <math|y>. Addition of complex
  numbers reduces in this representation to addition of coordinates:

  <\eqnarray*>
    <tformat|<table|<row|<cell|<text|Real-part><around*|(|z<rsub|1>+z<rsub|2>|)>>|<cell|=>|<cell|<text|Real-part><around*|(|z<rsub|1>|)>+<text|Real-part><around*|(|z<rsub|2>|)>,>>|<row|<cell|<text|Imaginary-part><around*|(|z<rsub|1>+z<rsub|2>|)>>|<cell|=>|<cell|<text|Imaginary-part><around*|(|z<rsub|1>|)>+<text|Imaginary-part><around*|(|z<rsub|2>|)>.>>>>
  </eqnarray*>

  When multiplying complex numbers, it is more natural to think in terms of
  representing a complex number in polar form, as a magnitude and an angle
  (<math|r> and <math|A> in <hlink|Figure 2.20|#Figure-2_002e20>). The
  product of two complex numbers is the vector obtained by stretching one
  complex number by the length of the other and then rotating it through the
  angle of the other:

  <\eqnarray*>
    <tformat|<table|<row|<cell|<with|mode|text|Magnitude><around*|(|z<rsub|1>\<cdot\>z<rsub|2>|)>>|<cell|=>|<cell|<with|mode|text|Magnitude><around*|(|z<rsub|1>|)>\<cdot\><with|mode|text|Magnitude><around*|(|z<rsub|2>|)>,>>|<row|<cell|<with|mode|text|Angle><around*|(|z<rsub|1>\<cdot\>z<rsub|2>|)>>|<cell|=>|<cell|<with|mode|text|Angle><around*|(|z<rsub|1>|)>+<with|mode|text|Angle><around*|(|z<rsub|2>|)>.>>>>
  </eqnarray*>

  Thus, there are two different representations for complex numbers, which
  are appropriate for different operations. Yet, from the viewpoint of
  someone writing a program that uses complex numbers, the principle of data
  abstraction suggests that all the operations for manipulating complex
  numbers should be available regardless of which representation is used by
  the computer. For example, it is often useful to be able to find the
  magnitude of a complex number that is specified by rectangular coordinates.
  Similarly, it is often useful to be able to determine the real part of a
  complex number that is specified by polar coordinates.

  <\big-figure|<image|<tuple|<#89504E470D0A1A0A0000000D4948445200000152000000B908060000007A21B71A0000000473424954080808087C086488000000097048597300000B1300000B1301009A9C180000073449444154789CEDDDDB729B30144051B993FFFF65F7898662840181D091D69AE9A44E7C8FD991044E52BADF7BF6AFA6DAB707703B6103BAF4E7E93B0010DDCF83B7BD6784FACA9C37F7F9DCE573E73D7AFDAFD9E7E6E7792560584F8634A5CFD06D856F19B777E66B5B913D72FD6B9701F810656A3F8D04D7E279D7F56F9D7762DD170813D269A4B98CE77C145932C5CE5DFFB7CBCCEF0330A8A7A7F67B6C8DFAAE589F3C33AA9CAF950283AB35229DAF6BBE573E9F3B9DD2E7A87379BEF7E2DFD6F5955CFF1AA351A09B103CB183C8DE7A20A514678D74CD72C753CDA899D603FF441F517D3BC4E9CEDB8BFEDC0100000000000CCFDE73E071910F7F0268829002148A7C2CA4633A8126189102141252804251A7C4B5DF1A0A9065440A504848010A450EE96BF1D1C1F9C0232286543081A6440C294053A28634F7D74401AA8B16D26FD37AD37EA0BA682105688E9002148A14D269DA9E5B0F751814F08848210568929002148A16D26F873999DE031C2498C0E3A28D48019A23A400858414A09090021412528042420A504848010A0929402121052824A400858414A09090021412528042420A504848010A0929402121052824A400858414A090900214125280EF727F68F39D9290029CF52FAE420AF0DD6BEB8B420AB0ED9D3EA7F6EF348BAB90027C371F917E44554801CEB1460A70C214CF5732B507386D73C75344B963BB80B6ADEDC0E121BE11C0E34CED81AB0C3BB0F979FA0E004596F1BA6AFD6EBE5365FEFFABAF3B77FACA75C8E9FABE3D8EF97379E8F6851462DBB3C16F8D1473979FC2737544B76EEB9B338F637ED9ADF3CCBF7E78642DA4D096AB4763E982EBFB16A0DCE9161EC79E1F04EFC5C7C3B723A4D086F7CAFFAF9E4AAFB932B2477E08AC9DEFC8D47BCFF51D5174F916437AF77A0944B1E7B5BFE73C67B79FBD53EE5A4A1EC7AD5ADC6B5FF2A0B7A6194EB77D7A795CE19ED3B5EE5B8DD367DC15B96FCFF51D5E8B8FB5151DD7DAEA486FB9F0BB35D46FF531C011B98DF8E8CEA4A8DB43E86DB9D53BBEF78511FAC98774EFBA1F95B438B587112CA792FFFD128C344E445B5A83ED52E97165D0A2F7E2DFDAD709A6C5BDF62999B2D39FBDEF40F2BA0FA8D5907A31D18BBBDEC249435A0BA991283D589B9E7B5D77ACB5907AB111D91501359808A8B5904244578E404534202185F3AC7F92521252384340F98F90C27E35026A8D34202185EF6A8E4045342021853C5378761152F824A01C22A4F0AB85805A230D4848A18D80B670DB9C24A48CACA580129890322201E55242CA28A2FC22116BA4010929BD8B12D049CBF78D0C21A557D1024A60424A6FAC7F529D90D28B5E026A8D34202125BA5E023A897EFF8724A444D55B40094C48894640698E9012C52801B5461A9090D2BA51023AE9FDF175494869D56801253021A535024A3842CA9A699D6E8ADADD31F32EA45FD648031252726A6CD002FA69F4C71F9290B25463142AA0744548A9C9FA275D1252D65C1D3801DDCF1A694042CA9D04F438CF514042CAD2151BB280321421E54A02CA9084942B08E875AC910624A49410D0EB790E031252CE10509811528E10505821A4EC21A0F558230D4848C9F136CE67788E0312529604140E125226020A270929D63FDB628D3420211D9780B6C9F72120211D8F80C2C584741C020A3711D2FE09682CD6480312D27E09684CBE4F0109697F04142A13D27E08283C4448E313D0BE58230D484863F22EA47EF93E0624A4B10828344848631050689890B6CDFAE778AC910624A46D12D071F95E0724A46D1150084848DB20A01098903E4B4059B2461A90903E4340C9F15A08E8CFD3776030EFB47E28D3DAE780208C48EBD81A81BE671F8D46202023D27B2D47A0AFF4194BF164CEEC24A0E81B71ABA3B8336BA0D3655A7C3CC086E81B6D4B21BDE26D9C620A0159232DE77DF030386BA4E7ADED815F5B033D62BAAC75B271F9DE0764447A9C6340B993D7534042BA9F8002AB84F4BBB3016D69471870236BA4797B8E01DDBAEC59E23B366BA40119917E2A9DC2976E0836A4B1F9411A9090FEBA720DF4B5727D40A784F4DA802ED745AD93C200460EE95D7BE18D4429E1876F402386F4CE80AEFD56A7A3D791920D6964BEF7018D12D2BBDFC669144A6BFC50AEA8F790D67C1F7CE9F57AE17387E5217CDC20FA139B5B4F8AF68B44BCD8995CBD469A9B2D799D5D28FA93F96D5D32C2E313516AAA15D63B0633CDEE88EB656A1F31A0298928F5E5061E77BC1687F96D663D84B4871845BDDFC4562BAADDBF41E527F5F500A33E96A8F79BFE5DB11374CF5FCECD8D5E430C327E52903B9AD1EC9A090472D7BAE99191ED7C5B0EB724D0C3D41E38AEC64EA7DC947E6B941B72194048610C4F1D06358571EFEC717EBE30411552E8572BC7902E63BA36EA0C13CD35D1D717AD91C2BA2777DAE4D646E753FABD3B9BD6BE669BBF58E89F623033FF8B0C6B7FA19686F95323D006A3AEC08414DA23A2C10829402121857618890625A4F0BCE5CE253B9AA8CA0B0E789C1129402121052824A400858414A09090021412528042420A504848010A0929402121052824A40085FE02E0B883BD6C09749E0000000049454E44AE426082>|png>|200pt|||>>
    <label|fig2.20>Complex numbers as points in the plane.
  </big-figure>

  To design such a system, we can follow the same data-abstraction strategy
  we followed in designing the rational-number package in
  <hlink|2.1.1|#2.1.1>. Assume that the operations on complex numbers are
  implemented in terms of four selectors: <code*|real-part>,
  <code*|imag-part>, <code*|magnitude>, and <code*|angle>. Also assume that
  we have two procedures for constructing complex numbers:
  <code*|make-from-real-imag> returns a complex number with specified real
  and imaginary parts, and <code*|make-from-mag-ang> returns a complex number
  with specified magnitude and angle. These procedures have the property
  that, for any complex number <code*|z>, both

  <\scm-code>
    (make-from-real-imag (real-part z) (imag-part z))
  </scm-code>

  and

  <\scm-code>
    (make-from-mag-ang (magnitude z) (angle z))
  </scm-code>

  produce complex numbers that are equal to <code*|z>.

  Using these constructors and selectors, we can implement arithmetic on
  complex numbers using the \Pabstract data\Q specified by the constructors
  and selectors, just as we did for rational numbers in <hlink|2.1.1|#2.1.1>.
  As shown in the formulas above, we can add and subtract complex numbers in
  terms of real and imaginary parts while multiplying and dividing complex
  numbers in terms of magnitudes and angles:

  <\scm-code>
    (define (add-complex z1 z2)

    \ \ (make-from-real-imag (+ (real-part z1) (real-part z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (imag-part z1)
    (imag-part z2))))

    (define (sub-complex z1 z2)

    \ \ (make-from-real-imag (- (real-part z1) (real-part z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (- (imag-part z1)
    (imag-part z2))))

    (define (mul-complex z1 z2)

    \ \ (make-from-mag-ang (* (magnitude z1) (magnitude z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (angle z1) (angle z2))))

    (define (div-complex z1 z2)

    \ \ (make-from-mag-ang (/ (magnitude z1) (magnitude z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (- (angle z1) (angle z2))))
  </scm-code>

  To complete the complex-number package, we must choose a representation and
  we must implement the constructors and selectors in terms of primitive
  numbers and primitive list structure. There are two obvious ways to do
  this: We can represent a complex number in \Prectangular form\Q as a pair
  (real part, imaginary part) or in \Ppolar form\Q as a pair (magnitude,
  angle). Which shall we choose?

  In order to make the different choices concrete, imagine that there are two
  programmers, Ben Bitdiddle and Alyssa P. Hacker, who are independently
  designing representations for the complex-number system. Ben chooses to
  represent complex numbers in rectangular form. With this choice, selecting
  the real and imaginary parts of a complex number is straightforward, as is
  constructing a complex number with given real and imaginary parts. To find
  the magnitude and the angle, or to construct a complex number with a given
  magnitude and angle, he uses the trigonometric relations

  <\eqnarray*>
    <tformat|<table|<row|<cell|x>|<cell|=>|<cell|r*cos
    A,>>|<row|<cell|y>|<cell|=>|<cell|r sin
    A,>>|<row|<cell|r>|<cell|=>|<cell|<sqrt|x<rsup|2>+y<rsup|2>>,>>|<row|<cell|A>|<cell|=>|<cell|arctan<around*|(|y,x|)>,>>>>
  </eqnarray*>

  which relate the real and imaginary parts <math|<around*|(|x,y|)>> to the
  magnitude and the angle <math|<around*|(|r,A|)>>.<\footnote>
    The arctangent function referred to here, computed by Scheme's
    <code*|atan> procedure, is defined so as to take two arguments <math|y>
    and <math|x> and to return the angle whose tangent is
    <math|y<around*|/|x|\<nobracket\>>>. The signs of the arguments determine
    the quadrant of the angle.
  </footnote> Ben's representation is therefore given by the following
  selectors and constructors:

  <\scm-code>
    (define (real-part z) (car z))

    (define (imag-part z) (cdr z))

    (define (magnitude z)

    \ \ (sqrt (+ (square (real-part z)) (square (imag-part z)))))

    (define (angle z)

    \ \ (atan (imag-part z) (real-part z)))

    (define (make-from-real-imag x y) (cons x y))

    (define (make-from-mag-ang r a)\ 

    \ \ (cons (* r (cos a)) (* r (sin a))))
  </scm-code>

  Alyssa, in contrast, chooses to represent complex numbers in polar form.
  For her, selecting the magnitude and angle is straightforward, but she has
  to use the trigonometric relations to obtain the real and imaginary parts.
  Alyssa's representation is:

  <\scm-code>
    (define (real-part z)

    \ \ (* (magnitude z) (cos (angle z))))

    (define (imag-part z)

    \ \ (* (magnitude z) (sin (angle z))))

    (define (magnitude z) (car z))

    (define (angle z) (cdr z))

    (define (make-from-real-imag x y)\ 

    \ \ (cons (sqrt (+ (square x) (square y)))

    \ \ \ \ \ \ \ \ (atan y x)))

    (define (make-from-mag-ang r a) (cons r a))
  </scm-code>

  The discipline of data abstraction ensures that the same implementation of
  <code*|add-complex>, <code*|sub-complex>, <code*|mul-complex>, and
  <code*|div-complex> will work with either Ben's representation or Alyssa's
  representation.

  <subsection|Tagged data>

  One way to view data abstraction is as an application of the \Pprinciple of
  least commitment.\Q In implementing the complex-number system in
  <hlink|2.4.1|#2.4.1>, we can use either Ben's rectangular representation or
  Alyssa's polar representation. The abstraction barrier formed by the
  selectors and constructors permits us to defer to the last possible moment
  the choice of a concrete representation for our data objects and thus
  retain maximum flexibility in our system design.

  The principle of least commitment can be carried to even further extremes.
  If we desire, we can maintain the ambiguity of representation even
  <em|after> we have designed the selectors and constructors, and elect to
  use both Ben's representation <em|and> Alyssa's representation. If both
  representations are included in a single system, however, we will need some
  way to distinguish data in polar form from data in rectangular form.
  Otherwise, if we were asked, for instance, to find the <code*|magnitude> of
  the pair (3, 4), we wouldn't know whether to answer 5 (interpreting the
  number in rectangular form) or 3 (interpreting the number in polar form). A
  straightforward way to accomplish this distinction is to include a <em|type
  tag><index|type tag>\Vthe symbol <code*|rectangular> or <code*|polar>\Vas
  part of each complex number. Then when we need to manipulate a complex
  number we can use the tag to decide which selector to apply.

  In order to manipulate tagged data, we will assume that we have procedures
  <code*|type-tag> and <code*|contents> that extract from a data object the
  tag and the actual contents (the polar or rectangular coordinates, in the
  case of a complex number). We will also postulate a procedure
  <code*|attach-tag> that takes a tag and contents and produces a tagged data
  object. A straightforward way to implement this is to use ordinary list
  structure:

  <\scm-code>
    (define (attach-tag type-tag contents)

    \ \ (cons type-tag contents))

    (define (type-tag datum)

    \ \ (if (pair? datum)

    \ \ \ \ \ \ (car datum)

    \ \ \ \ \ \ (error "Bad tagged datum -- TYPE-TAG" datum)))

    (define (contents datum)

    \ \ (if (pair? datum)

    \ \ \ \ \ \ (cdr datum)

    \ \ \ \ \ \ (error "Bad tagged datum -- CONTENTS" datum)))
  </scm-code>

  Using these procedures, we can define predicates <code*|rectangular?> and
  <code*|polar?>, which recognize rectangular and polar numbers,
  respectively:

  <\scm-code>
    (define (rectangular? z)

    \ \ (eq? (type-tag z) 'rectangular))

    (define (polar? z)

    \ \ (eq? (type-tag z) 'polar))
  </scm-code>

  With type tags, Ben and Alyssa can now modify their code so that their two
  different representations can coexist in the same system. Whenever Ben
  constructs a complex number, he tags it as rectangular. Whenever Alyssa
  constructs a complex number, she tags it as polar. In addition, Ben and
  Alyssa must make sure that the names of their procedures do not conflict.
  One way to do this is for Ben to append the suffix <code*|rectangular> to
  the name of each of his representation procedures and for Alyssa to append
  <code*|polar> to the names of hers. Here is Ben's revised rectangular
  representation from <hlink|2.4.1|#2.4.1>:

  <\scm-code>
    (define (real-part-rectangular z) (car z))

    (define (imag-part-rectangular z) (cdr z))

    (define (magnitude-rectangular z)

    \ \ (sqrt (+ (square (real-part-rectangular z))

    \ \ \ \ \ \ \ \ \ \ \ (square (imag-part-rectangular z)))))

    (define (angle-rectangular z)

    \ \ (atan (imag-part-rectangular z)

    \ \ \ \ \ \ \ \ (real-part-rectangular z)))

    (define (make-from-real-imag-rectangular x y)

    \ \ (attach-tag 'rectangular (cons x y)))

    (define (make-from-mag-ang-rectangular r a)\ 

    \ \ (attach-tag 'rectangular

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (* r (cos a)) (* r (sin a)))))
  </scm-code>

  and here is Alyssa's revised polar representation:

  <\scm-code>
    (define (real-part-polar z)

    \ \ (* (magnitude-polar z) (cos (angle-polar z))))

    (define (imag-part-polar z)

    \ \ (* (magnitude-polar z) (sin (angle-polar z))))

    (define (magnitude-polar z) (car z))

    (define (angle-polar z) (cdr z))

    (define (make-from-real-imag-polar x y)\ 

    \ \ (attach-tag 'polar

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cons (sqrt (+ (square x) (square y)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (atan y x))))

    (define (make-from-mag-ang-polar r a)

    \ \ (attach-tag 'polar (cons r a)))
  </scm-code>

  Each generic selector is implemented as a procedure that checks the tag of
  its argument and calls the appropriate procedure for handling data of that
  type. For example, to obtain the real part of a complex number,
  <code*|real-part> examines the tag to determine whether to use Ben's
  <code*|real-part-rectangular> or Alyssa's <code*|real-part-polar>. In
  either case, we use <code*|contents> to extract the bare, untagged datum
  and send this to the rectangular or polar procedure as required:

  <\scm-code>
    (define (real-part z)

    \ \ (cond ((rectangular? z)\ 

    \ \ \ \ \ \ \ \ \ (real-part-rectangular (contents z)))

    \ \ \ \ \ \ \ \ ((polar? z)

    \ \ \ \ \ \ \ \ \ (real-part-polar (contents z)))

    \ \ \ \ \ \ \ \ (else (error "Unknown type -- REAL-PART" z))))

    (define (imag-part z)

    \ \ (cond ((rectangular? z)

    \ \ \ \ \ \ \ \ \ (imag-part-rectangular (contents z)))

    \ \ \ \ \ \ \ \ ((polar? z)

    \ \ \ \ \ \ \ \ \ (imag-part-polar (contents z)))

    \ \ \ \ \ \ \ \ (else (error "Unknown type -- IMAG-PART" z))))

    (define (magnitude z)

    \ \ (cond ((rectangular? z)

    \ \ \ \ \ \ \ \ \ (magnitude-rectangular (contents z)))

    \ \ \ \ \ \ \ \ ((polar? z)

    \ \ \ \ \ \ \ \ \ (magnitude-polar (contents z)))

    \ \ \ \ \ \ \ \ (else (error "Unknown type -- MAGNITUDE" z))))

    (define (angle z)

    \ \ (cond ((rectangular? z)

    \ \ \ \ \ \ \ \ \ (angle-rectangular (contents z)))

    \ \ \ \ \ \ \ \ ((polar? z)

    \ \ \ \ \ \ \ \ \ (angle-polar (contents z)))

    \ \ \ \ \ \ \ \ (else (error "Unknown type -- ANGLE" z))))
  </scm-code>

  To implement the complex-number arithmetic operations, we can use the same
  procedures <code*|add-complex>, <code*|sub-complex>, <code*|mul-complex>,
  and <code*|div-complex> from <hlink|2.4.1|#2.4.1>, because the selectors
  they call are generic, and so will work with either representation. For
  example, the procedure <code*|add-complex> is still

  <\scm-code>
    (define (add-complex z1 z2)

    \ \ (make-from-real-imag (+ (real-part z1) (real-part z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (imag-part z1)
    (imag-part z2))))
  </scm-code>

  Finally, we must choose whether to construct complex numbers using Ben's
  representation or Alyssa's representation. One reasonable choice is to
  construct rectangular numbers whenever we have real and imaginary parts and
  to construct polar numbers whenever we have magnitudes and angles:

  <\scm-code>
    (define (make-from-real-imag x y)

    \ \ (make-from-real-imag-rectangular x y))

    (define (make-from-mag-ang r a)

    \ \ (make-from-mag-ang-polar r a))
  </scm-code>

  <\big-figure|<image|<tuple||png>|0.618par|||>>
    <label|fig2.21>Structure of the generic complex-arithmetic system.
  </big-figure>

  The resulting complex-number system has the structure shown in
  <hlink|Figure 2.21|#fig2.21>. The system has been decomposed into three
  relatively independent parts: the complex-number-arithmetic operations,
  Alyssa's polar implementation, and Ben's rectangular implementation. The
  polar and rectangular implementations could have been written by Ben and
  Alyssa working separately, and both of these can be used as underlying
  representations by a third programmer implementing the complex-arithmetic
  procedures in terms of the abstract constructor/selector interface.

  Since each data object is tagged with its type, the selectors operate on
  the data in a generic manner. That is, each selector is defined to have a
  behavior that depends upon the particular type of data it is applied to.
  Notice the general mechanism for interfacing the separate representations:
  Within a given representation implementation (say, Alyssa's polar package)
  a complex number is an untyped pair (magnitude, angle). When a generic
  selector operates on a number of <code*|polar> type, it strips off the tag
  and passes the contents on to Alyssa's code. Conversely, when Alyssa
  constructs a number for general use, she tags it with a type so that it can
  be appropriately recognized by the higher-level procedures. This discipline
  of stripping off and attaching tags as data objects are passed from level
  to level can be an important organizational strategy, as we shall see in
  <hlink|2.5|#2.5>.

  <subsection|Data-Directed Programming and Additivity>

  The general strategy of checking the type of a datum and calling an
  appropriate procedure is called <em|dispatching on type><index|dispatching
  on type>. This is a powerful strategy for obtaining modularity in system
  design. On the other hand, implementing the dispatch as in
  <hlink|2.4.2|#g_t2_002e4_002e2> has two significant weaknesses. One
  weakness is that the generic interface procedures (<code*|real-part>,
  <code*|imag-part>, <code*|magnitude>, and <code*|angle>) must know about
  all the different representations. For instance, suppose we wanted to
  incorporate a new representation for complex numbers into our
  complex-number system. We would need to identify this new representation
  with a type, and then add a clause to each of the generic interface
  procedures to check for the new type and apply the appropriate selector for
  that representation.

  Another weakness of the technique is that even though the individual
  representations can be designed separately, we must guarantee that no two
  procedures in the entire system have the same name. This is why Ben and
  Alyssa had to change the names of their original procedures from
  <hlink|2.4.1|#2.4.1>.

  The issue underlying both of these weaknesses is that the technique for
  implementing generic interfaces is not <em|additive><index|additive>. The
  person implementing the generic selector procedures must modify those
  procedures each time a new representation is installed, and the people
  interfacing the individual representations must modify their code to avoid
  name conflicts. In each of these cases, the changes that must be made to
  the code are straightforward, but they must be made nonetheless, and this
  is a source of inconvenience and error. This is not much of a problem for
  the complex-number system as it stands, but suppose there were not two but
  hundreds of different representations for complex numbers. And suppose that
  there were many generic selectors to be maintained in the abstract-data
  interface. Suppose, in fact, that no one programmer knew all the interface
  procedures or all the representations. The problem is real and must be
  addressed in such programs as large-scale data-base-management systems.

  What we need is a means for modularizing the system design even further.
  This is provided by the programming technique known as <em|data-directed
  programming><index|data directed programming>. To understand how
  data-directed programming works, begin with the observation that whenever
  we deal with a set of generic operations that are common to a set of
  different types we are, in effect, dealing with a two-dimensional table
  that contains the possible operations on one axis and the possible types on
  the other axis. The entries in the table are the procedures that implement
  each operation for each type of argument presented. In the complex-number
  system developed in the previous section, the correspondence between
  operation name, data type, and actual procedure was spread out among the
  various conditional clauses in the generic interface procedures. But the
  same information could have been organized in a table, as shown in
  <hlink|Figure 2.22|#fig2.22>.

  <\big-figure|<tabular|<tformat|<cwith|2|2|2|2|cell-halign|c>|<cwith|1|1|2|2|cell-row-span|1>|<cwith|1|1|2|2|cell-col-span|2>|<cwith|1|1|2|2|cell-valign|c>|<cwith|1|1|2|2|cell-halign|c>|<cwith|6|6|2|2|cell-bborder|0ln>|<cwith|2|-1|2|2|cell-lborder|1ln>|<cwith|2|-1|1|1|cell-rborder|1ln>|<cwith|6|6|3|3|cell-bborder|0ln>|<cwith|2|-1|3|3|cell-lborder|1ln>|<cwith|2|-1|2|2|cell-rborder|1ln>|<cwith|2|-1|3|3|cell-rborder|1ln>|<cwith|2|2|3|3|cell-lborder|1ln>|<cwith|2|2|2|2|cell-rborder|1ln>|<cwith|2|2|2|-1|cell-tborder|0ln>|<cwith|1|1|2|-1|cell-bborder|0ln>|<cwith|2|2|2|-1|cell-bborder|1ln>|<cwith|3|3|2|-1|cell-tborder|1ln>|<cwith|2|2|2|2|cell-lborder|0ln>|<cwith|2|2|1|1|cell-rborder|0ln>|<cwith|2|2|3|3|cell-rborder|0ln>|<table|<row|<cell|>|<cell|Types>|<cell|>>|<row|<cell|>|<cell|Polar<htab|5mm>>|<cell|Rectangular>>|<row|<cell|real-part>|<cell|real-part-polar>|<cell|real-part-rectangular>>|<row|<cell|imag-part>|<cell|imag-part-polar>|<cell|imag-part-rectangular>>|<row|<cell|magnitude>|<cell|magnitude-polar>|<cell|magnitude-rectangular>>|<row|<cell|angle>|<cell|angle-polar>|<cell|angle-rectangular>>>>>>
    <label|fig2.22>Table of operations for the complex-number system.
  </big-figure>

  Data-directed programming is the technique of designing programs to work
  with such a table directly. Previously, we implemented the mechanism that
  interfaces the complex-arithmetic code with the two representation packages
  as a set of procedures that each perform an explicit dispatch on type. Here
  we will implement the interface as a single procedure that looks up the
  combination of the operation name and argument type in the table to find
  the correct procedure to apply, and then applies it to the contents of the
  argument. If we do this, then to add a new representation package to the
  system we need not change any existing procedures; we need only add new
  entries to the table.

  To implement this plan, assume that we have two procedures, <code*|put> and
  <code*|get>, for manipulating the operation-and-type table:

  <\itemize>
    <item><code*|(put \<langle\><var|op>\<rangle\>
    \<langle\><var|type>\<rangle\> \<langle\><var|item>\<rangle\>)> installs
    the <code*|\<langle\>><var|item><code*|\<rangle\>> in the table, indexed
    by the <code*|\<langle\>><var|op><code*|\<rangle\>> and the
    <code*|\<langle\>><var|type><code*|\<rangle\>>.

    <item><code*|(get \<langle\><var|op>\<rangle\>
    \<langle\><var|type>\<rangle\>)> looks up the
    <code*|\<langle\>><var|op><code*|\<rangle\>>,
    <code*|\<langle\>><var|type><code*|\<rangle\>> entry in the table and
    returns the item found there. If no item is found, <code*|get> returns
    false.
  </itemize>

  For now, we can assume that <code*|put> and <code*|get> are included in our
  language. In <hlink|Chapter 3|Chapter-3.xhtml#Chapter-3>
  (<hlink|3.3.3|#3.3.3>) we will see how to implement these and other
  operations for manipulating tables.

  Here is how data-directed programming can be used in the complex-number
  system. Ben, who developed the rectangular representation, implements his
  code just as he did originally. He defines a collection of procedures, or a
  <em|package><index|package>, and interfaces these to the rest of the system
  by adding entries to the table that tell the system how to operate on
  rectangular numbers. This is accomplished by calling the following
  procedure:

  <\scm-code>
    (define (install-rectangular-package)

    \ \ ;; internal procedures

    \ \ (define (real-part z) (car z))

    \ \ (define (imag-part z) (cdr z))

    \ \ (define (make-from-real-imag x y) (cons x y))

    \ \ (define (magnitude z)

    \ \ \ \ (sqrt (+ (square (real-part z))

    \ \ \ \ \ \ \ \ \ \ \ \ \ (square (imag-part z)))))

    \ \ (define (angle z)

    \ \ \ \ (atan (imag-part z) (real-part z)))

    \ \ (define (make-from-mag-ang r a)\ 

    \ \ \ \ (cons (* r (cos a)) (* r (sin a))))

    \ \ ;; interface to the rest of the system

    \ \ (define (tag x) (attach-tag 'rectangular x))

    \ \ (put 'real-part '(rectangular) real-part)

    \ \ (put 'imag-part '(rectangular) imag-part)

    \ \ (put 'magnitude '(rectangular) magnitude)

    \ \ (put 'angle '(rectangular) angle)

    \ \ (put 'make-from-real-imag 'rectangular\ 

    \ \ \ \ \ \ \ (lambda (x y) (tag (make-from-real-imag x y))))

    \ \ (put 'make-from-mag-ang 'rectangular\ 

    \ \ \ \ \ \ \ (lambda (r a) (tag (make-from-mag-ang r a))))

    \ \ 'done)
  </scm-code>

  Notice that the internal procedures here are the same procedures from
  <hlink|2.4.1|#2.4.1> that Ben wrote when he was working in isolation. No
  changes are necessary in order to interface them to the rest of the system.
  Moreover, since these procedure definitions are internal to the
  installation procedure, Ben needn't worry about name conflicts with other
  procedures outside the rectangular package. To interface these to the rest
  of the system, Ben installs his <code*|real-part> procedure under the
  operation name <code*|real-part> and the type <code*|(rectangular)>, and
  similarly for the other selectors.<\footnote>
    We use the list <code*|(rectangular)> rather than the symbol
    <code*|rectangular> to allow for the possibility of operations with
    multiple arguments, not all of the same type.
  </footnote> The interface also defines the constructors to be used by the
  external system.<\footnote>
    The type the constructors are installed under needn't be a list because a
    constructor is always used to make an object of one particular type.
  </footnote> These are identical to Ben's internally defined constructors,
  except that they attach the tag.

  Alyssa's polar package is analogous:

  <\scm-code>
    (define (install-polar-package)

    \ \ ;; internal procedures

    \ \ (define (magnitude z) (car z))

    \ \ (define (angle z) (cdr z))

    \ \ (define (make-from-mag-ang r a) (cons r a))

    \ \ (define (real-part z)

    \ \ \ \ (* (magnitude z) (cos (angle z))))

    \ \ (define (imag-part z)

    \ \ \ \ (* (magnitude z) (sin (angle z))))

    \ \ (define (make-from-real-imag x y)\ 

    \ \ \ \ (cons (sqrt (+ (square x) (square y)))

    \ \ \ \ \ \ \ \ \ \ (atan y x)))

    \ \ ;; interface to the rest of the system

    \ \ (define (tag x) (attach-tag 'polar x))

    \ \ (put 'real-part '(polar) real-part)

    \ \ (put 'imag-part '(polar) imag-part)

    \ \ (put 'magnitude '(polar) magnitude)

    \ \ (put 'angle '(polar) angle)

    \ \ (put 'make-from-real-imag 'polar

    \ \ \ \ \ \ \ (lambda (x y) (tag (make-from-real-imag x y))))

    \ \ (put 'make-from-mag-ang 'polar\ 

    \ \ \ \ \ \ \ (lambda (r a) (tag (make-from-mag-ang r a))))

    \ \ 'done)
  </scm-code>

  Even though Ben and Alyssa both still use their original procedures defined
  with the same names as each other's (e.g., <code*|real-part>), these
  definitions are now internal to different procedures (see
  <hlink|1.1.8|1_002e1.xhtml#g_t1_002e1_002e8>), so there is no name
  conflict.

  The complex-arithmetic selectors access the table by means of a general
  \Poperation\Q procedure called <code*|apply-generic>, which applies a
  generic operation to some arguments. <code*|Apply-generic> looks in the
  table under the name of the operation and the types of the arguments and
  applies the resulting procedure if one is present:<\footnote>
    <code*|Apply-generic> uses the dotted-tail notation described in
    <hlink|Exercise 2.20|2_002e2.xhtml#Exercise-2_002e20>, because different
    generic operations may take different numbers of arguments. In
    <code*|apply-generic>, <code*|op> has as its value the first argument to
    <code*|apply-generic> and <code*|args> has as its value a list of the
    remaining arguments.

    <code*|Apply-generic> also uses the primitive procedure <code*|apply>,
    which takes two arguments, a procedure and a list. <code*|Apply> applies
    the procedure, using the elements in the list as arguments. For example,

    <code|(apply + (list 1 2 3 4))>

    returns 10.
  </footnote>

  <\scm-code>
    (define (apply-generic op . args)

    \ \ (let ((type-tags (map type-tag args)))

    \ \ \ \ (let ((proc (get op type-tags)))

    \ \ \ \ \ \ (if proc

    \ \ \ \ \ \ \ \ \ \ (apply proc (map contents args))

    \ \ \ \ \ \ \ \ \ \ (error

    \ \ \ \ \ \ \ \ \ \ \ \ "No method for these types -- APPLY-GENERIC"

    \ \ \ \ \ \ \ \ \ \ \ \ (list op type-tags))))))
  </scm-code>

  Using <code*|apply-generic>, we can define our generic selectors as
  follows:

  <\scm-code>
    (define (real-part z) (apply-generic 'real-part z))

    (define (imag-part z) (apply-generic 'imag-part z))

    (define (magnitude z) (apply-generic 'magnitude z))

    (define (angle z) (apply-generic 'angle z))
  </scm-code>

  Observe that these do not change at all if a new representation is added to
  the system.

  We can also extract from the table the constructors to be used by the
  programs external to the packages in making complex numbers from real and
  imaginary parts and from magnitudes and angles. As in <hlink|2.4.2|#2.4.2>,
  we construct rectangular numbers whenever we have real and imaginary parts,
  and polar numbers whenever we have magnitudes and angles:

  <\scm-code>
    (define (make-from-real-imag x y)

    \ \ ((get 'make-from-real-imag 'rectangular) x y))

    (define (make-from-mag-ang r a)

    \ \ ((get 'make-from-mag-ang 'polar) r a))
  </scm-code>

  <\exercise>
    <hlink|2.3.2|#2.3.2> described a program that performs symbolic
    differentiation:

    <\scm-code>
      (define (deriv exp var)

      \ \ (cond ((number? exp) 0)

      \ \ \ \ \ \ \ \ ((variable? exp) (if (same-variable? exp var) 1 0))

      \ \ \ \ \ \ \ \ ((sum? exp)

      \ \ \ \ \ \ \ \ \ (make-sum (deriv (addend exp) var)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (deriv (augend exp) var)))

      \ \ \ \ \ \ \ \ ((product? exp)

      \ \ \ \ \ \ \ \ \ (make-sum

      \ \ \ \ \ \ \ \ \ \ \ (make-product (multiplier exp)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (deriv (multiplicand
      exp) var))

      \ \ \ \ \ \ \ \ \ \ \ (make-product (deriv (multiplier exp) var)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (multiplicand exp))))

      \ \ \ \ \ \ \ \ \<less\>more rules can be added here\<gtr\>

      \ \ \ \ \ \ \ \ (else (error "unknown expression type -- DERIV" exp))))
    </scm-code>

    We can regard this program as performing a dispatch on the type of the
    expression to be differentiated. In this situation the \Ptype tag\Q of
    the datum is the algebraic operator symbol (such as <code*|+>) and the
    operation being performed is <code*|deriv>. We can transform this program
    into data-directed style by rewriting the basic derivative procedure as

    <\scm-code>
      (define (deriv exp var)

      \ \ \ (cond ((number? exp) 0)

      \ \ \ \ \ \ \ \ \ ((variable? exp) (if (same-variable? exp var) 1 0))

      \ \ \ \ \ \ \ \ \ (else ((get 'deriv (operator exp)) (operands exp)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ var))))

      (define (operator exp) (car exp))

      (define (operands exp) (cdr exp))
    </scm-code>

    <\enumerate-alpha>
      <item>Explain what was done above. Why can't we assimilate the
      predicates <code*|number?> and <code*|variable?> into the data-directed
      dispatch?

      <item>Write the procedures for derivatives of sums and products, and
      the auxiliary code required to install them in the table used by the
      program above.

      <item>Choose any additional differentiation rule that you like, such as
      the one for exponents (<hlink|Exercise
      2.56|2_002e3.xhtml#Exercise-2_002e56>), and install it in this
      data-directed system.

      <item>In this simple algebraic manipulator the type of an expression is
      the algebraic operator that binds it together. Suppose, however, we
      indexed the procedures in the opposite way, so that the dispatch line
      in <code*|deriv> looked like

      <\scm-code>
        ((get (operator exp) 'deriv) (operands exp) var)
      </scm-code>

      What corresponding changes to the derivative system are required?
    </enumerate-alpha>
  </exercise>

  <\exercise>
    Insatiable Enterprises, Inc., is a highly decentralized conglomerate
    company consisting of a large number of independent divisions located all
    over the world. The company's computer facilities have just been
    interconnected by means of a clever network-interfacing scheme that makes
    the entire network appear to any user to be a single computer.
    Insatiable's president, in her first attempt to exploit the ability of
    the network to extract administrative information from division files, is
    dismayed to discover that, although all the division files have been
    implemented as data structures in Scheme, the particular data structure
    used varies from division to division. A meeting of division managers is
    hastily called to search for a strategy to integrate the files that will
    satisfy headquarters' needs while preserving the existing autonomy of the
    divisions.

    Show how such a strategy can be implemented with data-directed
    programming. As an example, suppose that each division's personnel
    records consist of a single file, which contains a set of records keyed
    on employees' names. The structure of the set varies from division to
    division. Furthermore, each employee's record is itself a set (structured
    differently from division to division) that contains information keyed
    under identifiers such as <code*|address> and <code*|salary>. In
    particular:

    <\enumerate-alpha>
      <item>Implement for headquarters a <code*|get-record> procedure that
      retrieves a specified employee's record from a specified personnel
      file. The procedure should be applicable to any division's file.
      Explain how the individual divisions' files should be structured. In
      particular, what type information must be supplied?

      <item>Implement for headquarters a <code*|get-salary> procedure that
      returns the salary information from a given employee's record from any
      division's personnel file. How should the record be structured in order
      to make this operation work?

      <item>Implement for headquarters a <code*|find-employee-record>
      procedure. This should search all the divisions' files for the record
      of a given employee and return the record. Assume that this procedure
      takes as arguments an employee's name and a list of all the divisions'
      files.

      <item>When Insatiable takes over a new company, what changes must be
      made in order to incorporate the new personnel information into the
      central system?
    </enumerate-alpha>
  </exercise>

  <paragraph*|Message passing>

  The key idea of data-directed programming is to handle generic operations
  in programs by dealing explicitly with operation-and-type tables, such as
  the table in <hlink|Figure 2.22|#Figure-2_002e22>. The style of programming
  we used in <hlink|2.4.2|#g_t2_002e4_002e2> organized the required
  dispatching on type by having each operation take care of its own
  dispatching. In effect, this decomposes the operation-and-type table into
  rows, with each generic operation procedure representing a row of the
  table.

  An alternative implementation strategy is to decompose the table into
  columns and, instead of using \Pintelligent operations\Q that dispatch on
  data types, to work with \Pintelligent data objects\Q that dispatch on
  operation names. We can do this by arranging things so that a data object,
  such as a rectangular number, is represented as a procedure that takes as
  input the required operation name and performs the operation indicated. In
  such a discipline, <code*|make-from-real-imag> could be written as

  <\scm-code>
    (define (make-from-real-imag x y)

    \ \ (define (dispatch op)

    \ \ \ \ (cond ((eq? op 'real-part) x)

    \ \ \ \ \ \ \ \ \ \ ((eq? op 'imag-part) y)

    \ \ \ \ \ \ \ \ \ \ ((eq? op 'magnitude)

    \ \ \ \ \ \ \ \ \ \ \ (sqrt (+ (square x) (square y))))

    \ \ \ \ \ \ \ \ \ \ ((eq? op 'angle) (atan y x))

    \ \ \ \ \ \ \ \ \ \ (else

    \ \ \ \ \ \ \ \ \ \ \ (error "Unknown op -- MAKE-FROM-REAL-IMAG" op))))

    \ \ dispatch)
  </scm-code>

  The corresponding <code*|apply-generic> procedure, which applies a generic
  operation to an argument, now simply feeds the operation's name to the data
  object and lets the object do the work:<\footnote>
    One limitation of this organization is it permits only generic procedures
    of one argument.
  </footnote>

  <\scm-code>
    (define (apply-generic op arg) (arg op))
  </scm-code>

  Note that the value returned by <code*|make-from-real-imag> is a
  procedure\Vthe internal <code*|dispatch> procedure. This is the procedure
  that is invoked when <code*|apply-generic> requests an operation to be
  performed.

  This style of programming is called <em|message passing><index|message
  passing>. The name comes from the image that a data object is an entity
  that receives the requested operation name as a \Pmessage.\Q We have
  already seen an example of message passing in <hlink|2.1.3|#2.1.3>, where
  we saw how <code*|cons>, <code*|car>, and <code*|cdr> could be defined with
  no data objects but only procedures. Here we see that message passing is
  not a mathematical trick but a useful technique for organizing systems with
  generic operations. In the remainder of this chapter we will continue to
  use data-directed programming, rather than message passing, to discuss
  generic arithmetic operations. In <hlink|Chapter
  3|Chapter-3.xhtml#Chapter-3> we will return to message passing, and we will
  see that it can be a powerful tool for structuring simulation programs.

  <\exercise>
    Implement the constructor <code*|make-from-mag-ang> in message-passing
    style. This procedure should be analogous to the
    <code*|make-from-real-imag> procedure given above.
  </exercise>

  <\exercise>
    As a large system with generic operations evolves, new types of data
    objects or new operations may be needed. For each of the three
    strategies\Vgeneric operations with explicit dispatch, data-directed
    style, and message-passing-style\Vdescribe the changes that must be made
    to a system in order to add new types or new operations. Which
    organization would be most appropriate for a system in which new types
    must often be added? Which would be most appropriate for a system in
    which new operations must often be added?
  </exercise>

  <section|Systems with Generic Operations>

  In the previous section, we saw how to design systems in which data objects
  can be represented in more than one way. The key idea is to link the code
  that specifies the data operations to the several representations by means
  of generic interface procedures. Now we will see how to use this same idea
  not only to define operations that are generic over different
  representations but also to define operations that are generic over
  different kinds of arguments. We have already seen several different
  packages of arithmetic operations: the primitive arithmetic (<code*|+>,
  <code*|->, <code*|*>, <code*|/>) built into our language, the
  rational-number arithmetic (<code*|add-rat>, <code*|sub-rat>,
  <code*|mul-rat>, <code*|div-rat>) of <hlink|2.1.1|2_002e1.xhtml#g_t2_002e1_002e1>,
  and the complex-number arithmetic that we implemented in
  <hlink|2.4.3|2_002e4.xhtml#g_t2_002e4_002e3>. We will now use data-directed
  techniques to construct a package of arithmetic operations that
  incorporates all the arithmetic packages we have already constructed.

  <hlink|Figure 2.23|#2.23> shows the structure of the system we shall build.
  Notice the abstraction barriers. From the perspective of someone using
  \Pnumbers,\Q there is a single procedure <code*|add> that operates on
  whatever numbers are supplied. <code*|Add> is part of a generic interface
  that allows the separate ordinary-arithmetic, rational-arithmetic, and
  complex-arithmetic packages to be accessed uniformly by programs that use
  numbers. Any individual arithmetic package (such as the complex package)
  may itself be accessed through generic procedures (such as
  <code*|add-complex>) that combine packages designed for different
  representations (such as rectangular and polar). Moreover, the structure of
  the system is additive, so that one can design the individual arithmetic
  packages separately and combine them to produce a generic arithmetic
  system.

  <\big-figure|<image|<tuple||png>|0.618par|||>>
    <label|fig2.23>Generic arithmetic system.
  </big-figure>

  <subsection|Generic Arithmetic Operations>

  The task of designing generic arithmetic operations is analogous to that of
  designing the generic complex-number operations. We would like, for
  instance, to have a generic addition procedure <code*|add> that acts like
  ordinary primitive addition <code*|+> on ordinary numbers, like
  <code*|add-rat> on rational numbers, and like <code*|add-complex> on
  complex numbers. We can implement <code*|add>, and the other generic
  arithmetic operations, by following the same strategy we used in
  <hlink|2.4.3|#2.4.3> to implement the generic selectors for complex
  numbers. We will attach a type tag to each kind of number and cause the
  generic procedure to dispatch to an appropriate package according to the
  data type of its arguments.

  The generic arithmetic procedures are defined as follows:

  <\scm-code>
    (define (add x y) (apply-generic 'add x y))

    (define (sub x y) (apply-generic 'sub x y))

    (define (mul x y) (apply-generic 'mul x y))

    (define (div x y) (apply-generic 'div x y))
  </scm-code>

  We begin by installing a package for handling <em|ordinary><index|ordinary>
  numbers, that is, the primitive numbers of our language. We will tag these
  with the symbol <code*|scheme-number>. The arithmetic operations in this
  package are the primitive arithmetic procedures (so there is no need to
  define extra procedures to handle the untagged numbers). Since these
  operations each take two arguments, they are installed in the table keyed
  by the list <code*|(scheme-number scheme-number)>:

  <\scm-code>
    (define (install-scheme-number-package)

    \ \ (define (tag x)

    \ \ \ \ (attach-tag 'scheme-number x)) \ \ \ 

    \ \ (put 'add '(scheme-number scheme-number)

    \ \ \ \ \ \ \ (lambda (x y) (tag (+ x y))))

    \ \ (put 'sub '(scheme-number scheme-number)

    \ \ \ \ \ \ \ (lambda (x y) (tag (- x y))))

    \ \ (put 'mul '(scheme-number scheme-number)

    \ \ \ \ \ \ \ (lambda (x y) (tag (* x y))))

    \ \ (put 'div '(scheme-number scheme-number)

    \ \ \ \ \ \ \ (lambda (x y) (tag (/ x y))))

    \ \ (put 'make 'scheme-number

    \ \ \ \ \ \ \ (lambda (x) (tag x)))

    \ \ 'done)
  </scm-code>

  Users of the Scheme-number package will create (tagged) ordinary numbers by
  means of the procedure:

  <\scm-code>
    (define (make-scheme-number n)

    \ \ ((get 'make 'scheme-number) n))
  </scm-code>

  Now that the framework of the generic arithmetic system is in place, we can
  readily include new kinds of numbers. Here is a package that performs
  rational arithmetic. Notice that, as a benefit of additivity, we can use
  without modification the rational-number code from
  <hlink|2.1.1|2_002e1.xhtml#g_t2_002e1_002e1> as the internal procedures in
  the package:

  <\scm-code>
    (define (install-rational-package)

    \ \ ;; internal procedures

    \ \ (define (numer x) (car x))

    \ \ (define (denom x) (cdr x))

    \ \ (define (make-rat n d)

    \ \ \ \ (let ((g (gcd n d)))

    \ \ \ \ \ \ (cons (/ n g) (/ d g))))

    \ \ (define (add-rat x y)

    \ \ \ \ (make-rat (+ (* (numer x) (denom y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (numer y) (denom x)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))

    \ \ (define (sub-rat x y)

    \ \ \ \ (make-rat (- (* (numer x) (denom y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (numer y) (denom x)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))

    \ \ (define (mul-rat x y)

    \ \ \ \ (make-rat (* (numer x) (numer y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (denom y))))

    \ \ (define (div-rat x y)

    \ \ \ \ (make-rat (* (numer x) (denom y))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (* (denom x) (numer y))))

    \ \ ;; interface to rest of the system

    \ \ (define (tag x) (attach-tag 'rational x))

    \ \ (put 'add '(rational rational)

    \ \ \ \ \ \ \ (lambda (x y) (tag (add-rat x y))))

    \ \ (put 'sub '(rational rational)

    \ \ \ \ \ \ \ (lambda (x y) (tag (sub-rat x y))))

    \ \ (put 'mul '(rational rational)

    \ \ \ \ \ \ \ (lambda (x y) (tag (mul-rat x y))))

    \ \ (put 'div '(rational rational)

    \ \ \ \ \ \ \ (lambda (x y) (tag (div-rat x y))))

    \;

    \ \ (put 'make 'rational

    \ \ \ \ \ \ \ (lambda (n d) (tag (make-rat n d))))

    \ \ 'done)

    (define (make-rational n d)

    \ \ ((get 'make 'rational) n d))
  </scm-code>

  We can install a similar package to handle complex numbers, using the tag
  <code*|complex>. In creating the package, we extract from the table the
  operations <code*|make-from-real-imag> and <code*|make-from-mag-ang> that
  were defined by the rectangular and polar packages. Additivity permits us
  to use, as the internal operations, the same <code*|add-complex>,
  <code*|sub-complex>, <code*|mul-complex>, and <code*|div-complex>
  procedures from <hlink|2.4.1|#2.4.1>.

  <\scm-code>
    (define (install-complex-package)

    \ \ ;; imported procedures from rectangular and polar packages

    \ \ (define (make-from-real-imag x y)

    \ \ \ \ ((get 'make-from-real-imag 'rectangular) x y))

    \ \ (define (make-from-mag-ang r a)

    \ \ \ \ ((get 'make-from-mag-ang 'polar) r a))

    \ \ ;; internal procedures

    \ \ (define (add-complex z1 z2)

    \ \ \ \ (make-from-real-imag (+ (real-part z1) (real-part z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (imag-part z1)
    (imag-part z2))))

    \ \ (define (sub-complex z1 z2)

    \ \ \ \ (make-from-real-imag (- (real-part z1) (real-part z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (- (imag-part z1)
    (imag-part z2))))

    \ \ (define (mul-complex z1 z2)

    \ \ \ \ (make-from-mag-ang (* (magnitude z1) (magnitude z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (+ (angle z1) (angle z2))))

    \ \ (define (div-complex z1 z2)

    \ \ \ \ (make-from-mag-ang (/ (magnitude z1) (magnitude z2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (- (angle z1) (angle z2))))

    \ \ ;; interface to rest of the system

    \ \ (define (tag z) (attach-tag 'complex z))

    \ \ (put 'add '(complex complex)

    \ \ \ \ \ \ \ (lambda (z1 z2) (tag (add-complex z1 z2))))

    \ \ (put 'sub '(complex complex)

    \ \ \ \ \ \ \ (lambda (z1 z2) (tag (sub-complex z1 z2))))

    \ \ (put 'mul '(complex complex)

    \ \ \ \ \ \ \ (lambda (z1 z2) (tag (mul-complex z1 z2))))

    \ \ (put 'div '(complex complex)

    \ \ \ \ \ \ \ (lambda (z1 z2) (tag (div-complex z1 z2))))

    \ \ (put 'make-from-real-imag 'complex

    \ \ \ \ \ \ \ (lambda (x y) (tag (make-from-real-imag x y))))

    \ \ (put 'make-from-mag-ang 'complex

    \ \ \ \ \ \ \ (lambda (r a) (tag (make-from-mag-ang r a))))

    \ \ 'done)
  </scm-code>

  Programs outside the complex-number package can construct complex numbers
  either from real and imaginary parts or from magnitudes and angles. Notice
  how the underlying procedures, originally defined in the rectangular and
  polar packages, are exported to the complex package, and exported from
  there to the outside world.

  <\scm-code>
    (define (make-complex-from-real-imag x y)

    \ \ ((get 'make-from-real-imag 'complex) x y))

    (define (make-complex-from-mag-ang r a)

    \ \ ((get 'make-from-mag-ang 'complex) r a))
  </scm-code>

  What we have here is a two-level tag system. A typical complex number, such
  as <math|3+4i> in rectangular form, would be represented as shown in
  <hlink|Figure 2.24|#fig2.24>. The outer tag (<code*|complex>) is used to
  direct the number to the complex package. Once within the complex package,
  the next tag (<code*|rectangular>) is used to direct the number to the
  rectangular package. In a large and complicated system there might be many
  levels, each interfaced with the next by means of generic operations. As a
  data object is passed \Pdownward,\Q the outer tag that is used to direct it
  to the appropriate package is stripped off (by applying <code*|contents>)
  and the next level of tag (if any) becomes visible to be used for further
  dispatching.

  <\big-figure|<image|<tuple|<#89504E470D0A1A0A0000000D494844520000011500000047080600000029DFD3AA0000000473424954080808087C086488000000097048597300000B1300000B1301009A9C18000003E349444154789CEDDDEDAEA3201485E13AE9FDDF72E7C7A4194200C1AE2D0B799F64723EEA41D8D02DA2638FD7FA3EB32B70D131BB0219E20889F7EC0A88440CAC4F50B9DFB21D11C77BAD5CFF6A9F3E25A900AB8A4CB85392F99FA09D02D8144905801449058014490580144905801449058094EB25E5F49295EAB2587E19CCBD5C15752C778DE38888F1BB0CD7A4927684A2834AD7D515D7F1A3CA5552C672E7388EA8C53C7F6D4454A29297EB9A5452111DB4AB562C11231FA357E29EFF8D2AE196CA7DFD5AF6BB50307ED71353E27E8E38D6DB673B937BBF4C2B965871767256C75903A2154BC737A76B1C47D54E311C63FE33D7D31FF579DEF18A494E51E52A2963B9731C4728DB528A8D35D7A41231A0BE65AA8F6EEE835F5DBFEF208F28F729EE684BD43E7E2ED735A900F82FFA80282D979BDF0048915400489154004891540048915400483DE5EACFE875FCDEED97BA3F4060A4BD51DB62714FBA37A0D72A77613A23861A2B275BFA3FB17247BA20867344C55D5A2E6B2A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A4482A00A476492AB58FD5C418E28853BB24156055AD4F288C28FBE772492A80B7E53E4C6C279FE42B9D745D1A3FE2788F3CDEAAB88794CB4C0580144905D857C8A9D54E498573532D9E537B9F74ECDAC77DA7A492B2EE1473C4EE9964C96AD7A402E01FF94182A402AC81192200B9C88FE890953D23FBEDB0581A1DD71D6238C3CAFD365AF7478DA14735A6E08EF63D3D8633ACDC6F57CA0DAB0B6B2A00A4482A00A4482A00A4482A00A4482A00A4DEB32B3049BAF2CD4D456D4EFFD7847E5BC0AE3395E3C5A05C11FDB600A7994A7EDDFCA8BC76147E97FF5DEBB5ABF5C8EBE078D41C89495EE7D2EBA587F7D4FAA5B5AFFC6FCFEE91C8B7BBD26F3DFB73E9B754AB1D338CF4C1343DCFC56C3D5DEC53F8BEB46DABCCD1BA94CA897C76E899D6BE6B75EB89635E4E6B5F67F5AAED2FAF5FE9E75A99ADDF9DD5E5EC5674D79BDF46DBAA2CF7BBDDD018709AA9A422B262CFF3545A89CC3A53676AB390DE76F5B6F5EA1BF1C8BE8F7A88736BBFEE1CEE9AFE8E8FA1BAB8AEA9A86601AD2360C9917CCDFFA565F44EE35D9CB52B377244BFB2CED1DB2FA3F17DE29ACBACF65C1EDB4E3395DA51B4B67ED19A5E8FACC794CE195BEB0B39C7594CEF1A48EBB5B45D236FFC3CB6A5A796B5A6D4A558978E983DFDD633165CA5B1775853995D8FA6BB8EEEB36611AEE7E6CE1CDAE3DA6FB3D75486B7759AA928E56B08B61976632BCD1AEED49A4DCE303C53796A5299DD1138471F95B9C565B83EAE0BB500164552012045520120455201204552012035EBEA8FC37D09AB23866B72EAB790BAFC055E87104D3A235A080000000049454E44AE426082>|png>|277pt|71pt||>>
    <label|fig2.24>Representation of 3 + 4<em|i><nbsp>in rectangular form.
  </big-figure>

  In the above packages, we used <code*|add-rat>, <code*|add-complex>, and
  the other arithmetic procedures exactly as originally written. Once these
  definitions are internal to different installation procedures, however,
  they no longer need names that are distinct from each other: we could
  simply name them <code*|add>, <code*|sub>, <code*|mul>, and <code*|div> in
  both packages.

  <\exercise>
    Louis Reasoner tries to evaluate the expression <code*|(magnitude z)>
    where <code*|z> is the object shown in <hlink|Figure 2.24|#fig2.24>. To
    his surprise, instead of the answer 5 he gets an error message from
    <code*|apply-generic>, saying there is no method for the operation
    <code*|magnitude> on the types <code*|(complex)>. He shows this
    interaction to Alyssa P. Hacker, who says \PThe problem is that the
    complex-number selectors were never defined for <code*|complex> numbers,
    just for <code*|polar> and <code*|rectangular> numbers. All you have to
    do to make this work is add the following to the <code*|complex>
    package:\Q

    <\scm-code>
      (put 'real-part '(complex) real-part)

      (put 'imag-part '(complex) imag-part)

      (put 'magnitude '(complex) magnitude)

      (put 'angle '(complex) angle)
    </scm-code>

    Describe in detail why this works. As an example, trace through all the
    procedures called in evaluating the expression <code*|(magnitude z)>
    where <code*|z> is the object shown in <hlink|Figure
    2.24|#Figure-2_002e24>. In particular, how many times is
    <code*|apply-generic> invoked? What procedure is dispatched to in each
    case?
  </exercise>

  <\exercise>
    The internal procedures in the <code*|scheme-number> package are
    essentially nothing more than calls to the primitive procedures
    <code*|+>, <code*|->, etc. It was not possible to use the primitives of
    the language directly because our type-tag system requires that each data
    object have a type attached to it. In fact, however, all Lisp
    implementations do have a type system, which they use internally.
    Primitive predicates such as <code*|symbol?> and <code*|number?>
    determine whether data objects have particular types. Modify the
    definitions of <code*|type-tag>, <code*|contents>, and <code*|attach-tag>
    from <hlink|2.4.2|#2.4.2> so that our generic system takes advantage of
    Scheme's internal type system. That is to say, the system should work as
    before except that ordinary numbers should be represented simply as
    Scheme numbers rather than as pairs whose <code*|car> is the symbol
    <code*|scheme-number>.
  </exercise>

  <\exercise>
    <label|ex2.79>Define a generic equality predicate <code*|equ?> that tests
    the equality of two numbers, and install it in the generic arithmetic
    package. This operation should work for ordinary numbers, rational
    numbers, and complex numbers.
  </exercise>

  <\exercise>
    Define a generic predicate <code*|=zero?> that tests if its argument is
    zero, and install it in the generic arithmetic package. This operation
    should work for ordinary numbers, rational numbers, and complex numbers.
  </exercise>

  <subsection|Combining Data of Different Types>

  We have seen how to define a unified arithmetic system that encompasses
  ordinary numbers, complex numbers, rational numbers, and any other type of
  number we might decide to invent, but we have ignored an important issue.
  The operations we have defined so far treat the different data types as
  being completely independent. Thus, there are separate packages for adding,
  say, two ordinary numbers, or two complex numbers. What we have not yet
  considered is the fact that it is meaningful to define operations that
  cross the type boundaries, such as the addition of a complex number to an
  ordinary number. We have gone to great pains to introduce barriers between
  parts of our programs so that they can be developed and understood
  separately. We would like to introduce the cross-type operations in some
  carefully controlled way, so that we can support them without seriously
  violating our module boundaries.

  One way to handle cross-type operations is to design a different procedure
  for each possible combination of types for which the operation is valid.
  For example, we could extend the complex-number package so that it provides
  a procedure for adding complex numbers to ordinary numbers and installs
  this in the table using the tag <code*|(complex scheme-number)>:<\footnote>
    We also have to supply an almost identical procedure to handle the types
    <code*|(scheme-number complex)>.
  </footnote>

  <\scm-code>
    ;; to be included in the complex package

    (define (add-complex-to-schemenum z x)

    \ \ (make-from-real-imag (+ (real-part z) x)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (imag-part z)))

    (put 'add '(complex scheme-number)

    \ \ \ \ \ (lambda (z x) (tag (add-complex-to-schemenum z x))))
  </scm-code>

  This technique works, but it is cumbersome. With such a system, the cost of
  introducing a new type is not just the construction of the package of
  procedures for that type but also the construction and installation of the
  procedures that implement the cross-type operations. This can easily be
  much more code than is needed to define the operations on the type itself.
  The method also undermines our ability to combine separate packages
  additively, or at least to limit the extent to which the implementors of
  the individual packages need to take account of other packages. For
  instance, in the example above, it seems reasonable that handling mixed
  operations on complex numbers and ordinary numbers should be the
  responsibility of the complex-number package. Combining rational numbers
  and complex numbers, however, might be done by the complex package, by the
  rational package, or by some third package that uses operations extracted
  from these two packages. Formulating coherent policies on the division of
  responsibility among packages can be an overwhelming task in designing
  systems with many packages and many cross-type operations.

  <paragraph*|Coercion>

  In the general situation of completely unrelated operations acting on
  completely unrelated types, implementing explicit cross-type operations,
  cumbersome though it may be, is the best that one can hope for.
  Fortunately, we can usually do better by taking advantage of additional
  structure that may be latent in our type system. Often the different data
  types are not completely independent, and there may be ways by which
  objects of one type may be viewed as being of another type. This process is
  called <em|coercion><index|coercion>. For example, if we are asked to
  arithmetically combine an ordinary number with a complex number, we can
  view the ordinary number as a complex number whose imaginary part is zero.
  This transforms the problem to that of combining two complex numbers, which
  can be handled in the ordinary way by the complex-arithmetic package.

  In general, we can implement this idea by designing coercion procedures
  that transform an object of one type into an equivalent object of another
  type. Here is a typical coercion procedure, which transforms a given
  ordinary number to a complex number with that real part and zero imaginary
  part:

  <\scm-code>
    (define (scheme-number-\<gtr\>complex n)

    \ \ (make-complex-from-real-imag (contents n) 0))
  </scm-code>

  We install these coercion procedures in a special coercion table, indexed
  under the names of the two types:

  <\scm-code>
    (put-coercion 'scheme-number 'complex scheme-number-\<gtr\>complex)
  </scm-code>

  (We assume that there are <code*|put-coercion> and <code*|get-coercion>
  procedures available for manipulating this table.) Generally some of the
  slots in the table will be empty, because it is not generally possible to
  coerce an arbitrary data object of each type into all other types. For
  example, there is no way to coerce an arbitrary complex number to an
  ordinary number, so there will be no general
  <code*|complex-\<gtr\>scheme-number> procedure included in the table.

  Once the coercion table has been set up, we can handle coercion in a
  uniform manner by modifying the <code*|apply-generic> procedure of
  <hlink|2.4.3|2_002e4.xhtml#g_t2_002e4_002e3>. When asked to apply an
  operation, we first check whether the operation is defined for the
  arguments' types, just as before. If so, we dispatch to the procedure found
  in the operation-and-type table. Otherwise, we try coercion. For
  simplicity, we consider only the case where there are two
  arguments.<\footnote>
    See <hlink|Exercise 2.82|#Exercise-2_002e82> for generalizations.
  </footnote> We check the coercion table to see if objects of the first type
  can be coerced to the second type. If so, we coerce the first argument and
  try the operation again. If objects of the first type cannot in general be
  coerced to the second type, we try the coercion the other way around to see
  if there is a way to coerce the second argument to the type of the first
  argument. Finally, if there is no known way to coerce either type to the
  other type, we give up. Here is the procedure:

  <\scm-code>
    (define (apply-generic op . args)

    \ \ (let ((type-tags (map type-tag args)))

    \ \ \ \ (let ((proc (get op type-tags)))

    \ \ \ \ \ \ (if proc

    \ \ \ \ \ \ \ \ \ \ (apply proc (map contents args))

    \ \ \ \ \ \ \ \ \ \ (if (= (length args) 2)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (let ((type1 (car type-tags))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (type2 (cadr type-tags))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (a1 (car args))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (a2 (cadr args)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (let ((t1-\<gtr\>t2 (get-coercion type1
    type2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (t2-\<gtr\>t1 (get-coercion
    type2 type1)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (cond (t1-\<gtr\>t2

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (apply-generic op
    (t1-\<gtr\>t2 a1) a2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (t2-\<gtr\>t1

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (apply-generic op a1
    (t2-\<gtr\>t1 a2)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (else

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (error "No method for
    these types"

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (list op
    type-tags))))))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ (error "No method for these types"

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (list op type-tags)))))))
  </scm-code>

  This coercion scheme has many advantages over the method of defining
  explicit cross-type operations, as outlined above. Although we still need
  to write coercion procedures to relate the types (possibly <math|n<rsup|2>>
  procedures for a system with <math|n> types), we need to write only one
  procedure for each pair of types rather than a different procedure for each
  collection of types and each generic operation.<\footnote>
    If we are clever, we can usually get by with fewer than <math|n<rsup|2>>
    coercion procedures. For instance, if we know how to convert from type 1
    to type 2 and from type 2 to type 3, then we can use this knowledge to
    convert from type 1 to type 3. This can greatly decrease the number of
    coercion procedures we need to supply explicitly when we add a new type
    to the system. If we are willing to build the required amount of
    sophistication into our system, we can have it search the \Pgraph\Q of
    relations among types and automatically generate those coercion
    procedures that can be inferred from the ones that are supplied
    explicitly.
  </footnote> What we are counting on here is the fact that the appropriate
  transformation between types depends only on the types themselves, not on
  the operation to be applied.

  On the other hand, there may be applications for which our coercion scheme
  is not general enough. Even when neither of the objects to be combined can
  be converted to the type of the other it may still be possible to perform
  the operation by converting both objects to a third type. In order to deal
  with such complexity and still preserve modularity in our programs, it is
  usually necessary to build systems that take advantage of still further
  structure in the relations among types, as we discuss next.

  <paragraph*|Hierarchies of types>

  The coercion scheme presented above relied on the existence of natural
  relations between pairs of types. Often there is more \Pglobal\Q structure
  in how the different types relate to each other. For instance, suppose we
  are building a generic arithmetic system to handle integers, rational
  numbers, real numbers, and complex numbers. In such a system, it is quite
  natural to regard an integer as a special kind of rational number, which is
  in turn a special kind of real number, which is in turn a special kind of
  complex number. What we actually have is a so-called <em|hierarchy of
  types><index|hierarchy of types>, in which, for example, integers are a
  <em|subtype><index|subtype> of rational numbers (i.e., any operation that
  can be applied to a rational number can automatically be applied to an
  integer). Conversely, we say that rational numbers form a
  <em|supertype><index|supertype> of integers. The particular hierarchy we
  have here is of a very simple kind, in which each type has at most one
  supertype and at most one subtype. Such a structure, called a
  <em|tower><index|tower>, is illustrated in <hlink|Figure 2.25|#fig2.25>.

  <\big-figure|<\script-output|dot|default>
    %dot -height 240px

    digraph G {

    \ \ \ \ rankdir=DT

    \ \ \ \ node [shape=plaintext]

    \ \ \ \ 

    \ \ \ \ integer -\<gtr\> rational

    \ \ \ \ rational -\<gtr\> real

    \ \ \ \ real -\<gtr\> complex

    }
  </script-output|<image|<tuple||ps>||240px||>>>
    <label|fig2.25>A tower of types.
  </big-figure>

  If we have a tower structure, then we can greatly simplify the problem of
  adding a new type to the hierarchy, for we need only specify how the new
  type is embedded in the next supertype above it and how it is the supertype
  of the type below it. For example, if we want to add an integer to a
  complex number, we need not explicitly define a special coercion procedure
  <code*|integer-\<gtr\>complex>. Instead, we define how an integer can be
  transformed into a rational number, how a rational number is transformed
  into a real number, and how a real number is transformed into a complex
  number. We then allow the system to transform the integer into a complex
  number through these steps and then add the two complex numbers.

  We can redesign our <code*|apply-generic> procedure in the following way:
  For each type, we need to supply a <code*|raise> procedure, which
  \Praises\Q objects of that type one level in the tower. Then when the
  system is required to operate on objects of different types it can
  successively raise the lower types until all the objects are at the same
  level in the tower. (<hlink|Exercise 2.83|#Exercise-2_002e83> and
  <hlink|Exercise 2.84|#Exercise-2_002e84> concern the details of
  implementing such a strategy.)

  Another advantage of a tower is that we can easily implement the notion
  that every type \Pinherits\Q all operations defined on a supertype. For
  instance, if we do not supply a special procedure for finding the real part
  of an integer, we should nevertheless expect that <code*|real-part> will be
  defined for integers by virtue of the fact that integers are a subtype of
  complex numbers. In a tower, we can arrange for this to happen in a uniform
  way by modifying <code*|apply-generic>. If the required operation is not
  directly defined for the type of the object given, we raise the object to
  its supertype and try again. We thus crawl up the tower, transforming our
  argument as we go, until we either find a level at which the desired
  operation can be performed or hit the top (in which case we give up).

  Yet another advantage of a tower over a more general hierarchy is that it
  gives us a simple way to \Plower\Q a data object to the simplest
  representation. For example, if we add <math|2+3i> to <math|4\<minus\>3i>,
  it would be nice to obtain the answer as the integer 6 rather than as the
  complex number <math|6+0i>. <hlink|Exercise 2.85|#Exercise-2_002e85>
  discusses a way to implement such a lowering operation. (The trick is that
  we need a general way to distinguish those objects that can be lowered,
  such as <math|6+0i>, from those that cannot, such as <math|6+2i>.)

  <paragraph*|Inadequacies of hierarchies>

  If the data types in our system can be naturally arranged in a tower, this
  greatly simplifies the problems of dealing with generic operations on
  different types, as we have seen. Unfortunately, this is usually not the
  case. <hlink|Figure 2.26|#fig2.26> illustrates a more complex arrangement
  of mixed types, this one showing relations among different types of
  geometric figures. We see that, in general, a type may have more than one
  subtype. Triangles and quadrilaterals, for instance, are both subtypes of
  polygons. In addition, a type may have more than one supertype. For
  example, an isosceles right triangle may be regarded either as an isosceles
  triangle or as a right triangle. This multiple-supertypes issue is
  particularly thorny, since it means that there is no unique way to
  \Praise\Q a type in the hierarchy. Finding the \Pcorrect\Q supertype in
  which to apply an operation to an object may involve considerable searching
  through the entire type network on the part of a procedure such as
  <code*|apply-generic>. Since there generally are multiple subtypes for a
  type, there is a similar problem in coercing a value \Pdown\Q the type
  hierarchy. Dealing with large numbers of interrelated types while still
  preserving modularity in the design of large systems is very difficult, and
  is an area of much current research.<\footnote>
    This statement, which also appears in the first edition of this book, is
    just as true now as it was when we wrote it twelve years ago. Developing
    a useful, general framework for expressing the relations among different
    types of entities (what philosophers call \Pontology\Q) seems intractably
    difficult. The main difference between the confusion that existed ten
    years ago and the confusion that exists now is that now a variety of
    inadequate ontological theories have been embodied in a plethora of
    correspondingly inadequate programming languages. For example, much of
    the complexity of object-oriented programming languages\Vand the subtle
    and confusing differences among contemporary object-oriented
    languages\Vcenters on the treatment of generic operations on interrelated
    types. Our own discussion of computational objects in <hlink|Chapter
    3|Chapter-3.xhtml#Chapter-3> avoids these issues entirely. Readers
    familiar with object-oriented programming will notice that we have much
    to say in chapter 3 about local state, but we do not even mention
    \Pclasses\Q or \Pinheritance.\Q In fact, we suspect that these problems
    cannot be adequately addressed in terms of computer-language design
    alone, without also drawing on work in knowledge representation and
    automated reasoning.
  </footnote>

  <\big-figure|<\script-output|dot|default>
    digraph G {

    \ \ node [shape=plaintext]

    \ \ polygon -\<gtr\> triangle

    \ \ triangle -\<gtr\> "right triangle"

    \ \ triangle -\<gtr\> "isosceles triangle"

    \ \ "right triangle" -\<gtr\> "isosceles right triangle"

    \ \ "isosceles triangle" -\<gtr\> "isosceles right triangle"

    \ \ "isosceles triangle" -\<gtr\> "equilateral triangle"

    \ \ \ \ 

    \ \ polygon -\<gtr\> quadrilateral

    \ \ quadrilateral -\<gtr\> trapezoid

    \ \ quadrilateral -\<gtr\> kite

    \ \ trapezoid -\<gtr\> parallelogram

    \ \ parallelogram -\<gtr\> rectangle

    \ \ parallelogram -\<gtr\> chombus

    \ \ rectangle -\<gtr\> square

    \ \ kite -\<gtr\> chombus

    \ \ chombus -\<gtr\> square

    }
  </script-output|<image|<tuple||ps>|0.618par|||>>>
    <label|fig2.26>Relations among types of geometric figures.
  </big-figure>

  <\exercise>
    Louis Reasoner has noticed that <code*|apply-generic> may try to coerce
    the arguments to each other's type even if they already have the same
    type. Therefore, he reasons, we need to put procedures in the coercion
    table to <em|coerce><index|coerce> arguments of each type to their own
    type. For example, in addition to the
    <code*|scheme-number-\<gtr\>complex> coercion shown above, he would do:

    <\scm-code>
      (define (scheme-number-\<gtr\>scheme-number n) n)

      (define (complex-\<gtr\>complex z) z)

      (put-coercion 'scheme-number 'scheme-number

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ scheme-number-\<gtr\>scheme-number)

      (put-coercion 'complex 'complex complex-\<gtr\>complex)
    </scm-code>

    <\enumerate-alpha>
      <item>With Louis's coercion procedures installed, what happens if
      <code*|apply-generic> is called with two arguments of type
      <code*|scheme-number> or two arguments of type <code*|complex> for an
      operation that is not found in the table for those types? For example,
      assume that we've defined a generic exponentiation operation:

      <\scm-code>
        (define (exp x y) (apply-generic 'exp x y))
      </scm-code>

      and have put a procedure for exponentiation in the Scheme-number
      package but not in any other package:

      <\scm-code>
        ;; following added to Scheme-number package

        (put 'exp '(scheme-number scheme-number)

        \ \ \ \ \ (lambda (x y) (tag (expt x y)))) ; using primitive expt
      </scm-code>

      What happens if we call <code*|exp> with two complex numbers as
      arguments?

      <item>Is Louis correct that something had to be done about coercion
      with arguments of the same type, or does <code*|apply-generic> work
      correctly as is?

      <item>Modify <code*|apply-generic> so that it doesn't try coercion if
      the two arguments have the same type.
    </enumerate-alpha>
  </exercise>

  <\exercise>
    Show how to generalize <code*|apply-generic> to handle coercion in the
    general case of multiple arguments. One strategy is to attempt to coerce
    all the arguments to the type of the first argument, then to the type of
    the second argument, and so on. Give an example of a situation where this
    strategy (and likewise the two-argument version given above) is not
    sufficiently general. (Hint: Consider the case where there are some
    suitable mixed-type operations present in the table that will not be
    tried.)
  </exercise>

  <\exercise>
    <label|ex2.83>Suppose you are designing a generic arithmetic system for
    dealing with the tower of types shown in <hlink|Figure
    2.25|#Figure-2_002e25>: integer, rational, real, complex. For each type
    (except complex), design a procedure that raises objects of that type one
    level in the tower. Show how to install a generic <code*|raise> operation
    that will work for each type (except complex).
  </exercise>

  <\exercise>
    Using the <code*|raise> operation of <hlink|Exercise 2.83|#ex2.83>,
    modify the <code*|apply-generic> procedure so that it coerces its
    arguments to have the same type by the method of successive raising, as
    discussed in this section. You will need to devise a way to test which of
    two types is higher in the tower. Do this in a manner that is
    \Pcompatible\Q with the rest of the system and will not lead to problems
    in adding new levels to the tower.
  </exercise>

  <\exercise>
    This section mentioned a method for \Psimplifying\Q a data object by
    lowering it in the tower of types as far as possible. Design a procedure
    <code*|drop> that accomplishes this for the tower described in
    <hlink|Exercise 2.83|#Exercise-2_002e83>. The key is to decide, in some
    general way, whether an object can be lowered. For example, the complex
    number <math|1.5+0i> can be lowered as far as <code*|real>, the complex
    number <math|1+0i> can be lowered as far as <code*|integer>, and the
    complex number <math|2+3i> cannot be lowered at all. Here is a plan for
    determining whether an object can be lowered: Begin by defining a generic
    operation <code*|project> that \Ppushes\Q an object down in the tower.
    For example, projecting a complex number would involve throwing away the
    imaginary part. Then a number can be dropped if, when we <code*|project>
    it and <code*|raise> the result back to the type we started with, we end
    up with something equal to what we started with. Show how to implement
    this idea in detail, by writing a <code*|drop> procedure that drops an
    object as far as possible. You will need to design the various projection
    operations<\footnote>
      A real number can be projected to an integer using the <code*|round>
      primitive, which returns the closest integer to its argument.
    </footnote> and install <code*|project> as a generic operation in the
    system. You will also need to make use of a generic equality predicate,
    such as described in <hlink|Exercise 2.79|#ex2.79>. Finally, use
    <code*|drop> to rewrite <code*|apply-generic> from <hlink|Exercise
    2.84|#Exercise-2_002e84> so that it \Psimplifies\Q its answers.
  </exercise>

  <\exercise>
    Suppose we want to handle complex numbers whose real parts, imaginary
    parts, magnitudes, and angles can be either ordinary numbers, rational
    numbers, or other numbers we might wish to add to the system. Describe
    and implement the changes to the system needed to accommodate this. You
    will have to define operations such as <code*|sine> and <code*|cosine>
    that are generic over ordinary numbers and rational numbers.
  </exercise>

  <subsection|Example: Symbolic Algebra>

  The manipulation of symbolic algebraic expressions is a complex process
  that illustrates many of the hardest problems that occur in the design of
  large-scale systems. An algebraic expression, in general, can be viewed as
  a hierarchical structure, a tree of operators applied to operands. We can
  construct algebraic expressions by starting with a set of primitive
  objects, such as constants and variables, and combining these by means of
  algebraic operators, such as addition and multiplication. As in other
  languages, we form abstractions that enable us to refer to compound objects
  in simple terms. Typical abstractions in symbolic algebra are ideas such as
  linear combination, polynomial, rational function, or trigonometric
  function. We can regard these as compound \Ptypes,\Q which are often useful
  for directing the processing of expressions. For example, we could describe
  the expression <math|x<rsup|2>sin\<nospace\><around*|(|y<rsup|2>+1|)>+xcos\<nospace\>2y+cos\<nospace\><around*|(|y<rsup|3>\<minus\>2y<rsup|2>|)>>
  as a polynomial in <math|x> with coefficients that are trigonometric
  functions of polynomials in <math|y> whose coefficients are integers.

  We will not attempt to develop a complete algebraic-manipulation system
  here. Such systems are exceedingly complex programs, embodying deep
  algebraic knowledge and elegant algorithms. What we will do is look at a
  simple but important part of algebraic manipulation: the arithmetic of
  polynomials. We will illustrate the kinds of decisions the designer of such
  a system faces, and how to apply the ideas of abstract data and generic
  operations to help organize this effort.

  <paragraph*|Arithmetic on polynomials>

  Our first task in designing a system for performing arithmetic on
  polynomials is to decide just what a polynomial is. Polynomials are
  normally defined relative to certain variables (the
  <em|indeterminates><index|indeterminates> of the polynomial). For
  simplicity, we will restrict ourselves to polynomials having just one
  indeterminate (<em|univariate polynomials><index|univariate
  polynomials>).<\footnote>
    On the other hand, we will allow polynomials whose coefficients are
    themselves polynomials in other variables. This will give us essentially
    the same representational power as a full multivariate system, although
    it does lead to coercion problems, as discussed below.
  </footnote> We will define a polynomial to be a sum of terms, each of which
  is either a coefficient, a power of the indeterminate, or a product of a
  coefficient and a power of the indeterminate. A coefficient is defined as
  an algebraic expression that is not dependent upon the indeterminate of the
  polynomial. For example, <math|5x<rsup|2>+3x+7> is a simple polynomial in
  <math|x>, and <math|<around*|(|y<rsup|2>+1|)>x<rsup|3>+<around*|(|2y|)>x+1>
  is a polynomial in <math|x> whose coefficients are polynomials in <math|y>.

  Already we are skirting some thorny issues. Is the first of these
  polynomials the same as the polynomial <math|5y<rsup|2>+3y+7>, or not? A
  reasonable answer might be \Pyes, if we are considering a polynomial purely
  as a mathematical function, but no, if we are considering a polynomial to
  be a syntactic form.\Q The second polynomial is algebraically equivalent to
  a polynomial in <math|y> whose coefficients are polynomials in <math|x>.
  Should our system recognize this, or not? Furthermore, there are other ways
  to represent a polynomial\Vfor example, as a product of factors, or (for a
  univariate polynomial) as the set of roots, or as a listing of the values
  of the polynomial at a specified set of points.<\footnote>
    For univariate polynomials, giving the value of a polynomial at a given
    set of points can be a particularly good representation. This makes
    polynomial arithmetic extremely simple. To obtain, for example, the sum
    of two polynomials represented in this way, we need only add the values
    of the polynomials at corresponding points. To transform back to a more
    familiar representation, we can use the Lagrange interpolation formula,
    which shows how to recover the coefficients of a polynomial of degree
    <math|n> given the values of the polynomial at <math|n+1> points.
  </footnote> We can finesse these questions by deciding that in our
  algebraic-manipulation system a \Ppolynomial\Q will be a particular
  syntactic form, not its underlying mathematical meaning.

  Now we must consider how to go about doing arithmetic on polynomials. In
  this simple system, we will consider only addition and multiplication.
  Moreover, we will insist that two polynomials to be combined must have the
  same indeterminate.

  We will approach the design of our system by following the familiar
  discipline of data abstraction. We will represent polynomials using a data
  structure called a <em|poly><index|poly>, which consists of a variable and
  a collection of terms. We assume that we have selectors <code*|variable>
  and <code*|term-list> that extract those parts from a poly and a
  constructor <code*|make-poly> that assembles a poly from a given variable
  and a term list. A variable will be just a symbol, so we can use the
  <code*|same-variable?> procedure of <hlink|2.3.2|#2.3.2> to compare
  variables. The following procedures define addition and multiplication of
  polys:

  <\scm-code>
    (define (add-poly p1 p2)

    \ \ (if (same-variable? (variable p1) (variable p2))

    \ \ \ \ \ \ (make-poly (variable p1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (add-terms (term-list p1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (term-list p2)))

    \ \ \ \ \ \ (error "Polys not in same var -- ADD-POLY"

    \ \ \ \ \ \ \ \ \ \ \ \ \ (list p1 p2))))

    (define (mul-poly p1 p2)

    \ \ (if (same-variable? (variable p1) (variable p2))

    \ \ \ \ \ \ (make-poly (variable p1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (mul-terms (term-list p1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (term-list p2)))

    \ \ \ \ \ \ (error "Polys not in same var -- MUL-POLY"

    \ \ \ \ \ \ \ \ \ \ \ \ \ (list p1 p2))))
  </scm-code>

  To incorporate polynomials into our generic arithmetic system, we need to
  supply them with type tags. We'll use the tag <code*|polynomial>, and
  install appropriate operations on tagged polynomials in the operation
  table. We'll embed all our code in an installation procedure for the
  polynomial package, similar to the ones in <hlink|2.5.1|#g_t2_002e5_002e1>:

  <\scm-code>
    (define (install-polynomial-package)

    \ \ ;; internal procedures

    \ \ ;; representation of poly

    \ \ (define (make-poly variable term-list)

    \ \ \ \ (cons variable term-list))

    \ \ (define (variable p) (car p))

    \ \ (define (term-list p) (cdr p))

    \ \ \<less\>procedures same-variable? and variable? from section
    2.3.2\<gtr\>

    \ \ ;; representation of terms and term lists

    \ \ \<less\>procedures adjoin-term ...coeff from text below\<gtr\>

    \;

    \ \ ;; continued on next page

    \;

    \ \ (define (add-poly p1 p2) ...)

    \ \ \<less\>procedures used by add-poly\<gtr\>

    \ \ (define (mul-poly p1 p2) ...)

    \ \ \<less\>procedures used by mul-poly\<gtr\>

    \ \ ;; interface to rest of the system

    \ \ (define (tag p) (attach-tag 'polynomial p))

    \ \ (put 'add '(polynomial polynomial)\ 

    \ \ \ \ \ \ \ (lambda (p1 p2) (tag (add-poly p1 p2))))

    \ \ (put 'mul '(polynomial polynomial)\ 

    \ \ \ \ \ \ \ (lambda (p1 p2) (tag (mul-poly p1 p2))))

    \ \ (put 'make 'polynomial

    \ \ \ \ \ \ \ (lambda (var terms) (tag (make-poly var terms))))

    \ \ 'done)
  </scm-code>

  Polynomial addition is performed termwise. Terms of the same order (i.e.,
  with the same power of the indeterminate) must be combined. This is done by
  forming a new term of the same order whose coefficient is the sum of the
  coefficients of the addends. Terms in one addend for which there are no
  terms of the same order in the other addend are simply accumulated into the
  sum polynomial being constructed.

  In order to manipulate term lists, we will assume that we have a
  constructor <code*|the-empty-termlist> that returns an empty term list and
  a constructor <code*|adjoin-term> that adjoins a new term to a term list.
  We will also assume that we have a predicate <code*|empty-termlist?> that
  tells if a given term list is empty, a selector <code*|first-term> that
  extracts the highest-order term from a term list, and a selector
  <code*|rest-terms> that returns all but the highest-order term. To
  manipulate terms, we will suppose that we have a constructor
  <code*|make-term> that constructs a term with given order and coefficient,
  and selectors <code*|order> and <code*|coeff> that return, respectively,
  the order and the coefficient of the term. These operations allow us to
  consider both terms and term lists as data abstractions, whose concrete
  representations we can worry about separately.

  Here is the procedure that constructs the term list for the sum of two
  polynomials:<\footnote>
    This operation is very much like the ordered <code*|union-set> operation
    we developed in <hlink|Exercise 2.62|2_002e3.xhtml#Exercise-2_002e62>. In
    fact, if we think of the terms of the polynomial as a set ordered
    according to the power of the indeterminate, then the program that
    produces the term list for a sum is almost identical to
    <code*|union-set>.
  </footnote>

  <\scm-code>
    (define (add-terms L1 L2)

    \ \ (cond ((empty-termlist? L1) L2)

    \ \ \ \ \ \ \ \ ((empty-termlist? L2) L1)

    \ \ \ \ \ \ \ \ (else

    \ \ \ \ \ \ \ \ \ (let ((t1 (first-term L1)) (t2 (first-term L2)))

    \ \ \ \ \ \ \ \ \ \ \ (cond ((\<gtr\> (order t1) (order t2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-term

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ t1 (add-terms (rest-terms L1) L2)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ((\<less\> (order t1) (order t2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-term

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ t2 (add-terms L1 (rest-terms L2))))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (else

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (adjoin-term

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (make-term (order t1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (add (coeff
    t1) (coeff t2)))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (add-terms (rest-terms L1)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (rest-terms
    L2)))))))))
  </scm-code>

  The most important point to note here is that we used the generic addition
  procedure <code*|add> to add together the coefficients of the terms being
  combined. This has powerful consequences, as we will see below.

  In order to multiply two term lists, we multiply each term of the first
  list by all the terms of the other list, repeatedly using
  <code*|mul-term-by-all-terms>, which multiplies a given term by all terms
  in a given term list. The resulting term lists (one for each term of the
  first list) are accumulated into a sum. Multiplying two terms forms a term
  whose order is the sum of the orders of the factors and whose coefficient
  is the product of the coefficients of the factors:

  <\scm-code>
    (define (mul-terms L1 L2)

    \ \ (if (empty-termlist? L1)

    \ \ \ \ \ \ (the-empty-termlist)

    \ \ \ \ \ \ (add-terms (mul-term-by-all-terms (first-term L1) L2)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (mul-terms (rest-terms L1) L2))))

    (define (mul-term-by-all-terms t1 L)

    \ \ (if (empty-termlist? L)

    \ \ \ \ \ \ (the-empty-termlist)

    \ \ \ \ \ \ (let ((t2 (first-term L)))

    \ \ \ \ \ \ \ \ (adjoin-term

    \ \ \ \ \ \ \ \ \ (make-term (+ (order t1) (order t2))

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (mul (coeff t1) (coeff t2)))

    \ \ \ \ \ \ \ \ \ (mul-term-by-all-terms t1 (rest-terms L))))))
  </scm-code>

  This is really all there is to polynomial addition and multiplication.
  Notice that, since we operate on terms using the generic procedures
  <code*|add> and <code*|mul>, our polynomial package is automatically able
  to handle any type of coefficient that is known about by the generic
  arithmetic package. If we include a coercion mechanism such as one of those
  discussed in <hlink|2.5.2|#2.5.2>, then we also are automatically able to
  handle operations on polynomials of different coefficient types, such as
  <math|<around*|[|3x<rsup|2>+<around*|(|2+3i|)>x+7|]>\<cdot\><around*|[|x<rsup|4>+<frac|2|3>x<rsup|2>+<around*|(|5+3i|)>|]>.>
  Because we installed the polynomial addition and multiplication procedures
  <code*|add-poly> and <code*|mul-poly> in the generic arithmetic system as
  the <code*|add> and <code*|mul> operations for type <code*|polynomial>, our
  system is also automatically able to handle polynomial operations such as
  <math|<around*|[|<around*|(|y+1|)>x<rsup|2>+<around*|(|y<rsup|2>+1|)>x+<around*|(|y\<minus\>1|)>|]>\<cdot\><around*|[|<around*|(|y\<minus\>2|)>x+<around*|(|y<rsup|3>+7|)>|]>.>
  The reason is that when the system tries to combine coefficients, it will
  dispatch through <code*|add> and <code*|mul>. Since the coefficients are
  themselves polynomials (in <math|y>), these will be combined using
  <code*|add-poly> and <code*|mul-poly>. The result is a kind of
  \Pdata-directed recursion\Q in which, for example, a call to
  <code*|mul-poly> will result in recursive calls to <code*|mul-poly> in
  order to multiply the coefficients. If the coefficients of the coefficients
  were themselves polynomials (as might be used to represent polynomials in
  three variables), the data direction would ensure that the system would
  follow through another level of recursive calls, and so on through as many
  levels as the structure of the data dictates.<\footnote>
    To make this work completely smoothly, we should also add to our generic
    arithmetic system the ability to coerce a \Pnumber\Q to a polynomial by
    regarding it as a polynomial of degree zero whose coefficient is the
    number. This is necessary if we are going to perform operations such as
    <math|<around*|[|x<rsup|2>+<around*|(|y+1|)>x+5|]>+<around*|[|x<rsup|2>+2x+1|]>,>
    which requires adding the coefficient <math|y+1> to the coefficient 2.
  </footnote>

  <paragraph*|Representing term lists>

  Finally, we must confront the job of implementing a good representation for
  term lists. A term list is, in effect, a set of coefficients keyed by the
  order of the term. Hence, any of the methods for representing sets, as
  discussed in <hlink|2.3.3|2_002e3.xhtml#g_t2_002e3_002e3>, can be applied
  to this task. On the other hand, our procedures <code*|add-terms> and
  <code*|mul-terms> always access term lists sequentially from highest to
  lowest order. Thus, we will use some kind of ordered list representation.

  How should we structure the list that represents a term list? One
  consideration is the \Pdensity\Q of the polynomials we intend to
  manipulate. A polynomial is said to be <em|dense><index|dense> if it has
  nonzero coefficients in terms of most orders. If it has many zero terms it
  is said to be <em|sparse><index|sparse>. For example,
  <math|A:x<rsup|5>+2x<rsup|4>+3x<rsup|2>\<minus\>2x\<minus\>5> is a dense
  polynomial, whereas <math|B:x<rsup|100>+2x<rsup|2>+1> is sparse.

  The term lists of dense polynomials are most efficiently represented as
  lists of the coefficients. For example, <math|A> above would be nicely
  represented as <code*|(1 2 0 3 -2 -5)>. The order of a term in this
  representation is the length of the sublist beginning with that term's
  coefficient, decremented by 1.<\footnote>
    In these polynomial examples, we assume that we have implemented the
    generic arithmetic system using the type mechanism suggested in
    <hlink|Exercise 2.78|#Exercise-2_002e78>. Thus, coefficients that are
    ordinary numbers will be represented as the numbers themselves rather
    than as pairs whose <code*|car> is the symbol <code*|scheme-number>.
  </footnote> This would be a terrible representation for a sparse polynomial
  such as <math|B>: There would be a giant list of zeros punctuated by a few
  lonely nonzero terms. A more reasonable representation of the term list of
  a sparse polynomial is as a list of the nonzero terms, where each term is a
  list containing the order of the term and the coefficient for that order.
  In such a scheme, polynomial <math|B> is efficiently represented as
  <code*|((100 1) (2 2) (0 1))>. As most polynomial manipulations are
  performed on sparse polynomials, we will use this method. We will assume
  that term lists are represented as lists of terms, arranged from
  highest-order to lowest-order term. Once we have made this decision,
  implementing the selectors and constructors for terms and term lists is
  straightforward:<\footnote>
    Although we are assuming that term lists are ordered, we have implemented
    <code*|adjoin-term> to simply <code*|cons> the new term onto the existing
    term list. We can get away with this so long as we guarantee that the
    procedures (such as <code*|add-terms>) that use <code*|adjoin-term>
    always call it with a higher-order term than appears in the list. If we
    did not want to make such a guarantee, we could have implemented
    <code*|adjoin-term> to be similar to the <code*|adjoin-set> constructor
    for the ordered-list representation of sets (<hlink|Exercise
    2.61|2_002e3.xhtml#Exercise-2_002e61>).
  </footnote>

  <\scm-code>
    (define (adjoin-term term term-list)

    \ \ (if (=zero? (coeff term))

    \ \ \ \ \ \ term-list

    \ \ \ \ \ \ (cons term term-list)))

    (define (the-empty-termlist) '())

    (define (first-term term-list) (car term-list))

    (define (rest-terms term-list) (cdr term-list))

    (define (empty-termlist? term-list) (null? term-list))

    (define (make-term order coeff) (list order coeff))

    (define (order term) (car term))

    (define (coeff term) (cadr term))
  </scm-code>

  where <code*|=zero?> is as defined in <hlink|Exercise
  2.80|#Exercise-2_002e80>. (See also <hlink|Exercise
  2.87|#Exercise-2_002e87> below.)

  Users of the polynomial package will create (tagged) polynomials by means
  of the procedure:

  <\scm-code>
    (define (make-polynomial var terms)

    \ \ ((get 'make 'polynomial) var terms))
  </scm-code>

  <\exercise>
    Install <code*|=zero?> for polynomials in the generic arithmetic package.
    This will allow <code*|adjoin-term> to work for polynomials with
    coefficients that are themselves polynomials.
  </exercise>

  <\exercise>
    Extend the polynomial system to include subtraction of polynomials.
    (Hint: You may find it helpful to define a generic negation operation.)
  </exercise>

  <\exercise>
    Define procedures that implement the term-list representation described
    above as appropriate for dense polynomials.
  </exercise>

  <\exercise>
    Suppose we want to have a polynomial system that is efficient for both
    sparse and dense polynomials. One way to do this is to allow both kinds
    of term-list representations in our system. The situation is analogous to
    the complex-number example of <hlink|2.4|2_002e4.xhtml#g_t2_002e4>, where
    we allowed both rectangular and polar representations. To do this we must
    distinguish different types of term lists and make the operations on term
    lists generic. Redesign the polynomial system to implement this
    generalization. This is a major effort, not a local change.
  </exercise>

  <\exercise>
    A univariate polynomial can be divided by another one to produce a
    polynomial quotient and a polynomial remainder. For example,
    <math|<frac|x<rsup|5>\<minus\>1|x<rsup|2>\<minus\>1>=x<rsup|3>+x,<with|mode|text|<nbsp>remainder<nbsp>>x\<minus\>1.>
    Division can be performed via long division. That is, divide the
    highest-order term of the dividend by the highest-order term of the
    divisor. The result is the first term of the quotient. Next, multiply the
    result by the divisor, subtract that from the dividend, and produce the
    rest of the answer by recursively dividing the difference by the divisor.
    Stop when the order of the divisor exceeds the order of the dividend and
    declare the dividend to be the remainder. Also, if the dividend ever
    becomes zero, return zero as both quotient and remainder.

    We can design a <code*|div-poly> procedure on the model of
    <code*|add-poly> and <code*|mul-poly>. The procedure checks to see if the
    two polys have the same variable. If so, <code*|div-poly> strips off the
    variable and passes the problem to <code*|div-terms>, which performs the
    division operation on term lists. <code*|Div-poly> finally reattaches the
    variable to the result supplied by <code*|div-terms>. It is convenient to
    design <code*|div-terms> to compute both the quotient and the remainder
    of a division. <code*|Div-terms> can take two term lists as arguments and
    return a list of the quotient term list and the remainder term list.

    Complete the following definition of <code*|div-terms> by filling in the
    missing expressions. Use this to implement <code*|div-poly>, which takes
    two polys as arguments and returns a list of the quotient and remainder
    polys.

    <\scm-code>
      (define (div-terms L1 L2)

      \ \ (if (empty-termlist? L1)

      \ \ \ \ \ \ (list (the-empty-termlist) (the-empty-termlist))

      \ \ \ \ \ \ (let ((t1 (first-term L1))

      \ \ \ \ \ \ \ \ \ \ \ \ (t2 (first-term L2)))

      \ \ \ \ \ \ \ \ (if (\<gtr\> (order t2) (order t1))

      \ \ \ \ \ \ \ \ \ \ \ \ (list (the-empty-termlist) L1)

      \ \ \ \ \ \ \ \ \ \ \ \ (let ((new-c (div (coeff t1) (coeff t2)))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (new-o (- (order t1) (order t2))))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ (let ((rest-of-result

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<less\>compute rest of
      result recursively\<gtr\>

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ))

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<less\>form complete result\<gtr\>

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ))))))
    </scm-code>
  </exercise>

  <paragraph*|Hierarchies of types in symbolic algebra>

  Our polynomial system illustrates how objects of one type (polynomials) may
  in fact be complex objects that have objects of many different types as
  parts. This poses no real difficulty in defining generic operations. We
  need only install appropriate generic operations for performing the
  necessary manipulations of the parts of the compound types. In fact, we saw
  that polynomials form a kind of \Precursive data abstraction,\Q in that
  parts of a polynomial may themselves be polynomials. Our generic operations
  and our data-directed programming style can handle this complication
  without much trouble.

  On the other hand, polynomial algebra is a system for which the data types
  cannot be naturally arranged in a tower. For instance, it is possible to
  have polynomials in <math|x> whose coefficients are polynomials in
  <math|y>. It is also possible to have polynomials in <math|y> whose
  coefficients are polynomials in <math|x>. Neither of these types is
  \Pabove\Q the other in any natural way, yet it is often necessary to add
  together elements from each set. There are several ways to do this. One
  possibility is to convert one polynomial to the type of the other by
  expanding and rearranging terms so that both polynomials have the same
  principal variable. One can impose a towerlike structure on this by
  ordering the variables and thus always converting any polynomial to a
  \Pcanonical form\Q with the highest-priority variable dominant and the
  lower-priority variables buried in the coefficients. This strategy works
  fairly well, except that the conversion may expand a polynomial
  unnecessarily, making it hard to read and perhaps less efficient to work
  with. The tower strategy is certainly not natural for this domain or for
  any domain where the user can invent new types dynamically using old types
  in various combining forms, such as trigonometric functions, power series,
  and integrals.

  It should not be surprising that controlling coercion is a serious problem
  in the design of large-scale algebraic-manipulation systems. Much of the
  complexity of such systems is concerned with relationships among diverse
  types. Indeed, it is fair to say that we do not yet completely understand
  coercion. In fact, we do not yet completely understand the concept of a
  data type. Nevertheless, what we know provides us with powerful structuring
  and modularity principles to support the design of large systems.

  <\exercise>
    By imposing an ordering on variables, extend the polynomial package so
    that addition and multiplication of polynomials works for polynomials in
    different variables. (This is not easy!)
  </exercise>

  <paragraph*|Extended exercise: Rational functions>

  We can extend our generic arithmetic system to include
  <label|index-rational-functions> <em|rational functions>. These are
  \Pfractions\Q whose numerator and denominator are polynomials, such as
  <math|<frac|x+1|x<rsup|3>\<minus\>1>.> The system should be able to add,
  subtract, multiply, and divide rational functions, and to perform such
  computations as <math|<frac|x+1|x<rsup|3>\<minus\>1>+<frac|x|x<rsup|2>\<minus\>1>=<frac|x<rsup|3>+2x<rsup|2>+3x+1|x<rsup|4>+x<rsup|3>\<minus\>x\<minus\>1>.>
  (Here the sum has been simplified by removing common factors. Ordinary
  \Pcross multiplication\Q would have produced a fourth-degree polynomial
  over a fifth-degree polynomial.)

  If we modify our rational-arithmetic package so that it uses generic
  operations, then it will do what we want, except for the problem of
  reducing fractions to lowest terms.

  <\exercise>
    Modify the rational-arithmetic package to use generic operations, but
    change <code*|make-rat> so that it does not attempt to reduce fractions
    to lowest terms. Test your system by calling <code*|make-rational> on two
    polynomials to produce a rational function:

    <\scm-code>
      (define p1 (make-polynomial 'x '((2 1)(0 1))))

      (define p2 (make-polynomial 'x '((3 1)(0 1))))

      (define rf (make-rational p2 p1))
    </scm-code>

    Now add <code*|rf> to itself, using <code*|add>. You will observe that
    this addition procedure does not reduce fractions to lowest terms.

    We can reduce polynomial fractions to lowest terms using the same idea we
    used with integers: modifying <code*|make-rat> to divide both the
    numerator and the denominator by their greatest common divisor. The
    notion of \Pgreatest common divisor\Q makes sense for polynomials. In
    fact, we can compute the <abbr|GCD> of two polynomials using essentially
    the same Euclid's Algorithm that works for integers.<\footnote>
      The fact that Euclid's Algorithm works for polynomials is formalized in
      algebra by saying that polynomials form a kind of algebraic domain
      called a <label|index-Euclidean-ring> <em|Euclidean ring>. A Euclidean
      ring is a domain that admits addition, subtraction, and commutative
      multiplication, together with a way of assigning to each element
      <math|x> of the ring a positive integer \Pmeasure\Q
      <math|m<around*|(|x|)>> with the properties that
      <math|m<around*|(|xy|)>\<geq\>m<around*|(|x|)>> for any nonzero
      <math|x> and <math|y> and that, given any <math|x> and <math|y>, there
      exists a <math|q> such that <math|y=qx+r> and either <math|r=0> or
      <math|m<around*|(|r|)>\<less\>m<around*|(|x|)>>. From an abstract point
      of view, this is what is needed to prove that Euclid's Algorithm works.
      For the domain of integers, the measure <math|m> of an integer is the
      absolute value of the integer itself. For the domain of polynomials,
      the measure of a polynomial is its degree.
    </footnote> The integer version is

    <\scm-code>
      (define (gcd a b)

      \ \ (if (= b 0)

      \ \ \ \ \ \ a

      \ \ \ \ \ \ (gcd b (remainder a b))))
    </scm-code>

    Using this, we could make the obvious modification to define a <abbr|GCD>
    operation that works on term lists:

    <\scm-code>
      (define (gcd-terms a b)

      \ \ (if (empty-termlist? b)

      \ \ \ \ \ \ a

      \ \ \ \ \ \ (gcd-terms b (remainder-terms a b))))
    </scm-code>

    where <code*|remainder-terms> picks out the remainder component of the
    list returned by the term-list division operation <code*|div-terms> that
    was implemented in <hlink|Exercise 2.91|#Exercise-2_002e91>.
  </exercise>

  <\exercise>
    Using <code*|div-terms>, implement the procedure <code*|remainder-terms>
    and use this to define <code*|gcd-terms> as above. Now write a procedure
    <code*|gcd-poly> that computes the polynomial <abbr|GCD> of two polys.
    (The procedure should signal an error if the two polys are not in the
    same variable.) Install in the system a generic operation
    <code*|greatest-common-divisor> that reduces to <code*|gcd-poly> for
    polynomials and to ordinary <code*|gcd> for ordinary numbers. As a test,
    try

    <\scm-code>
      (define p1 (make-polynomial 'x '((4 1) (3 -1) (2 -2) (1 2))))

      (define p2 (make-polynomial 'x '((3 1) (1 -1))))

      (greatest-common-divisor p1 p2)
    </scm-code>

    and check your result by hand.
  </exercise>

  <\exercise>
    Define <math|P<rsub|1>>, <math|P<rsub|2>>, and <math|P<rsub|3>> to be the
    polynomials <math|<tabular|<tformat|<cwith|1|-1|1|1|cell-halign|r>|<cwith|1|-1|2|2|cell-halign|l>|<table|<row|<cell|P<rsub|1>:>|<cell|x<rsup|2>\<minus\>2x+1,>>|<row|<cell|P<rsub|2>:>|<cell|11x<rsup|2>+7,>>|<row|<cell|P<rsub|3>:>|<cell|13x+5.>>>>>>
    Now define <math|Q<rsub|1>> to be the product of <math|P<rsub|1>> and
    <math|P<rsub|2>>, and <math|Q<rsub|2>> to be the product of
    <math|P<rsub|1>> and <math|P<rsub|3>>, and use
    <code*|greatest-common-divisor> (<hlink|Exercise
    2.94|#Exercise-2_002e94>) to compute the <abbr|GCD> of <math|Q<rsub|1>>
    and <math|Q<rsub|2>>. Note that the answer is not the same as
    <math|P<rsub|1>>. This example introduces noninteger operations into the
    computation, causing difficulties with the <abbr|GCD>
    algorithm.<\footnote>
      In an implementation like <abbr|MIT> Scheme, this produces a polynomial
      that is indeed a divisor of <math|Q<rsub|1>> and <math|Q<rsub|2>>, but
      with rational coefficients. In many other Scheme systems, in which
      division of integers can produce limited-precision decimal numbers, we
      may fail to get a valid divisor.
    </footnote> To understand what is happening, try tracing
    <code*|gcd-terms> while computing the <abbr|GCD> or try performing the
    division by hand.

    We can solve the problem exhibited in <hlink|Exercise
    2.95|#Exercise-2_002e95> if we use the following modification of the
    <abbr|GCD> algorithm (which really works only in the case of polynomials
    with integer coefficients). Before performing any polynomial division in
    the <abbr|GCD> computation, we multiply the dividend by an integer
    constant factor, chosen to guarantee that no fractions will arise during
    the division process. Our answer will thus differ from the actual
    <abbr|GCD> by an integer constant factor, but this does not matter in the
    case of reducing rational functions to lowest terms; the <abbr|GCD> will
    be used to divide both the numerator and denominator, so the integer
    constant factor will cancel out.

    More precisely, if <math|P> and <math|Q> are polynomials, let
    <math|O<rsub|1>> be the order of <math|P> (i.e., the order of the largest
    term of <math|P>) and let <math|O<rsub|2>> be the order of <math|Q>. Let
    <math|c> be the leading coefficient of <math|Q>. Then it can be shown
    that, if we multiply <math|P> by the <label|index-integerizing-factor>
    <em|integerizing factor> <math|c<rsup|1+O<rsub|1>\<minus\>O<rsub|2>>>,
    the resulting polynomial can be divided by <math|Q> by using the
    <code*|div-terms> algorithm without introducing any fractions. The
    operation of multiplying the dividend by this constant and then dividing
    is sometimes called the <em|pseudodivision><index|pseudodivision> of
    <math|P> by <math|Q>. The remainder of the division is called th
    \ <em|pseudoremainder><index|pseudoremainder>.
  </exercise>

  <\exercise>
    \;

    <\enumerate>
      <item>Implement the procedure <code*|pseudoremainder-terms>, which is
      just like <code*|remainder-terms> except that it multiplies the
      dividend by the integerizing factor described above before calling
      <code*|div-terms>. Modify <code*|gcd-terms> to use
      <code*|pseudoremainder-terms>, and verify that
      <code*|greatest-common-divisor> now produces an answer with integer
      coefficients on the example in <hlink|Exercise
      2.95|#Exercise-2_002e95>.

      <item>The <abbr|GCD> now has integer coefficients, but they are larger
      than those of <math|P<rsub|1>>. Modify <code*|gcd-terms> so that it
      removes common factors from the coefficients of the answer by dividing
      all the coefficients by their (integer) greatest common divisor.
    </enumerate>

    Thus, here is how to reduce a rational function to lowest terms:

    <\itemize>
      <item>Compute the <abbr|GCD> of the numerator and denominator, using
      the version of <code*|gcd-terms> from <hlink|Exercise
      2.96|#Exercise-2_002e96>.

      <item>When you obtain the <abbr|GCD>, multiply both numerator and
      denominator by the same integerizing factor before dividing through by
      the <abbr|GCD>, so that division by the <abbr|GCD> will not introduce
      any noninteger coefficients. As the factor you can use the leading
      coefficient of the <abbr|GCD> raised to the power
      <math|1+O<rsub|1>\<minus\>O<rsub|2>>, where <math|O<rsub|2>> is the
      order of the <abbr|GCD> and <math|O<rsub|1>> is the maximum of the
      orders of the numerator and denominator. This will ensure that dividing
      the numerator and denominator by the <abbr|GCD> will not introduce any
      fractions.

      <item>The result of this operation will be a numerator and denominator
      with integer coefficients. The coefficients will normally be very large
      because of all of the integerizing factors, so the last step is to
      remove the redundant factors by computing the (integer) greatest common
      divisor of all the coefficients of the numerator and the denominator
      and dividing through by this factor.
    </itemize>
  </exercise>

  <\exercise>
    \;

    <\enumerate>
      <item>Implement this algorithm as a procedure <code*|reduce-terms> that
      takes two term lists <code*|n> and <code*|d> as arguments and returns a
      list <code*|nn>, <code*|dd>, which are <code*|n> and <code*|d> reduced
      to lowest terms via the algorithm given above. Also write a procedure
      <code*|reduce-poly>, analogous to <code*|add-poly>, that checks to see
      if the two polys have the same variable. If so, <code*|reduce-poly>
      strips off the variable and passes the problem to <code*|reduce-terms>,
      then reattaches the variable to the two term lists supplied by
      <code*|reduce-terms>.

      <item>Define a procedure analogous to <code*|reduce-terms> that does
      what the original <code*|make-rat> did for integers:

      <\scm-code>
        (define (reduce-integers n d)

        \ \ (let ((g (gcd n d)))

        \ \ \ \ (list (/ n g) (/ d g))))
      </scm-code>

      and define <code*|reduce> as a generic operation that calls
      <code*|apply-generic> to dispatch to either <code*|reduce-poly> (for
      <code*|polynomial> arguments) or <code*|reduce-integers> (for
      <code*|scheme-number> arguments). You can now easily make the
      rational-arithmetic package reduce fractions to lowest terms by having
      <code*|make-rat> call <code*|reduce> before combining the given
      numerator and denominator to form a rational number. The system now
      handles rational expressions in either integers or polynomials. To test
      your program, try the example at the beginning of this extended
      exercise:

      <\scm-code>
        (define p1 (make-polynomial 'x '((1 1)(0 1))))

        (define p2 (make-polynomial 'x '((3 1)(0 -1))))

        (define p3 (make-polynomial 'x '((1 1))))

        (define p4 (make-polynomial 'x '((2 1)(0 -1))))

        \;

        (define rf1 (make-rational p1 p2))

        (define rf2 (make-rational p3 p4))

        \;

        (add rf1 rf2)
      </scm-code>

      See if you get the correct answer, correctly reduced to lowest terms.

      The <abbr|GCD> computation is at the heart of any system that does
      operations on rational functions. The algorithm used above, although
      mathematically straightforward, is extremely slow. The slowness is due
      partly to the large number of division operations and partly to the
      enormous size of the intermediate coefficients generated by the
      pseudodivisions. One of the active areas in the development of
      algebraic-manipulation systems is the design of better algorithms for
      computing polynomial <abbr|GCD>s.<\footnote>
        One extremely efficient and elegant method for computing polynomial
        <abbr|GCD>s was discovered by Richard <hlink|Zippel
        (1979)|References.xhtml#Zippel-_00281979_0029>. The method is a
        probabilistic algorithm, as is the fast test for primality that we
        discussed in <hlink|Chapter 1|Chapter-1.xhtml#Chapter-1>. Zippel's
        book (<hlink|Zippel 1993|References.xhtml#Zippel-1993>) describes
        this method, together with other ways to compute polynomial
        <abbr|GCD>s.
      </footnote>
    </enumerate>
  </exercise>
</body>

<\initial>
  <\collection>
    <associate|chapter-nr|1>
    <associate|page-first|59>
    <associate|page-medium|paper>
    <associate|par-first|0tab>
    <associate|par-par-sep|1fn>
    <associate|section-nr|3>
    <associate|subsection-nr|4>
  </collection>
</initial>

<\references>
  <\collection>
    <associate|2.2.1|<tuple|2.2.1|69>>
    <associate|2.2.2|<tuple|2.2.2|75>>
    <associate|2.2.3|<tuple|2.2.3|80>>
    <associate|2.3.2|<tuple|2.3.2|102>>
    <associate|auto-1|<tuple|2|59>>
    <associate|auto-10|<tuple|pair|61>>
    <associate|auto-100|<tuple|prefix code|113>>
    <associate|auto-101|<tuple|2.18|113>>
    <associate|auto-102|<tuple|2.18|114>>
    <associate|auto-103|<tuple|2.41|115>>
    <associate|auto-104|<tuple|generic procedures|116>>
    <associate|auto-105|<tuple|generic procedures|116>>
    <associate|auto-106|<tuple|generic procedures|116>>
    <associate|auto-107|<tuple|2.4|118>>
    <associate|auto-108|<tuple|additively|118>>
    <associate|auto-109|<tuple|generic procedures|119>>
    <associate|auto-11|<tuple|list-structured|61>>
    <associate|auto-110|<tuple|type tags|119>>
    <associate|auto-111|<tuple|data-directed|119>>
    <associate|auto-112|<tuple|2.19|119>>
    <associate|auto-113|<tuple|2.4.1|119>>
    <associate|auto-114|<tuple|2.20|120>>
    <associate|auto-115|<tuple|2.4.2|122>>
    <associate|auto-116|<tuple|type tag|122>>
    <associate|auto-117|<tuple|2.21|124>>
    <associate|auto-118|<tuple|2.4.3|124>>
    <associate|auto-119|<tuple|dispatching on type|124>>
    <associate|auto-12|<tuple|list-structured|61>>
    <associate|auto-120|<tuple|additive|125>>
    <associate|auto-121|<tuple|data directed programming|125>>
    <associate|auto-122|<tuple|2.22|125>>
    <associate|auto-123|<tuple|package|126>>
    <associate|auto-124|<tuple|d|129>>
    <associate|auto-125|<tuple|message passing|129>>
    <associate|auto-126|<tuple|2.5|130>>
    <associate|auto-127|<tuple|2.23|130>>
    <associate|auto-128|<tuple|2.5.1|130>>
    <associate|auto-129|<tuple|ordinary|131>>
    <associate|auto-13|<tuple|2.1.2|62>>
    <associate|auto-130|<tuple|2.24|133>>
    <associate|auto-131|<tuple|2.5.2|134>>
    <associate|auto-132|<tuple|2.48|134>>
    <associate|auto-133|<tuple|coercion|134>>
    <associate|auto-134|<tuple|2.50|136>>
    <associate|auto-135|<tuple|hierarchy of types|136>>
    <associate|auto-136|<tuple|subtype|136>>
    <associate|auto-137|<tuple|supertype|136>>
    <associate|auto-138|<tuple|tower|136>>
    <associate|auto-139|<tuple|2.25|136>>
    <associate|auto-14|<tuple|abstraction barriers|62>>
    <associate|auto-140|<tuple|2.25|137>>
    <associate|auto-141|<tuple|2.26|137>>
    <associate|auto-142|<tuple|coerce|138>>
    <associate|auto-143|<tuple|2.5.3|139>>
    <associate|auto-144|<tuple|2.5.3|139>>
    <associate|auto-145|<tuple|indeterminates|139>>
    <associate|auto-146|<tuple|univariate polynomials|139>>
    <associate|auto-147|<tuple|poly|140>>
    <associate|auto-148|<tuple|2.56|142>>
    <associate|auto-149|<tuple|dense|142>>
    <associate|auto-15|<tuple|2.1|63>>
    <associate|auto-150|<tuple|sparse|142>>
    <associate|auto-151|<tuple|2.91|144>>
    <associate|auto-152|<tuple|2.92|144>>
    <associate|auto-153|<tuple|pseudodivision|145>>
    <associate|auto-154|<tuple|pseudoremainder|145>>
    <associate|auto-16|<tuple|2.1.3|64>>
    <associate|auto-17|<tuple|data|64>>
    <associate|auto-18|<tuple|abstract models|64>>
    <associate|auto-19|<tuple|algebraic specification|64>>
    <associate|auto-2|<tuple|2.1|59>>
    <associate|auto-20|<tuple|message passing|65>>
    <associate|auto-21|<tuple|Church numerals|65>>
    <associate|auto-22|<tuple|2.1.4|66>>
    <associate|auto-23|<tuple|width|67>>
    <associate|auto-24|<tuple|2.2|68>>
    <associate|auto-25|<tuple|box-and-pointer notation|68>>
    <associate|auto-26|<tuple|pointer|68>>
    <associate|auto-27|<tuple|2.2|68>>
    <associate|auto-28|<tuple|2.3|68>>
    <associate|auto-29|<tuple|closure property|69>>
    <associate|auto-3|<tuple|data abstraction|59>>
    <associate|auto-30|<tuple|hierarchical|69>>
    <associate|auto-31|<tuple|2.2.1|69>>
    <associate|auto-32|<tuple|2.4|69>>
    <associate|auto-33|<tuple|sequence|69>>
    <associate|auto-34|<tuple|list|70>>
    <associate|auto-35|<tuple|list|70>>
    <associate|auto-36|<tuple|list structure|70>>
    <associate|auto-37|<tuple|empty list|71>>
    <associate|auto-38|<tuple|nil|71>>
    <associate|auto-39|<tuple|2.9|71>>
    <associate|auto-4|<tuple|selectors|59>>
    <associate|auto-40|<tuple|dotted-tail notation|73>>
    <associate|auto-41|<tuple|list|73>>
    <associate|auto-42|<tuple|2.10|73>>
    <associate|auto-43|<tuple|2.2.2|75>>
    <associate|auto-44|<tuple|2.5|76>>
    <associate|auto-45|<tuple|trees|76>>
    <associate|auto-46|<tuple|2.6|76>>
    <associate|auto-47|<tuple|balanced|78>>
    <associate|auto-48|<tuple|4|79>>
    <associate|auto-49|<tuple|2.2.3|80>>
    <associate|auto-5|<tuple|constructors|59>>
    <associate|auto-50|<tuple|conventional interfaces|80>>
    <associate|auto-51|<tuple|enumerator|81>>
    <associate|auto-52|<tuple|filter|81>>
    <associate|auto-53|<tuple|map|81>>
    <associate|auto-54|<tuple|accumulator|81>>
    <associate|auto-55|<tuple|2.7|81>>
    <associate|auto-56|<tuple|2.7|81>>
    <associate|auto-57|<tuple|Horner's rule|84>>
    <associate|auto-58|<tuple|2.39|86>>
    <associate|auto-59|<tuple|comments|87>>
    <associate|auto-6|<tuple|2.1.1|59>>
    <associate|auto-60|<tuple|2.8|88>>
    <associate|auto-61|<tuple|2.2.4|89>>
    <associate|auto-62|<tuple|2.9|89>>
    <associate|auto-63|<tuple|2.9|89>>
    <associate|auto-64|<tuple|painter|89>>
    <associate|auto-65|<tuple|2.10|90>>
    <associate|auto-66|<tuple|2.11|91>>
    <associate|auto-67|<tuple|2.12|91>>
    <associate|auto-68|<tuple|2.13|92>>
    <associate|auto-69|<tuple|2.14|93>>
    <associate|auto-7|<tuple|wishful thinking|60>>
    <associate|auto-70|<tuple|2.44|93>>
    <associate|auto-71|<tuple|2.45|94>>
    <associate|auto-72|<tuple|2.15|94>>
    <associate|auto-73|<tuple|frame coordinate map|94>>
    <associate|auto-74|<tuple|2.47|95>>
    <associate|auto-75|<tuple|4|96>>
    <associate|auto-76|<tuple|2.51|98>>
    <associate|auto-77|<tuple|stratified design|98>>
    <associate|auto-78|<tuple|robust|98>>
    <associate|auto-79|<tuple|2.3|99>>
    <associate|auto-8|<tuple|wishful thinking|60>>
    <associate|auto-80|<tuple|2.3.1|99>>
    <associate|auto-81|<tuple|values|99>>
    <associate|auto-82|<tuple|2.3.2|102>>
    <associate|auto-83|<tuple|2.3.2|102>>
    <associate|auto-84|<tuple|2.3.2|103>>
    <associate|auto-85|<tuple|2.3.3|106>>
    <associate|auto-86|<tuple|<with|mode|<quote|math>|\<bullet\>>|106>>
    <associate|auto-87|<tuple|2.60|107>>
    <associate|auto-88|<tuple|2.62|108>>
    <associate|auto-89|<tuple|2.16|109>>
    <associate|auto-9|<tuple|pair|60>>
    <associate|auto-90|<tuple|B-trees|110>>
    <associate|auto-91|<tuple|red-black trees|110>>
    <associate|auto-92|<tuple|2.17|110>>
    <associate|auto-93|<tuple|2.40|111>>
    <associate|auto-94|<tuple|key|112>>
    <associate|auto-95|<tuple|2.3.4|112>>
    <associate|auto-96|<tuple|fixed-length|113>>
    <associate|auto-97|<tuple|variable-length|113>>
    <associate|auto-98|<tuple|separator code|113>>
    <associate|auto-99|<tuple|prefix|113>>
    <associate|ex2.12|<tuple|2.12|67>>
    <associate|ex2.2|<tuple|2.2|63>>
    <associate|ex2.21|<tuple|2.21|75>>
    <associate|ex2.3|<tuple|2.3|64>>
    <associate|ex2.30|<tuple|2.30|79>>
    <associate|ex2.79|<tuple|2.79|133>>
    <associate|ex2.83|<tuple|2.83|138>>
    <associate|fig2.1|<tuple|2.1|63>>
    <associate|fig2.10|<tuple|2.10|90>>
    <associate|fig2.11|<tuple|2.11|91>>
    <associate|fig2.12|<tuple|2.12|91>>
    <associate|fig2.13|<tuple|2.13|92>>
    <associate|fig2.18|<tuple|2.18|113>>
    <associate|fig2.19|<tuple|2.19|119>>
    <associate|fig2.2|<tuple|2.2|68>>
    <associate|fig2.20|<tuple|2.20|120>>
    <associate|fig2.21|<tuple|2.21|124>>
    <associate|fig2.22|<tuple|2.22|125>>
    <associate|fig2.23|<tuple|2.23|130>>
    <associate|fig2.24|<tuple|2.24|133>>
    <associate|fig2.25|<tuple|2.25|136>>
    <associate|fig2.26|<tuple|2.26|137>>
    <associate|fig2.3|<tuple|2.3|68>>
    <associate|fig2.4|<tuple|2.4|69>>
    <associate|fig2.5|<tuple|2.5|76>>
    <associate|fig2.6|<tuple|2.6|76>>
    <associate|fig2.7|<tuple|2.7|81>>
    <associate|fig2.8|<tuple|2.8|88>>
    <associate|fig2.9|<tuple|2.9|89>>
    <associate|footnote-2.1|<tuple|2.1|60>>
    <associate|footnote-2.10|<tuple|2.10|73>>
    <associate|footnote-2.11|<tuple|2.11|74>>
    <associate|footnote-2.12|<tuple|2.12|77>>
    <associate|footnote-2.13|<tuple|2.13|82>>
    <associate|footnote-2.14|<tuple|2.14|84>>
    <associate|footnote-2.15|<tuple|2.15|84>>
    <associate|footnote-2.16|<tuple|2.16|85>>
    <associate|footnote-2.17|<tuple|2.17|86>>
    <associate|footnote-2.18|<tuple|2.18|86>>
    <associate|footnote-2.19|<tuple|2.19|87>>
    <associate|footnote-2.2|<tuple|2.2|61>>
    <associate|footnote-2.20|<tuple|2.20|87>>
    <associate|footnote-2.21|<tuple|2.21|89>>
    <associate|footnote-2.22|<tuple|2.22|90>>
    <associate|footnote-2.23|<tuple|2.23|94>>
    <associate|footnote-2.24|<tuple|2.24|94>>
    <associate|footnote-2.25|<tuple|2.25|95>>
    <associate|footnote-2.26|<tuple|2.26|95>>
    <associate|footnote-2.27|<tuple|2.27|96>>
    <associate|footnote-2.28|<tuple|2.28|97>>
    <associate|footnote-2.29|<tuple|2.29|97>>
    <associate|footnote-2.3|<tuple|2.3|61>>
    <associate|footnote-2.30|<tuple|2.30|98>>
    <associate|footnote-2.31|<tuple|2.31|99>>
    <associate|footnote-2.32|<tuple|2.32|100>>
    <associate|footnote-2.33|<tuple|2.33|100>>
    <associate|footnote-2.34|<tuple|2.34|100>>
    <associate|footnote-2.35|<tuple|2.35|101>>
    <associate|footnote-2.36|<tuple|2.36|106>>
    <associate|footnote-2.37|<tuple|2.37|109>>
    <associate|footnote-2.38|<tuple|2.38|109>>
    <associate|footnote-2.39|<tuple|2.39|110>>
    <associate|footnote-2.4|<tuple|2.4|64>>
    <associate|footnote-2.40|<tuple|2.40|111>>
    <associate|footnote-2.41|<tuple|2.41|114>>
    <associate|footnote-2.42|<tuple|2.42|119>>
    <associate|footnote-2.43|<tuple|2.43|121>>
    <associate|footnote-2.44|<tuple|2.44|126>>
    <associate|footnote-2.45|<tuple|2.45|126>>
    <associate|footnote-2.46|<tuple|2.46|127>>
    <associate|footnote-2.47|<tuple|2.47|129>>
    <associate|footnote-2.48|<tuple|2.48|134>>
    <associate|footnote-2.49|<tuple|2.49|135>>
    <associate|footnote-2.5|<tuple|2.5|69>>
    <associate|footnote-2.50|<tuple|2.50|135>>
    <associate|footnote-2.51|<tuple|2.51|137>>
    <associate|footnote-2.52|<tuple|2.52|138>>
    <associate|footnote-2.53|<tuple|2.53|139>>
    <associate|footnote-2.54|<tuple|2.54|139>>
    <associate|footnote-2.55|<tuple|2.55|141>>
    <associate|footnote-2.56|<tuple|2.56|142>>
    <associate|footnote-2.57|<tuple|2.57|142>>
    <associate|footnote-2.58|<tuple|2.58|142>>
    <associate|footnote-2.59|<tuple|2.59|145>>
    <associate|footnote-2.6|<tuple|2.6|69>>
    <associate|footnote-2.60|<tuple|2.60|145>>
    <associate|footnote-2.61|<tuple|2.61|146>>
    <associate|footnote-2.7|<tuple|2.7|70>>
    <associate|footnote-2.8|<tuple|2.8|70>>
    <associate|footnote-2.9|<tuple|2.9|71>>
    <associate|footnr-2.1|<tuple|2.1|60>>
    <associate|footnr-2.10|<tuple|2.10|73>>
    <associate|footnr-2.11|<tuple|2.11|74>>
    <associate|footnr-2.12|<tuple|2.12|77>>
    <associate|footnr-2.13|<tuple|2.13|82>>
    <associate|footnr-2.14|<tuple|2.14|84>>
    <associate|footnr-2.15|<tuple|2.15|84>>
    <associate|footnr-2.16|<tuple|2.16|85>>
    <associate|footnr-2.17|<tuple|2.17|86>>
    <associate|footnr-2.18|<tuple|2.18|86>>
    <associate|footnr-2.19|<tuple|2.19|87>>
    <associate|footnr-2.2|<tuple|2.2|61>>
    <associate|footnr-2.20|<tuple|comments|87>>
    <associate|footnr-2.21|<tuple|2.21|89>>
    <associate|footnr-2.22|<tuple|2.22|90>>
    <associate|footnr-2.23|<tuple|2.23|94>>
    <associate|footnr-2.24|<tuple|2.24|94>>
    <associate|footnr-2.25|<tuple|2.25|95>>
    <associate|footnr-2.26|<tuple|2.26|95>>
    <associate|footnr-2.27|<tuple|2.27|96>>
    <associate|footnr-2.28|<tuple|2.28|97>>
    <associate|footnr-2.29|<tuple|2.29|97>>
    <associate|footnr-2.3|<tuple|2.3|61>>
    <associate|footnr-2.30|<tuple|2.30|98>>
    <associate|footnr-2.31|<tuple|2.31|99>>
    <associate|footnr-2.32|<tuple|2.32|100>>
    <associate|footnr-2.33|<tuple|2.33|100>>
    <associate|footnr-2.34|<tuple|2.34|100>>
    <associate|footnr-2.35|<tuple|2.35|101>>
    <associate|footnr-2.36|<tuple|<with|mode|<quote|math>|\<bullet\>>|106>>
    <associate|footnr-2.37|<tuple|2.37|109>>
    <associate|footnr-2.38|<tuple|2.38|109>>
    <associate|footnr-2.39|<tuple|red-black trees|110>>
    <associate|footnr-2.4|<tuple|algebraic specification|64>>
    <associate|footnr-2.40|<tuple|2.40|111>>
    <associate|footnr-2.41|<tuple|2.41|114>>
    <associate|footnr-2.42|<tuple|2.42|119>>
    <associate|footnr-2.43|<tuple|2.43|121>>
    <associate|footnr-2.44|<tuple|2.44|126>>
    <associate|footnr-2.45|<tuple|2.45|126>>
    <associate|footnr-2.46|<tuple|2.46|127>>
    <associate|footnr-2.47|<tuple|2.47|129>>
    <associate|footnr-2.48|<tuple|2.48|134>>
    <associate|footnr-2.49|<tuple|2.49|135>>
    <associate|footnr-2.5|<tuple|2.5|69>>
    <associate|footnr-2.50|<tuple|2.50|135>>
    <associate|footnr-2.51|<tuple|2.51|137>>
    <associate|footnr-2.52|<tuple|2.52|138>>
    <associate|footnr-2.53|<tuple|2.53|139>>
    <associate|footnr-2.54|<tuple|2.54|139>>
    <associate|footnr-2.55|<tuple|2.55|141>>
    <associate|footnr-2.56|<tuple|2.56|142>>
    <associate|footnr-2.57|<tuple|2.57|142>>
    <associate|footnr-2.58|<tuple|2.58|142>>
    <associate|footnr-2.59|<tuple|2.59|145>>
    <associate|footnr-2.6|<tuple|2.6|69>>
    <associate|footnr-2.60|<tuple|2.60|145>>
    <associate|footnr-2.61|<tuple|2.61|146>>
    <associate|footnr-2.7|<tuple|list structure|70>>
    <associate|footnr-2.8|<tuple|2.8|70>>
    <associate|footnr-2.9|<tuple|2.9|71>>
    <associate|index-Euclidean-ring|<tuple|2.59|145>>
    <associate|index-generic-procedures|<tuple|2.41|116>>
    <associate|index-integerizing-factor|<tuple|2.60|145>>
    <associate|index-quote|<tuple|2.3.1|99>>
    <associate|index-rational-functions|<tuple|2.92|144>>
  </collection>
</references>

<\auxiliary>
  <\collection>
    <\associate|figure>
      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.1>|>
        Data-abstraction barriers in the rational-number package.
      </surround>|<pageref|auto-15>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.2>|>
        Box-and-pointer representation of <with|font-family|<quote|tt>|(cons
        1 2)>.
      </surround>|<pageref|auto-27>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.3>|>
        Two ways to combine 1, 2, 3, and 4 using pairs.
      </surround>|<pageref|auto-28>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.4>|>
        The sequence 1, 2, 3, 4 represented as a chain of pairs.
      </surround>|<pageref|auto-32>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.5>|>
        Structure formed by <with|font-family|<quote|tt>|(cons (list 1 2)
        (list 3 4))>.
      </surround>|<pageref|auto-44>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.6>|>
        The list structure in <locus|<id|%-3FB881BF8--3FA74D7B8>|<link|hyperlink|<id|%-3FB881BF8--3FA74D7B8>|<url|#fig2.5>>|Figure
        2.5> viewed as a tree.
      </surround>|<pageref|auto-46>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.7>|>
        The signal-flow plans for the procedures
        <with|font-family|<quote|tt>|sum-odd-squares> (top) and
        <with|font-family|<quote|tt>|even-fibs> (bottom) reveal the
        commonality between the two programs.
      </surround>|<pageref|auto-55>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.8>|>
        A solution to the eight-queens puzzle.
      </surround>|<pageref|auto-60>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.9>|>
        Designs generated with the picture language.
      </surround>|<pageref|auto-62>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.10>|>
        Images produced by the <with|font-family|<quote|tt>|wave> painter,
        with respect to four different frames. The frames, shown with dotted
        lines, are not part of the images.
      </surround>|<pageref|auto-65>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.11>|>
        Images of William Barton Rogers, founder and first president of
        <rigid|MIT>, painted with respect to the same four frames as in
        <locus|<id|%-3FB881BF8--3FA7C6250>|<link|hyperlink|<id|%-3FB881BF8--3FA7C6250>|<url|#fig2.10>>|Figure
        2.10> (original image from Wikimedia Commons).
      </surround>|<pageref|auto-66>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.12>|>
        Creating a complex figure, starting from the
        <with|font-family|<quote|tt>|wave> painter of
        <locus|<id|%-3FB881BF8--3FA7AC150>|<link|hyperlink|<id|%-3FB881BF8--3FA7AC150>|<url|#fig2.10>>|Figure
        2.10>.
      </surround>|<pageref|auto-67>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.13>|>
        Recursive plans for <with|font-family|<quote|tt>|right-split> and
        <with|font-family|<quote|tt>|corner-split>.
      </surround>|<pageref|auto-68>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.14>|>
        The recursive operations <with|font-family|<quote|tt>|right-split>
        and <with|font-family|<quote|tt>|corner-split> applied to the
        painters <with|font-family|<quote|tt>|wave> and
        <with|font-family|<quote|tt>|rogers>. Combining four
        <with|font-family|<quote|tt>|corner-split> figures produces symmetric
        <with|font-family|<quote|tt>|square-limit> designs as shown in
        <locus|<id|%-3FB881BF8--3FA7AF760>|<link|hyperlink|<id|%-3FB881BF8--3FA7AF760>|<url|#fig2.9>>|Figure
        2.9>.
      </surround>|<pageref|auto-69>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.15>|>
        \ A frame is described by three vectors \V an origin and two edges.
      </surround>|<pageref|auto-72>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.16>|>
        Various binary trees that represent the set
        <with|mode|<quote|math>|<around*|{|1,3,5,7,9,11|}>>.
      </surround>|<pageref|auto-89>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.17>|>
        Unbalanced tree produced by adjoining 1 through 7 in sequence.
      </surround>|<pageref|auto-92>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.18>|>
        A Huffman encoding tree.
      </surround>|<pageref|auto-101>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.19>|>
        Data-abstraction barriers in the complex-number system.
      </surround>|<pageref|auto-112>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.20>|>
        Complex numbers as points in the plane.
      </surround>|<pageref|auto-114>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.21>|>
        Structure of the generic complex-arithmetic system.
      </surround>|<pageref|auto-117>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.22>|>
        Table of operations for the complex-number system.
      </surround>|<pageref|auto-122>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.23>|>
        Generic arithmetic system.
      </surround>|<pageref|auto-127>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.24>|>
        Representation of 3 + 4<with|font-shape|<quote|italic>|i>
        <no-break><specific|screen|<resize|<move|<with|color|<quote|#A0A0FF>|->|-0.3em|>|0em||0em|>>in
        rectangular form.
      </surround>|<pageref|auto-130>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.25>|>
        A tower of types.
      </surround>|<pageref|auto-139>>

      <tuple|normal|<\surround|<hidden-binding|<tuple>|2.26>|>
        Relations among types of geometric figures.
      </surround>|<pageref|auto-141>>
    </associate>
    <\associate|idx>
      <tuple|<tuple|data abstraction>|<pageref|auto-3>>

      <tuple|<tuple|selectors>|<pageref|auto-4>>

      <tuple|<tuple|constructors>|<pageref|auto-5>>

      <tuple|<tuple|wishful thinking>|<pageref|auto-7>>

      <tuple|<tuple|pair>|<pageref|auto-9>>

      <tuple|<tuple|pair>|<pageref|auto-10>>

      <tuple|<tuple|list-structured>|<pageref|auto-11>>

      <tuple|<tuple|abstraction barriers>|<pageref|auto-14>>

      <tuple|<tuple|data>|<pageref|auto-17>>

      <tuple|<tuple|abstract models>|<pageref|auto-18>>

      <tuple|<tuple|algebraic specification>|<pageref|auto-19>>

      <tuple|<tuple|message passing>|<pageref|auto-20>>

      <tuple|<tuple|Church numerals>|<pageref|auto-21>>

      <tuple|<tuple|width>|<pageref|auto-23>>

      <tuple|<tuple|box-and-pointer notation>|<pageref|auto-25>>

      <tuple|<tuple|pointer>|<pageref|auto-26>>

      <tuple|<tuple|closure property>|<pageref|auto-29>>

      <tuple|<tuple|hierarchical>|<pageref|auto-30>>

      <tuple|<tuple|sequence>|<pageref|auto-33>>

      <tuple|<tuple|list>|<pageref|auto-34>>

      <tuple|<tuple|list>|<pageref|auto-35>>

      <tuple|<tuple|list structure>|<pageref|auto-36>>

      <tuple|<tuple|empty list>|<pageref|auto-37>>

      <tuple|<tuple|nil>|<pageref|auto-38>>

      <tuple|<tuple|dotted-tail notation>|<pageref|auto-40>>

      <tuple|<tuple|list>|<pageref|auto-41>>

      <tuple|<tuple|trees>|<pageref|auto-45>>

      <tuple|<tuple|balanced>|<pageref|auto-47>>

      <tuple|<tuple|conventional interfaces>|<pageref|auto-50>>

      <tuple|<tuple|enumerator>|<pageref|auto-51>>

      <tuple|<tuple|filter>|<pageref|auto-52>>

      <tuple|<tuple|map>|<pageref|auto-53>>

      <tuple|<tuple|accumulator>|<pageref|auto-54>>

      <tuple|<tuple|Horner's rule>|<pageref|auto-57>>

      <tuple|<tuple|comments>|<pageref|auto-59>>

      <tuple|<tuple|painter>|<pageref|auto-64>>

      <tuple|<tuple|frame coordinate map>|<pageref|auto-73>>

      <tuple|<tuple|stratified design>|<pageref|auto-77>>

      <tuple|<tuple|robust>|<pageref|auto-78>>

      <tuple|<tuple|values>|<pageref|auto-81>>

      <tuple|<tuple|B-trees>|<pageref|auto-90>>

      <tuple|<tuple|red-black trees>|<pageref|auto-91>>

      <tuple|<tuple|key>|<pageref|auto-94>>

      <tuple|<tuple|fixed-length>|<pageref|auto-96>>

      <tuple|<tuple|variable-length>|<pageref|auto-97>>

      <tuple|<tuple|separator code>|<pageref|auto-98>>

      <tuple|<tuple|prefix>|<pageref|auto-99>>

      <tuple|<tuple|prefix code>|<pageref|auto-100>>

      <tuple|<tuple|generic procedures>|<pageref|auto-104>>

      <tuple|<tuple|additively>|<pageref|auto-108>>

      <tuple|<tuple|generic procedures>|<pageref|auto-109>>

      <tuple|<tuple|type tags>|<pageref|auto-110>>

      <tuple|<tuple|data-directed>|<pageref|auto-111>>

      <tuple|<tuple|type tag>|<pageref|auto-116>>

      <tuple|<tuple|dispatching on type>|<pageref|auto-119>>

      <tuple|<tuple|additive>|<pageref|auto-120>>

      <tuple|<tuple|data directed programming>|<pageref|auto-121>>

      <tuple|<tuple|package>|<pageref|auto-123>>

      <tuple|<tuple|message passing>|<pageref|auto-125>>

      <tuple|<tuple|ordinary>|<pageref|auto-129>>

      <tuple|<tuple|coercion>|<pageref|auto-133>>

      <tuple|<tuple|hierarchy of types>|<pageref|auto-135>>

      <tuple|<tuple|subtype>|<pageref|auto-136>>

      <tuple|<tuple|supertype>|<pageref|auto-137>>

      <tuple|<tuple|tower>|<pageref|auto-138>>

      <tuple|<tuple|coerce>|<pageref|auto-142>>

      <tuple|<tuple|indeterminates>|<pageref|auto-145>>

      <tuple|<tuple|univariate polynomials>|<pageref|auto-146>>

      <tuple|<tuple|poly>|<pageref|auto-147>>

      <tuple|<tuple|dense>|<pageref|auto-149>>

      <tuple|<tuple|sparse>|<pageref|auto-150>>

      <tuple|<tuple|pseudodivision>|<pageref|auto-153>>

      <tuple|<tuple|pseudoremainder>|<pageref|auto-154>>
    </associate>
    <\associate|toc>
      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|2<space|2spc>Building
      Abstractions with Data> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-1><vspace|0.5fn>

      2.1<space|2spc>Introduction to Data Abstraction
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-2>

      <with|par-left|<quote|1tab>|2.1.1<space|2spc>Example: Arithmetic
      Operations for Rational Numbers <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-6>>

      <with|par-left|<quote|4tab>|Pairs <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-8><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Representing rational numbers
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-12><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.1.2<space|2spc>Abstraction Barriers
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-13>>

      <with|par-left|<quote|1tab>|2.1.3<space|2spc>What Is Meant by Data?
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-16>>

      <with|par-left|<quote|1tab>|2.1.4<space|2spc>Extended Exercise:
      Interval Arithmetic <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-22>>

      2.2<space|2spc>Hierarchical Data and the Closure Property
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-24>

      <with|par-left|<quote|1tab>|2.2.1<space|2spc>Representing Sequences
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-31>>

      <with|par-left|<quote|4tab>|List operations
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-39><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Mapping over lists
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-42><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.2.2<space|2spc>Hierarchical Structures
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-43>>

      <with|par-left|<quote|4tab>|Mapping over trees
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-48><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.2.3<space|2spc>Sequences as Conventional
      Interfaces <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-49>>

      <with|par-left|<quote|4tab>|Sequence Operations
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-56><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Nested Mappings
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-58><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.2.4<space|2spc>Example: A Picture
      Language <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-61>>

      <with|par-left|<quote|4tab>|The picture language
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-63><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Higher-order operations
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-70><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Frames <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-71><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Painters
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-74><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Transforming and combining painters
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-75><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Levels of language for robust design
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-76><vspace|0.15fn>>

      2.3<space|2spc>Symbolic Data <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-79>

      <with|par-left|<quote|1tab>|2.3.1<space|2spc>Quotation
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-80>>

      <with|par-left|<quote|1tab>|2.3.2<space|2spc>Example: Symbolic
      Differentiation <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-82>>

      <with|par-left|<quote|4tab>|The differentiation program with abstract
      data <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-83><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Representing algebraic expressions
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-84><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.3.3<space|2spc>Example: Representing Sets
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-85>>

      <with|par-left|<quote|4tab>|Sets as unordered lists
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-86><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Sets as ordered lists
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-87><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Sets as binary trees
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-88><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Sets and information retrieval
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-93><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.3.4<space|2spc>Example: Huffman Encoding
      Trees <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-95>>

      <with|par-left|<quote|4tab>|Generating Huffman trees
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-102><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Representing Huffman trees
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-103><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|The decoding procedure
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-105><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Sets of weighted elements
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-106><vspace|0.15fn>>

      2.4<space|2spc>Multiple Representations for Abstract Data
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-107>

      <with|par-left|<quote|1tab>|2.4.1<space|2spc>Representations for
      Complex Numbers <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-113>>

      <with|par-left|<quote|1tab>|2.4.2<space|2spc>Tagged data
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-115>>

      <with|par-left|<quote|1tab>|2.4.3<space|2spc>Data-Directed Programming
      and Additivity <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-118>>

      <with|par-left|<quote|4tab>|Message passing
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-124><vspace|0.15fn>>

      2.5<space|2spc>Systems with Generic Operations
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-126>

      <with|par-left|<quote|1tab>|2.5.1<space|2spc>Generic Arithmetic
      Operations <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-128>>

      <with|par-left|<quote|1tab>|2.5.2<space|2spc>Combining Data of
      Different Types <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-131>>

      <with|par-left|<quote|4tab>|Coercion
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-132><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Hierarchies of types
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-134><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Inadequacies of hierarchies
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-140><vspace|0.15fn>>

      <with|par-left|<quote|1tab>|2.5.3<space|2spc>Example: Symbolic Algebra
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-143>>

      <with|par-left|<quote|4tab>|Arithmetic on polynomials
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-144><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Representing term lists
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-148><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Hierarchies of types in symbolic algebra
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-151><vspace|0.15fn>>

      <with|par-left|<quote|4tab>|Extended exercise: Rational functions
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-152><vspace|0.15fn>>
    </associate>
  </collection>
</auxiliary>